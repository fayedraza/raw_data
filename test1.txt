throw IllegalArgumentException if !((Key)key) dot isCompatibleValue(value).
throw IllegalArgumentException if the Key dot isCompatibleValue() method of the specified key returns false for the specified value.
throw IllegalArgumentException if imode < 0.
throw IllegalArgumentException if the mode argument is not equal to one of "r", "rw", "rws", or "rwd".
throw FileNotFoundException if file dot isInvalid().
throw FileNotFoundException if the mode is "r" but the given file object does not denote an existing regular file, or if the mode begins with "rw" but the given file object does not denote an existing, writable regular file and a new regular file of that name cannot be created, or if some other error occurs while opening or creating the file.
throw EOFException if (ch1 | ch2) < 0.
throw EOFException if this file reaches the end before reading two bytes.
throw EOFException if count < 0.
throw EOFException if this file reaches the end before reading all the bytes.
throw EOFException if ch < 0.
throw EOFException if this file has reached the end.
throw EOFException if ch < 0.
throw EOFException if this file has reached the end.
throw EOFException if (ch1 | ch2 | ch3| ch4) < 0.
throw EOFException if this file reaches the end before reading four bytes.
throw IOException if pos < 0.
throw IOException if pos is less than 0 or if an I/O error occurs.
throw EOFException if ch < 0.
throw EOFException if this file has reached the end.
throw EOFException if (ch1 | ch2) < 0.
throw EOFException if this file reaches the end before reading two bytes.
throw EOFException if (ch1 | ch2) < 0.
throw EOFException if this file reaches the end before reading two bytes.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw InterruptedException if Thread dot interrupted().
throw InterruptedException if interrupted while waiting.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw IllegalArgumentException if parallelism <= 0 || parallelism > MAX_CAP || maximumPoolSize < parallelism || keepAliveTime <= 0L.
throw IllegalArgumentException if parallelism is less than or equal to zero, or is greater than implementation limit, or if maximumPoolSize is less than parallelism, of if the keepAliveTime is less than or equal to zero.
throw NullPointerException if factory == null.
throw NullPointerException if the factory is null.
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if formatName == null.
throw IllegalArgumentException if formatName is null.
throw IllegalArgumentException if fileSuffix == null.
throw IllegalArgumentException if fileSuffix is null.
throw IllegalArgumentException if writer == null.
throw IllegalArgumentException if writer is null.
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if input is null.
throw IllegalArgumentException if reader == null.
throw IllegalArgumentException if reader is null.
throw IllegalArgumentException if output == null.
throw IllegalArgumentException if output is null.
throw IllegalArgumentException if (cacheDirectory != null) && !(cacheDirectory dot isDirectory()).
throw IllegalArgumentException if cacheDir is non-null but is not a directory.
throw IllegalArgumentException if formatName == null.
throw IllegalArgumentException if formatName is null.
throw IllegalArgumentException if MIMEType == null.
throw IllegalArgumentException if MIMEType is null.
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if input is null.
throw IllegalArgumentException if MIMEType == null.
throw IllegalArgumentException if MIMEType is null.
throw IllegalArgumentException if reader == null.
throw IllegalArgumentException if reader or writer is null.
throw IllegalArgumentException if writer == null.
throw IllegalArgumentException if reader or writer is null.
throw IllegalArgumentException if fileSuffix == null.
throw IllegalArgumentException if fileSuffix is null.
throw IllegalArgumentException if type == null.
throw IllegalArgumentException if any parameter is null.
throw IllegalArgumentException if formatName == null.
throw IllegalArgumentException if any parameter is null.
throw IllegalArgumentException if im == null.
throw IllegalArgumentException if any parameter is null.
throw IllegalArgumentException if formatName == null.
throw IllegalArgumentException if any parameter is null.
throw IllegalArgumentException if output == null.
throw IllegalArgumentException if any parameter is null.
throw IllegalArgumentException if output == null.
throw IllegalArgumentException if any parameter is null.
throw IllegalArgumentException if output == null.
throw IllegalArgumentException if any parameter is null.
throw SyncFactoryException if ctx == null.
throw SyncFactoryException if the supplied JNDI context is null.
throw NullPointerException if logger == null.
throw NullPointerException if the logger is null.
throw NullPointerException if logger == null.
throw NullPointerException if the logger is null.
throw SyncFactoryException if result == null.
throw SyncFactoryException if no logging object has been set.
throw SyncFactoryException if providerID == null.
throw SyncFactoryException if If the SyncProvider cannot be found, the providerID is null, or some error was encountered when trying to invoke this provider.
throw IllegalArgumentException if attr == null.
throw IllegalArgumentException if If attr is null, or if mod_op is not one of the ones specified above.
throw IllegalArgumentException if member < 0.
throw IllegalArgumentException if the range is non-null and lowerBound is less than zero.
throw IllegalArgumentException if lowerBound <= upperBound && lowerBound < 0.
throw IllegalArgumentException if the range is non-null and lowerBound is less than zero.
throw NullPointerException if c == null.
throw NullPointerException if c is null.
throw IllegalArgumentException if width < 0 || height < 0.
throw IllegalArgumentException if width or height is < 0.
throw NullPointerException if c == null.
throw NullPointerException if c is null.
throw IllegalArgumentException if compositeType == null.
throw IllegalArgumentException if compositeType is null, or items is null or empty, or one of the keys in items is a null or empty string.
throw OpenDataException if !namesFromType dot equals(namesFromItems).
throw OpenDataException if items' size differs from the number of items defined in compositeType, or one of the keys in items does not exist as an item name defined in compositeType, or one of the values in items is not a valid value for the corresponding item as defined in compositeType.
throw OpenDataException if value != null.
throw OpenDataException if items' size differs from the number of items defined in compositeType, or one of the keys in items does not exist as an item name defined in compositeType, or one of the values in items is not a valid value for the corresponding item as defined in compositeType.
throw IllegalArgumentException if (key == null) || (key dot trim() dot equals("")).
throw IllegalArgumentException if key is a null or empty String.
throw InvalidKeyException if !contents dot containsKey(key dot trim()).
throw InvalidKeyException if key is not an existing item name for this CompositeData instance.
throw IllegalArgumentException if contents == null.
throw IllegalArgumentException if contents is null.
throw IllegalArgumentException if mgr != null.
throw IllegalArgumentException if this method is not supported.
throw NumberFormatException if i < MIN_VALUE || i > MAX_VALUE.
throw NumberFormatException if the String does not contain a parsable byte.
throw NumberFormatException if i < MIN_VALUE || i > MAX_VALUE.
throw NumberFormatException if the string does not contain a parsable byte.
throw IndexOutOfBoundsException if off < 0 || len < 0 || off > b dot length - len.
throw IndexOutOfBoundsException if off is negative, len is negative, or len is greater than b dot length - off.
throw ZipException if len == -1.
throw ZipException if a ZIP file error has occurred.
throw ZipException if remaining == 0 && entry dot crc != crc dot getValue().
throw ZipException if a ZIP file error has occurred.
throw IllegalArgumentException if n < 0.
throw IllegalArgumentException if n < 0.
throw NullPointerException if name == null.
throw NullPointerException if If the name is null.
throw NoSuchElementException if currentPosition >= maxPosition.
throw NoSuchElementException if there are no more tokens in this tokenizer's string.
throw IllegalArgumentException if KEY_TEXT_ANTIALIASING dot isCompatibleValue(aaHint).
throw IllegalArgumentException if the hints are not one of the legal values.
throw IllegalArgumentException if KEY_FRACTIONALMETRICS dot isCompatibleValue(fmHint).
throw IllegalArgumentException if the hints are not one of the legal values.
throw IllegalArgumentException if raf == null.
throw IllegalArgumentException if raf is null.
throw IndexOutOfBoundsException if pos < flushedPos.
throw IndexOutOfBoundsException if pos is smaller than the flushed position.
throw NegativeArraySizeException if npoints < 0.
throw NegativeArraySizeException if the value of npoints is negative.
throw IndexOutOfBoundsException if npoints > xpoints dot length || npoints > ypoints dot length.
throw IndexOutOfBoundsException if npoints is greater than the length of xpoints or the length of ypoints.
throw ParseException if parsePosition dot index == 0.
throw ParseException if the beginning of the specified string cannot be parsed.
throw IllegalArgumentException if delay < 0.
throw IllegalArgumentException if firstTime dot getTime() < 0 or period <= 0.
throw IllegalArgumentException if period <= 0.
throw IllegalArgumentException if firstTime dot getTime() < 0 or period <= 0.
throw IllegalArgumentException if period <= 0.
throw IllegalArgumentException if firstTime dot getTime() < 0 or period <= 0.
throw IllegalArgumentException if delay < 0.
throw IllegalArgumentException if firstTime dot getTime() < 0, or period <= 0.
throw IllegalArgumentException if delay < 0.
throw IllegalArgumentException if firstTime dot getTime() < 0, or period <= 0.
throw IllegalArgumentException if period <= 0.
throw IllegalArgumentException if firstTime dot getTime() < 0, or period <= 0.
throw IllegalArgumentException if period <= 0.
throw IllegalArgumentException if firstTime dot getTime() < 0, or period <= 0.
throw IllegalThreadStateException if destroyed || (nthreads > 0).
throw IllegalThreadStateException if the thread group is not empty or if the thread group has already been destroyed.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported or the range of values exceeds an int.
throw DateTimeException if rules dot isValidOffset(localDateTime,offset) == false.
throw DateTimeException if the combination of arguments is invalid.
throw DateTimeException if rules dot isValidOffset(localDateTime,offset) == false.
throw DateTimeException if the combination of arguments is invalid.
throw NullPointerException if theme == null.
throw NullPointerException if theme is null.
throw NullPointerException if file == null.
throw NullPointerException if the file argument is null.
throw NullPointerException if file == null.
throw NullPointerException if princ is null.
throw NullPointerException if princ == null.
throw NullPointerException if princ is null.
throw NullPointerException if file == null.
throw NullPointerException if princ is null.
throw NullPointerException if princ == null.
throw NullPointerException if princ is null.
throw IllegalArgumentException if port < 0.
throw IllegalArgumentException if port is negative.
throw IllegalArgumentException if credentialsTypes != null && credentialsFilter != null.
throw IllegalArgumentException if port is negative.
throw IllegalArgumentException if timeoutMillis < 0.
throw IllegalArgumentException if timeoutMillis is negative, or if the value of nanos is out of range.
throw IllegalArgumentException if nanos < 0 || nanos > 999999.
throw IllegalArgumentException if timeoutMillis is negative, or if the value of nanos is out of range.
throw NullPointerException if username == null || realm == null.
throw NullPointerException if either username or realm are null.
throw IllegalArgumentException if minMaxPathLen < -2.
throw IllegalArgumentException if the value is less than -2.
throw IOException if certPolicySet == null.
throw IOException if a parsing error occurs on the OID such as the first component is not 0, 1 or 2 or the second component is greater than 39.
throw IllegalArgumentException if dataLength > 65535.
throw IllegalArgumentException if dataOffset or dataLength are negative or if dataOffset + dataLength are greater than data dot length, or if ne is negative or greater than 65536, or if dataLength is greater than 65535.
throw IllegalArgumentException if ne < 0.
throw IllegalArgumentException if dataOffset or dataLength are negative or if dataOffset + dataLength are greater than data dot length, or if ne is negative or greater than 65536, or if dataLength is greater than 65535.
throw IllegalArgumentException if ne > 65536.
throw IllegalArgumentException if dataOffset or dataLength are negative or if dataOffset + dataLength are greater than data dot length, or if ne is negative or greater than 65536, or if dataLength is greater than 65535.
throw SignatureException if state != SIGN.
throw SignatureException if this signature object is not initialized properly, if this signature algorithm is unable to process the input data provided, or if len is less than the actual signature length.
throw IllegalArgumentException if outbuf == null.
throw IllegalArgumentException if outbuf is null, or offset or len is less than 0, or the sum of offset and len is greater than the length of outbuf.
throw IllegalArgumentException if offset < 0 || len < 0.
throw IllegalArgumentException if outbuf is null, or offset or len is less than 0, or the sum of offset and len is greater than the length of outbuf.
throw IllegalArgumentException if outbuf dot length - offset < len.
throw IllegalArgumentException if outbuf is null, or offset or len is less than 0, or the sum of offset and len is greater than the length of outbuf.
throw CloneNotSupportedException if this instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw CloneNotSupportedException if sigSpi instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw IllegalArgumentException if state == VERIFY.
throw IllegalArgumentException if the signature byte array is null, or the offset or length is less than 0, or the sum of the offset and length is greater than the length of the signature byte array.
throw IllegalArgumentException if state == VERIFY.
throw IllegalArgumentException if the signature byte array is null, or the offset or length is less than 0, or the sum of the offset and length is greater than the length of the signature byte array.
throw IllegalArgumentException if state == VERIFY.
throw IllegalArgumentException if the signature byte array is null, or the offset or length is less than 0, or the sum of the offset and length is greater than the length of the signature byte array.
throw SignatureException if state == VERIFY || state == SIGN.
throw SignatureException if this signature object is not initialized properly.
throw SignatureException if state == SIGN || state == VERIFY.
throw SignatureException if this signature object is not initialized properly.
throw SignatureException if (state != SIGN) && (state != VERIFY).
throw SignatureException if this signature object is not initialized properly.
throw IllegalArgumentException if algorithm dot equalsIgnoreCase(RSA_SIGNATURE).
throw IllegalArgumentException if the provider is null.
throw IllegalArgumentException if algorithm dot equalsIgnoreCase(RSA_SIGNATURE).
throw IllegalArgumentException if the provider is null.
throw NoSuchAlgorithmException if t dot hasNext() == false.
throw NoSuchAlgorithmException if a SignatureSpi implementation for the specified algorithm is not available from the specified Provider object.
throw IllegalArgumentException if image == null.
throw IllegalArgumentException if image is null.
throw IndexOutOfBoundsException if thumbnails == null.
throw IndexOutOfBoundsException if the supplied index is negative or larger than the largest valid index.
throw IllegalArgumentException if raster == null.
throw IllegalArgumentException if raster is null.
throw IllegalArgumentException if image == null.
throw IllegalArgumentException if raster is null.
throw IllegalArgumentException if raster == null.
throw IllegalArgumentException if raster is null.
throw IllegalArgumentException if !name dot equals("attachVirtualMachine") && !name dot equals("createAttachProvider").
throw IllegalArgumentException if arguments are invalid.
throw IllegalArgumentException if !name dot equals("attachVirtualMachine") && !name dot equals("createAttachProvider").
throw IllegalArgumentException if arguments are invalid.
throw IllegalArgumentException if actions != null && actions dot length() > 0.
throw IllegalArgumentException if arguments are invalid.
throw IllegalArgumentException if out == null.
throw IllegalArgumentException if out or charset is null, or if indentation is less than 0.
throw IllegalArgumentException if indentation < 0.
throw IllegalArgumentException if out or charset is null, or if indentation is less than 0.
throw ConcurrentModificationException if mc != modCount.
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw ConcurrentModificationException if (e=getNode(hash,key)) != null && (oldValue=e dot value) != null.
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw ConcurrentModificationException if mc != modCount.
throw ConcurrentModificationException if it is detected that the mapping function modified this map.
throw ConcurrentModificationException if old != null.
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw NullPointerException if signerCertPath == null.
throw NullPointerException if signerCertPath is null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the collection is this queue.
throw NullPointerException if caption == null && text == null.
throw NullPointerException if both caption and text are null.
throw IllegalArgumentException if image == null.
throw IllegalArgumentException if image is null.
throw UnsupportedOperationException if !SystemTray dot isSupported().
throw UnsupportedOperationException if the system tray isn't supported by the current platform.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalArgumentException if popup != null.
throw IllegalArgumentException if the popup is already set for another TrayIcon.
throw NullPointerException if image == null.
throw NullPointerException if image is null.
throw ArrayIndexOutOfBoundsException if off < 0 || len < 0 || off > b dot length - len.
throw ArrayIndexOutOfBoundsException if off is negative, or len is negative, or off+len is negative or greater than the length of the array b.
throw IllegalArgumentException if offset < 0.
throw IllegalArgumentException if offset is less than 0 or if numComponents is less than 1.
throw IllegalArgumentException if numComponents < 1.
throw IllegalArgumentException if offset is less than 0 or if numComponents is less than 1.
throw IllegalArgumentException if compositeData == null.
throw IllegalArgumentException if compositeData is null.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates or the band index are not in bounds, or if dArray is too small to hold the input.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates or the band index are not in bounds, or if dArray is too small to hold the input.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates or the band index are not in bounds, or if dArray is too small to hold the input.
throw IllegalArgumentException if w <= 0 || h <= 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if size > Integer dot MAX_VALUE.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if dataType < DataBuffer dot TYPE_BYTE || (dataType > DataBuffer dot TYPE_DOUBLE && dataType != DataBuffer dot TYPE_UNDEFINED).
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if numBands <= 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if w <= 0 || h <= 0.
throw IllegalArgumentException if the product of w and h is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if size > Integer dot MAX_VALUE.
throw IllegalArgumentException if the product of w and h is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if dataType < DataBuffer dot TYPE_BYTE || (dataType > DataBuffer dot TYPE_DOUBLE && dataType != DataBuffer dot TYPE_UNDEFINED).
throw IllegalArgumentException if the product of w and h is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if numBands <= 0.
throw IllegalArgumentException if the product of w and h is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if w <= 0 || h <= 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if size > Integer dot MAX_VALUE.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if dataType < DataBuffer dot TYPE_BYTE || (dataType > DataBuffer dot TYPE_DOUBLE && dataType != DataBuffer dot TYPE_UNDEFINED).
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if numBands <= 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if dArray is too small to hold the input.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if dArray is too small to hold the input.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if dArray is too small to hold the input.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if dArray is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if dArray is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if dArray is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x1 < x || x1 > width || y < 0 || y1 < y || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates or the band index are not in bounds, or if dArray is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x1 < x || x1 > width || y < 0 || y1 < y || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates or the band index are not in bounds, or if dArray is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x1 < x || x1 > width || y < 0 || y1 < y || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates or the band index are not in bounds, or if dArray is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if obj is too small to hold the output.
throw ArrayIndexOutOfBoundsException if x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height.
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if obj is too small to hold the input.
throw NullPointerException if className == null.
throw NullPointerException if mimeType or className is null.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M01 == 0 dot 0 || M10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M01 == 0 dot 0 || M10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M00 == 0 dot 0 || M11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M00 == 0 dot 0 || M11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if m01 == 0 dot 0 || m10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if m00 == 0 dot 0 || m11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M01 == 0 dot 0 || M10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M01 == 0 dot 0 || M10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M00 == 0 dot 0 || M11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if M00 == 0 dot 0 || M11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if Math dot abs(det) <= Double dot MIN_VALUE.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if m01 == 0 dot 0 || m10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if m01 == 0 dot 0 || m10 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if m00 == 0 dot 0 || m11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw NoninvertibleTransformException if m00 == 0 dot 0 || m11 == 0 dot 0.
throw NoninvertibleTransformException if the matrix cannot be inverted.
throw IllegalArgumentException if bandOffsets dot length != bands.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw NullPointerException if dataBuffer == null.
throw NullPointerException if dataBuffer is null.
throw NullPointerException if (sm == null) || (db == null).
throw NullPointerException if either SampleModel or DataBuffer is null.
throw RasterFormatException if parentX < this dot minX.
throw RasterFormatException if the specified subregion is outside of the raster bounds.
throw RasterFormatException if parentY < this dot minY.
throw RasterFormatException if the specified subregion is outside of the raster bounds.
throw RasterFormatException if (parentX + width < parentX) || (parentX + width > this dot width + this dot minX).
throw RasterFormatException if the specified subregion is outside of the raster bounds.
throw RasterFormatException if (parentY + height < parentY) || (parentY + height > this dot height + this dot minY).
throw RasterFormatException if the specified subregion is outside of the raster bounds.
throw RasterFormatException if parentX < this dot minX.
throw RasterFormatException if width or height is less than or equal to zero, or computing any of parentX + width, parentY + height, childMinX + width, or childMinY + height results in integer overflow.
throw RasterFormatException if parentY < this dot minY.
throw RasterFormatException if width or height is less than or equal to zero, or computing any of parentX + width, parentY + height, childMinX + width, or childMinY + height results in integer overflow.
throw RasterFormatException if (parentX + width < parentX) || (parentX + width > this dot width + this dot minX).
throw RasterFormatException if width or height is less than or equal to zero, or computing any of parentX + width, parentY + height, childMinX + width, or childMinY + height results in integer overflow.
throw RasterFormatException if (parentY + height < parentY) || (parentY + height > this dot height + this dot minY).
throw RasterFormatException if width or height is less than or equal to zero, or computing any of parentX + width, parentY + height, childMinX + width, or childMinY + height results in integer overflow.
throw NullPointerException if (sampleModel == null) || (dataBuffer == null) || (aRegion == null)|| (sampleModelTranslate == null).
throw NullPointerException if any of sampleModel, dataBuffer, aRegion or sampleModelTranslate is null.
throw RasterFormatException if width <= 0 || height <= 0.
throw RasterFormatException if aRegion has width or height less than or equal to zero, or computing either aRegion dot x + aRegion dot width or aRegion dot y + aRegion dot height results in integer overflow.
throw RasterFormatException if (minX + width) < minX.
throw RasterFormatException if aRegion has width or height less than or equal to zero, or computing either aRegion dot x + aRegion dot width or aRegion dot y + aRegion dot height results in integer overflow.
throw RasterFormatException if (minY + height) < minY.
throw RasterFormatException if aRegion has width or height less than or equal to zero, or computing either aRegion dot x + aRegion dot width or aRegion dot y + aRegion dot height results in integer overflow.
throw NullPointerException if (sm == null) || (db == null).
throw NullPointerException if either SampleModel or DataBuffer is null.
throw RasterFormatException if dataBuffer dot getNumBanks() != 1.
throw RasterFormatException if w or h is less than or equal to zero, or computing either location dot x + w or location dot y + h results in integer overflow.
throw IllegalArgumentException if bands <= 0.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if bitsPerBand <= 0.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if bands != 1.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if bands != 1.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if bands != 1.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType is not one of the supported data types, which are DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT or DataBuffer dot TYPE_INT.
throw RasterFormatException if dataBuffer dot getNumBanks() != 1.
throw RasterFormatException if dataBuffer has more than one bank.
throw NullPointerException if dataBuffer == null.
throw NullPointerException if dataBuffer is null.
throw NullPointerException if dataBuffer == null.
throw NullPointerException if dataBuffer is null.
throw NullPointerException if dataBuffer == null.
throw NullPointerException if dataBuffer is null.
throw RasterFormatException if w <= 0 || h <= 0.
throw RasterFormatException if w or h is less than or equal to zero, or computing either x + w or y + h results in integer overflow.
throw AccessControlException if context[i] != null && !context[i] dot impliesWithAltFilePerm(perm).
throw AccessControlException if the specified permission is not permitted, based on the current security policy and the context encapsulated by this object.
throw NullPointerException if perm == null.
throw NullPointerException if the permission to check for is null.
throw NullPointerException if perms != null.
throw NullPointerException if the provided context is null.
throw IllegalArgumentException if doc instanceof StyledDocument.
throw IllegalArgumentException if doc can't be narrowed to a StyledDocument which is the required type of model for this text component.
throw IllegalArgumentException if kit instanceof StyledEditorKit.
throw IllegalArgumentException if kit is not a StyledEditorKit.
throw NullPointerException if s == null.
throw NullPointerException if s is null.
throw NullPointerException if s == null.
throw NullPointerException if s is null.
throw RuntimeException if chooser != null.
throw RuntimeException if the chooser panel has already been installed.
throw NullPointerException if terminalName == null.
throw NullPointerException if terminalName is null.
throw NullPointerException if theClass == null || theClassFile == null.
throw NullPointerException if the supplied class or array is null.
throw RasterFormatException if bands != null.
throw RasterFormatException if the number of bands requested is not one.
throw ArrayIndexOutOfBoundsException if (x < 0) || (y < 0) || (x >= width)|| (y >= height).
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if obj is not null or not large enough to hold the pixel data.
throw RasterFormatException if pixelsPerDataElement * numberOfBits != dataElementSize.
throw RasterFormatException if the number of bits per pixel is not a power of 2 or if a power of 2 number of pixels do not fit in one data element.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType is not either DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType is not either DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, or DataBuffer dot TYPE_INT.
throw ArrayIndexOutOfBoundsException if (x < 0) || (y < 0) || (x >= width)|| (y >= height).
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds.
throw ArrayIndexOutOfBoundsException if (x < 0) || (y < 0) || (x >= width)|| (y >= height)|| (b != 0).
throw ArrayIndexOutOfBoundsException if the specified coordinates are not in bounds.
throw ArrayIndexOutOfBoundsException if (x < 0) || (y < 0) || (x >= width)|| (y >= height)|| (b != 0).
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds.
throw InterruptedException if Thread dot interrupted().
throw InterruptedException if the current thread is interrupted.
throw IllegalArgumentException if !(condition instanceof AbstractQueuedSynchronizer dot ConditionObject).
throw IllegalArgumentException if the given condition is not associated with this lock.
throw NullPointerException if condition == null.
throw NullPointerException if the condition is null.
throw IllegalArgumentException if !(condition instanceof AbstractQueuedSynchronizer dot ConditionObject).
throw IllegalArgumentException if the given condition is not associated with this lock.
throw NullPointerException if condition == null.
throw NullPointerException if the condition is null.
throw IllegalArgumentException if !(condition instanceof AbstractQueuedSynchronizer dot ConditionObject).
throw IllegalArgumentException if the given condition is not associated with this lock.
throw NullPointerException if condition == null.
throw NullPointerException if the condition is null.
throw IllegalArgumentException if scope == ScriptContext dot GLOBAL_SCOPE.
throw IllegalArgumentException if the value of scope is invalid for the type the protected context field.
throw NullPointerException if ctxt == null.
throw NullPointerException if ctxt is null.
throw IllegalArgumentException if scope == ScriptContext dot GLOBAL_SCOPE.
throw IllegalArgumentException if the value of scope is invalid for the type the context field.
throw NullPointerException if n == null.
throw NullPointerException if n is null.
throw IllegalArgumentException if implementation == null.
throw IllegalArgumentException if the given implementation is null.
throw NullPointerException if ref == null.
throw NullPointerException if ref is null.
throw SocketException if factory != null.
throw SocketException if the factory is already defined.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if the value is 0 or is negative.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw SocketException if isClosed().
throw SocketException if an error occurs enabling or disabling the SO_REUSEADDR socket option, or the socket is closed.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw SocketException if isClosed().
throw SocketException if there is an error obtaining the traffic class or type-of-service value.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if timeout is negative.
throw SocketException if isClosed().
throw SocketException if any error happens during the bind, or if the socket is already bound.
throw SocketException if isBound().
throw SocketException if any error happens during the bind, or if the socket is already bound.
throw SocketException if epoint dot isUnresolved().
throw SocketException if any error happens during the bind, or if the socket is already bound.
throw IllegalArgumentException if !(addr instanceof InetSocketAddress).
throw IllegalArgumentException if addr is a SocketAddress subclass not supported by this socket.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw IllegalArgumentException if !(size > 0).
throw IllegalArgumentException if the value is 0 or is negative.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as an UDP error.
throw IllegalArgumentException if connectState == ST_NOT_CONNECTED.
throw IllegalArgumentException if the socket is connected, and connected address and packet address differ, or if the socket is not connected and the packet address is not set.
throw IllegalArgumentException if connectState == ST_NOT_CONNECTED.
throw IllegalArgumentException if the socket is connected, and connected address and packet address differ, or if the socket is not connected and the packet address is not set.
throw SocketException if epoint dot isUnresolved().
throw SocketException if the connect fails.
throw IllegalArgumentException if addr == null.
throw IllegalArgumentException if addr is null, or addr is a SocketAddress subclass not supported by this socket.
throw IllegalArgumentException if !(addr instanceof InetSocketAddress).
throw IllegalArgumentException if addr is null, or addr is a SocketAddress subclass not supported by this socket.
throw SocketException if isClosed().
throw SocketException if there is an error setting the traffic class or type-of-service.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw NoSuchElementException if x == null.
throw NoSuchElementException if this deque is empty.
throw NoSuchElementException if x == null.
throw NoSuchElementException if this deque is empty.
throw IllegalStateException if !offerLast(e).
throw IllegalStateException if this deque is full.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the collection is this deque.
throw NoSuchElementException if x == null.
throw NoSuchElementException if this deque is empty.
throw NoSuchElementException if x == null.
throw NoSuchElementException if this deque is empty.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw IllegalStateException if !offerFirst(e).
throw IllegalStateException if this deque is full.
throw NullPointerException if name == null.
throw NullPointerException if If name is null.
throw NullPointerException if name == null.
throw NullPointerException if If name is null.
throw NullPointerException if name == null.
throw NullPointerException if If name is null.
throw IllegalArgumentException if f == null.
throw IllegalArgumentException if factoryClassName is null, or the factory class cannot be loaded, instantiated or doesn't support the schema language specified in schemLanguage parameter.
throw IllegalArgumentException if f == null.
throw IllegalArgumentException if factoryClassName is null, or the factory class cannot be loaded, instantiated or doesn't support the schema language specified in schemLanguage parameter.
throw IllegalArgumentException if f dot isSchemaLanguageSupported(schemaLanguage).
throw IllegalArgumentException if factoryClassName is null, or the factory class cannot be loaded, instantiated or doesn't support the schema language specified in schemLanguage parameter.
throw NullPointerException if name == null.
throw NullPointerException if If name is null.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if defaultText is null or if defaultText has a length of 0.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty() || defaultText == null || defaultText dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if defaultText is null or if defaultText has a length of 0.
throw NoSuchElementException if value == null.
throw NoSuchElementException if no value is present.
throw IllegalArgumentException if (itemNames dot length != itemDescriptions dot length) || (itemNames dot length != itemTypes dot length).
throw IllegalArgumentException if If typeName or description is a null or empty string, or itemNames or itemDescriptions or itemTypes is null, or any element of itemNames or itemDescriptions is a null or empty string, or any element of itemTypes is null, or itemNames or itemDescriptions or itemTypes are not of the same size.
throw OpenDataException if nameToDescription dot containsKey(key).
throw OpenDataException if If itemNames contains duplicate item names (case sensitive, but leading and trailing whitespaces removed).
throw IllegalArgumentException if pc == null.
throw IllegalArgumentException if mxbeanInterface is not a platform management interface.
throw IllegalArgumentException if pc == null.
throw IllegalArgumentException if mxbeanInterface is not a platform management interface.
throw IllegalArgumentException if !jdk dot internal dot misc dot VM dot isSystemDomainLoader(loader).
throw IllegalArgumentException if mxbeanName is not with a valid ObjectName format, or the named MXBean in the connection is not a MXBean provided by the platform, or the named MXBean is not registered in the MBeanServerConnection, or the named MXBean is not an instance of the given mxbeanInterface.
throw IllegalArgumentException if !isInstanceOf(connection,objName,intfName).
throw IllegalArgumentException if mxbeanName is not with a valid ObjectName format, or the named MXBean in the connection is not a MXBean provided by the platform, or the named MXBean is not registered in the MBeanServerConnection, or the named MXBean is not an instance of the given mxbeanInterface.
throw IllegalArgumentException if newValue > maximum.
throw IllegalArgumentException if the value indicated does not fall within the allowable range.
throw IllegalArgumentException if newValue < minimum.
throw IllegalArgumentException if the value indicated does not fall within the allowable range.
throw IllegalArgumentException if from < minimum.
throw IllegalArgumentException if either from or to value does not fall within the allowable range.
throw IllegalArgumentException if from > maximum.
throw IllegalArgumentException if either from or to value does not fall within the allowable range.
throw IllegalArgumentException if minimum > maximum.
throw IllegalArgumentException if minimum is greater than maximum or initialValue does not fall within the allowable range.
throw IllegalArgumentException if initialValue < minimum.
throw IllegalArgumentException if minimum is greater than maximum or initialValue does not fall within the allowable range.
throw IllegalArgumentException if initialValue > maximum.
throw IllegalArgumentException if minimum is greater than maximum or initialValue does not fall within the allowable range.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw IllegalArgumentException if from dot compareTo(to) > 0.
throw IllegalArgumentException if from dot compareTo(to) > 0.
throw IllegalArgumentException if c instanceof EnumSet.
throw IllegalArgumentException if c is not an EnumSet instance and contains no elements.
throw IllegalArgumentException if width < 0 || height < 0.
throw IllegalArgumentException if width or height is < 0.
throw IllegalArgumentException if member < 1.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if (orientation != VERTICAL_SPLIT) && (orientation != HORIZONTAL_SPLIT).
throw IllegalArgumentException if orientation is not one of: HORIZONTAL_SPLIT or VERTICAL_SPLIT.
throw IllegalArgumentException if value < 0 || value > 1.
throw IllegalArgumentException if value is < 0 or > 1.
throw IllegalArgumentException if constraints != null && !(constraints instanceof String).
throw IllegalArgumentException if the constraints object does not match an existing component.
throw IllegalArgumentException if proportionalLocation < 0 dot 0 || proportionalLocation > 1 dot 0.
throw IllegalArgumentException if the specified location is < 0 or > 1 dot 0.
throw IllegalArgumentException if orientation != HORIZONTAL_SPLIT && orientation != VERTICAL_SPLIT.
throw IllegalArgumentException if orientation is not one of HORIZONTAL_SPLIT or VERTICAL_SPLIT.
throw IllegalArgumentException if parameters dot isEmpty().
throw IllegalArgumentException if parameters is an empty list.
throw IllegalArgumentException if (qTables == null) || (DCHuffmanTables == null) || (ACHuffmanTables == null)|| (qTables dot length > 4)|| (DCHuffmanTables dot length > 4)|| (ACHuffmanTables dot length > 4)|| (DCHuffmanTables dot length != ACHuffmanTables dot length).
throw IllegalArgumentException if any of the arguments is null, has more than 4 elements, or if the numbers of DC and AC tables differ.
throw IllegalArgumentException if extensions == null || extensions dot length == 0.
throw IllegalArgumentException if extensions is null, empty, contains null, or contains an empty string.
throw IllegalArgumentException if extensions[i] == null || extensions[i] dot length() == 0.
throw IllegalArgumentException if extensions is null, empty, contains null, or contains an empty string.
throw NullPointerException if name == null.
throw NullPointerException if the name is null.
throw SerialException if offset < 0 || offset > bytes dot length.
throw SerialException if there is an error accessing the BLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialBlob length; or the combined values of the length and offset is greater than the Blob buffer; if free had previously been called on this object.
throw SerialException if pos < 1 || pos > this dot length().
throw SerialException if there is an error accessing the BLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialBlob length; or the combined values of the length and offset is greater than the Blob buffer; if free had previously been called on this object.
throw SerialException if (long)(length) > origLen.
throw SerialException if there is an error accessing the BLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialBlob length; or the combined values of the length and offset is greater than the Blob buffer; if free had previously been called on this object.
throw SerialException if (length + offset) > bytes dot length.
throw SerialException if there is an error accessing the BLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialBlob length; or the combined values of the length and offset is greater than the Blob buffer; if free had previously been called on this object.
throw SerialException if length > len.
throw SerialException if there is an error accessing the Blob value; or the length to truncate is greater that the SerialBlob length; if free had previously been called on this object.
throw SerialException if pos < 1 || pos > this dot length().
throw SerialException if the free method had been previously called on this object.
throw SerialException if length < 1 || length > len - pos + 1.
throw SerialException if the free method had been previously called on this object.
throw SQLException if blob == null.
throw SQLException if the Blob passed to this to this constructor is a null.
throw SerialException if this dot blob != null.
throw SerialException if the SerialBlob in not instantiated with a Blob object that supports setBinaryStream(); if free had previously been called on this object.
throw SerialException if pos < 1 || len - pos < 0.
throw SerialException if the given starting position is out of bounds; if free had previously been called on this object.
throw NumberFormatException if s == null.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if len > 0.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if len > 0.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if len > 0.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if len > 0.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if len > 0.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if len > 0.
throw NumberFormatException if the string does not contain a parsable unsigned integer.
throw NumberFormatException if s == null.
throw NumberFormatException if the string does not contain a parsable long.
throw NumberFormatException if radix < Character dot MIN_RADIX.
throw NumberFormatException if the string does not contain a parsable long.
throw NumberFormatException if radix > Character dot MAX_RADIX.
throw NumberFormatException if the string does not contain a parsable long.
throw NumberFormatException if radix < Character dot MIN_RADIX.
throw NumberFormatException if the string does not contain a parsable long.
throw NumberFormatException if radix > Character dot MAX_RADIX.
throw NumberFormatException if the string does not contain a parsable long.
throw NumberFormatException if i < endIndex.
throw NumberFormatException if the string does not contain a parsable long.
throw NumberFormatException if nm dot isEmpty().
throw NumberFormatException if the String does not contain a parsable long.
throw NumberFormatException if nm dot startsWith("-",index) || nm dot startsWith("+",index).
throw NumberFormatException if the String does not contain a parsable long.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if the dialog is displayable.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if the dialog is displayable.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if the dialog is displayable.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if the dialog is displayable.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if undecorated is false, and this dialog does not have the default shape.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this dialog does not have the default shape.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this dialog does not have the default shape.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this dialog does not have the default shape.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if undecorated is false, and this dialog opacity is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this dialog opacity is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this dialog opacity is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this dialog opacity is less than 1 dot 0f.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if undecorated is false, and the alpha value of this dialog background color is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and the alpha value of this dialog background color is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and the alpha value of this dialog background color is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and the alpha value of this dialog background color is less than 1 dot 0f.
throw IllegalArgumentException if (owner != null) && !(owner instanceof Frame) && !(owner instanceof Dialog).
throw IllegalArgumentException if the owner is not an instance of Dialog or Frame.
throw IllegalArgumentException if (owner != null) && !(owner instanceof Frame) && !(owner instanceof Dialog).
throw IllegalArgumentException if the owner is not an instance of Dialog or Frame.
throw IllegalArgumentException if (owner != null) && !(owner instanceof Frame) && !(owner instanceof Dialog).
throw IllegalArgumentException if gc is not from a screen device.
throw IllegalArgumentException if (owner != null) && !(owner instanceof Frame) && !(owner instanceof Dialog).
throw IllegalArgumentException if gc is not from a screen device.
throw IllegalArgumentException if x > y.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1 or x > y.
throw IllegalArgumentException if x > y.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1 or x > y.
throw IllegalArgumentException if x > y.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1 or x > y.
throw IllegalArgumentException if x > y.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1 or x > y.
throw IllegalArgumentException if x <= 0 dot 0f || y <= 0 dot 0f || units < 1.
throw IllegalArgumentException if x <= 0, y <= 0, or units < 1.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw IOException if !_setImageData(splashPtr,buf).
throw IOException if there was an error while loading the image.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalStateException if image == null.
throw IllegalStateException if the overlay image does not exist; for example, if createGraphics has never been called, or if the splash screen has already been closed.
throw ImagingOpException if ImagingLib dot filter(this,src,dst) == null.
throw ImagingOpException if the raster cannot be transformed because of a data-processing error that might be caused by an invalid image format, tile format, or image-processing operation, or any other unsupported operation.
throw ImagingOpException if ImagingLib dot filter(this,src,dst) == null.
throw ImagingOpException if the raster cannot be transformed because of a data-processing error that might be caused by an invalid image format, tile format, or image-processing operation, or any other unsupported operation.
throw NullPointerException if t == null.
throw NullPointerException if argument is null.
throw IllegalArgumentException if bits < 1 || bits > 32.
throw IllegalArgumentException if space is not a TYPE_RGB space.
throw IllegalArgumentException if space dot getType() != ColorSpace dot TYPE_RGB.
throw IllegalArgumentException if space is not a TYPE_RGB space.
throw NullPointerException if provider == null.
throw NullPointerException if If provider or id is null.
throw NullPointerException if id == null.
throw NullPointerException if If provider or id is null.
throw NullPointerException if displayName == null.
throw NullPointerException if If provider or id is null.
throw UnsupportedOperationException if canWriteTiles() == false.
throw UnsupportedOperationException if canWriteTiles returns false.
throw IllegalArgumentException if mode < MODE_DISABLED || mode > MAX_MODE.
throw IllegalArgumentException if mode is not one of the modes listed above.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling parameters have not been set.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling parameters have not been set.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling parameters have not been set.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling parameters have not been set.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionType() == null.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if no compression type is set.
throw IllegalStateException if getCompressionType() == null.
throw IllegalStateException if no compression type is set.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression, or does not support the requested mode.
throw IllegalArgumentException if mode < MODE_DISABLED || mode > MAX_MODE.
throw IllegalArgumentException if mode is not one of the modes listed above.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling parameters have not been set.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling parameters have not been set.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if canWriteTiles returns false.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling parameters have not been set.
throw IllegalStateException if !tilingSet.
throw IllegalStateException if the tiling parameters have not been set.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalArgumentException if quality < 0 dot 0F || quality > 1 dot 0F.
throw IllegalArgumentException if quality is not between 0 and 1, inclusive.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionTypes() != null && getCompressionType() == null.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalStateException if getCompressionTypes() != null && getCompressionType() == null.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalArgumentException if quality < 0 dot 0F || quality > 1 dot 0F.
throw IllegalArgumentException if quality is not between 0 and 1, inclusive.
throw UnsupportedOperationException if !canWriteProgressive().
throw UnsupportedOperationException if the writer does not support progressive encoding.
throw IllegalArgumentException if mode < MODE_DISABLED || mode > MAX_MODE.
throw IllegalArgumentException if mode is not one of the modes listed above.
throw IllegalArgumentException if mode == MODE_EXPLICIT.
throw IllegalArgumentException if mode is not one of the modes listed above.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw UnsupportedOperationException if !canOffsetTiles() && tilesOffset.
throw UnsupportedOperationException if the plug-in does not support tiling.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support grid offsets, and the grid offsets are not both zero.
throw UnsupportedOperationException if !canOffsetTiles() && tilesOffset.
throw UnsupportedOperationException if the plug-in does not support grid offsets, and the grid offsets are not both zero.
throw IllegalArgumentException if tileWidth <= 0 || tileHeight <= 0.
throw IllegalArgumentException if the tile size is not within one of the allowable ranges returned by getPreferredTileSizes.
throw IllegalArgumentException if preferredTileSizes != null.
throw IllegalArgumentException if the tile size is not within one of the allowable ranges returned by getPreferredTileSizes.
throw IllegalArgumentException if tileWidth <= 0 || tileHeight <= 0.
throw IllegalArgumentException if tileWidth or tileHeight is less than or equal to 0.
throw IllegalArgumentException if preferredTileSizes != null.
throw IllegalArgumentException if tileWidth or tileHeight is less than or equal to 0.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the plug-in does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw UnsupportedOperationException if !canWriteTiles().
throw UnsupportedOperationException if the plug-in does not support tiling.
throw IllegalStateException if getTilingMode() != MODE_EXPLICIT.
throw IllegalStateException if the tiling mode is not MODE_EXPLICIT.
throw UnsupportedOperationException if !canWriteProgressive().
throw UnsupportedOperationException if the writer does not support progressive encoding.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw IllegalStateException if (getCompressionTypes() != null) && (getCompressionType() == null).
throw IllegalStateException if the set of legal compression types is non-null and the current compression type is null.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if the writer does not support compression.
throw UnsupportedOperationException if legalTypes == null.
throw UnsupportedOperationException if the writer does not support compression.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw UnsupportedOperationException if !canWriteCompressed().
throw UnsupportedOperationException if there are no settable compression types.
throw UnsupportedOperationException if legalTypes == null.
throw UnsupportedOperationException if there are no settable compression types.
throw IllegalArgumentException if compressionType != null.
throw IllegalArgumentException if compressionType is non-null but is not one of the values returned by getCompressionTypes.
throw IllegalArgumentException if roleName == null || roleValue == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if roleValue == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if roleName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if roleValue == null.
throw IllegalArgumentException if null parameter.
throw UnsupportedTemporalTypeException if field == OFFSET_SECONDS.
throw UnsupportedTemporalTypeException if the field is not supported.
throw DateTimeException if first != '+' && first != '-'.
throw DateTimeException if the offset ID is invalid.
throw UnsupportedTemporalTypeException if field == OFFSET_SECONDS.
throw UnsupportedTemporalTypeException if the field is not supported or the range of values exceeds an int.
throw DateTimeException if offset == null.
throw DateTimeException if unable to convert to an ZoneOffset.
throw DateTimeException if totalSeconds < -MAX_SECONDS || totalSeconds > MAX_SECONDS.
throw DateTimeException if the offset is not in the required range.
throw IllegalArgumentException if !"read" dot equalsIgnoreCase(actions).
throw IllegalArgumentException if name does not conform to the correct syntax or if actions is not "read".
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw NullPointerException if attributes == null.
throw NullPointerException if attributes parameter is null.
throw NullPointerException if attributes == null.
throw NullPointerException if attributes parameter is null.
throw IndexOutOfBoundsException if (off < 0) || (off > cbuf dot length) || (len < 0)|| ((off + len) > cbuf dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or len is negative, or len is greater than cbuf dot length - off.
throw IllegalArgumentException if sz <= 0.
throw IllegalArgumentException if If sz <= 0.
throw IOException if markedChar < 0.
throw IOException if If the stream has never been marked, or if the mark has been invalidated.
throw IllegalArgumentException if n < 0L.
throw IllegalArgumentException if If n is negative.
throw IllegalArgumentException if readAheadLimit < 0.
throw IllegalArgumentException if If readAheadLimit < 0.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if baseName is null.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if baseName is null.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if baseName is null.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if keyword is null.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if keyword is null.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if keyword is null.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if no appropriate ResourceBundle may be located.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if no appropriate ResourceBundle may be located.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if no appropriate ResourceBundle may be located.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if the named resource is not found in the located ResourceBundle.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if the named resource is not found in the located ResourceBundle.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if the named resource is not found in the located ResourceBundle.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if the object retrieved from the ResourceBundle is not a String.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if the object retrieved from the ResourceBundle is not a String.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if the object retrieved from the ResourceBundle is not a String.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if a previous call to prepareWriteEmpty without a corresponding call to endWriteEmpty has not been made.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if a previous call to prepareInsertEmpty without a corresponding call to endInsertEmpty has been made.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if a call to prepareReiplacePixels has been made without a matching call to endReplacePixels.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalArgumentException if output != null.
throw IllegalArgumentException if output is not an instance of one of the classes returned by the originating service provider's getOutputTypes method.
throw IllegalArgumentException if locale != null.
throw IllegalArgumentException if locale is non-null but is not one of the values returned by getAvailableLocales.
throw IllegalStateException if getOutput() == null.
throw IllegalStateException if the output has not been set.
throw IllegalArgumentException if table == null.
throw IllegalArgumentException if table is null or table dot length is not equal to 64.
throw IllegalArgumentException if table dot length != 64.
throw IllegalArgumentException if table is null or table dot length is not equal to 64.
throw IOException if this dot initialized.
throw IOException if on decoding errors, or if this parameter object has already been initialized.
throw IOException if this dot initialized.
throw IOException if on decoding errors, or if this parameter object has already been initialized.
throw IOException if this dot initialized == false.
throw IOException if on encoding errors, or if this parameter object has not been initialized.
throw IOException if this dot initialized == false.
throw IOException if on encoding errors, or if this parameter object has not been initialized.
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if the provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if the provider is null.
throw InvalidParameterSpecException if this dot initialized == false.
throw InvalidParameterSpecException if the requested parameter specification is inappropriate for this parameter object, or if this parameter object has not been initialized.
throw SQLException if (array == null) || (map == null).
throw SQLException if a database access error occurs or the array parameter is null.
throw SQLException if (elements=(Object[])array dot getArray()) == null.
throw SQLException if a database access error occurs or the array parameter is null.
throw SQLException if array == null.
throw SQLException if a database access error occurs or the array parameter is null.
throw SQLException if (elements=(Object[])array dot getArray()) == null.
throw SQLException if a database access error occurs or the array parameter is null.
throw NullPointerException if perm == null.
throw NullPointerException if the specified permission is null and is checked based on the security policy currently in effect.
throw NullPointerException if perms == null.
throw NullPointerException if action or perms or any element of perms is null.
throw NullPointerException if perms == null.
throw NullPointerException if action or perms or any element of perms is null.
throw NullPointerException if perms == null.
throw NullPointerException if action or perms or any element of perms is null.
throw NullPointerException if perms == null.
throw NullPointerException if action or perms or any element of perms is null.
throw RuntimeOperationsException if inDescriptorName == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException for null name.
throw RuntimeOperationsException if inName == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException for a null constructor name.
throw SQLException if factoryClassName == null.
throw SQLException if factoryClassName is null, or the factory class cannot be loaded, instantiated.
throw ParseException if vc != null.
throw ParseException if there is an error in the conversion.
throw IllegalArgumentException if ncols != nBands && ncols != (nBands + 1).
throw IllegalArgumentException if If the number of bands in the source or destination is incompatible with the matrix.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if If the number of bands in the source or destination is incompatible with the matrix.
throw IllegalArgumentException if cause == this.
throw IllegalArgumentException if cause is this throwable dot  (A throwable cannot be its own cause dot ).
throw IllegalStateException if this dot containedException != null.
throw IllegalStateException if this throwable was created with TransformerException(Throwable) or TransformerException(String,Throwable), or this method has already been called on this throwable.
throw NullPointerException if octetStream == null.
throw NullPointerException if octetStream is null.
throw NullPointerException if octetStream == null.
throw NullPointerException if octetStream is null.
throw UnsupportedOperationException if !isError().
throw UnsupportedOperationException if If this object does not describe an error condition, that is, if the isError does not return true.
throw IllegalArgumentException if setPrecision < MIN_DIGITS.
throw IllegalArgumentException if the precision section is out of range or of incorrect format.
throw IllegalArgumentException if setPrecision < MIN_DIGITS.
throw IllegalArgumentException if the precision section is out of range or of incorrect format.
throw NullPointerException if setRoundingMode == null.
throw NullPointerException if the argument is null.
throw NullPointerException if val == null.
throw NullPointerException if the argument is null.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if !(size > 0).
throw IllegalArgumentException if the value is 0 or is negative.
throw SocketException if isClosed().
throw SocketException if an error occurs enabling or disabling the SO_REUSEADDR socket option, or the socket is closed.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if port < 0 || port > 0xFFFF.
throw IllegalArgumentException if the port parameter is outside the specified range of valid port values, which is between 0 and 65535, inclusive.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if timeout is negative.
throw IllegalArgumentException if !(endpoint instanceof InetSocketAddress).
throw IllegalArgumentException if endpoint is a SocketAddress subclass not supported by this socket.
throw IOException if impl instanceof PlatformSocketImpl.
throw IOException if an I/O error occurs when waiting for a connection, or if it is not possible for this socket to accept a connection with the given socket.
throw SocketException if factory != null.
throw SocketException if the factory has already been defined.
throw NullPointerException if listener == null.
throw NullPointerException if listener is null.
throw NullPointerException if listener == null.
throw NullPointerException if listener is null.
throw IllegalArgumentException if nextSibling != null.
throw IllegalArgumentException if If nextSibling is not a sibling of node or node is null and nextSibling is not null.
throw IllegalArgumentException if nextSibling != null.
throw IllegalArgumentException if If nextSibling is not a sibling of node or node is null and nextSibling is not null.
throw IllegalArgumentException if nextSibling != null.
throw IllegalArgumentException if If nextSibling is not a sibling of node or node is null and nextSibling is not null.
throw IllegalArgumentException if nextSibling != null.
throw IllegalArgumentException if If nextSibling is not a sibling of node or node is null and nextSibling is not null.
throw IllegalStateException if nextSibling != null.
throw IllegalStateException if If nextSibling is not null and nextSibling is not a child of node or node is null and nextSibling is not null.
throw IllegalArgumentException if nextSibling != null.
throw IllegalArgumentException if If nextSibling is not a descendant of node.
throw IllegalStateException if nextSibling != null.
throw IllegalStateException if If node is null and nextSibling is not null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw NullPointerException if w == null.
throw NullPointerException if w or params is null.
throw NullPointerException if params == null.
throw NullPointerException if w or params is null.
throw IllegalArgumentException if w == ECPoint dot POINT_INFINITY.
throw IllegalArgumentException if w is point at infinity, i dot e dot  ECPoint dot POINT_INFINITY.
throw IllegalArgumentException if n > 999999999 || n < 0.
throw IllegalArgumentException if the given argument is greater than 999999999 or less than 0.
throw IllegalArgumentException if nano > 999999999 || nano < 0.
throw IllegalArgumentException if the nano argument is out of bounds.
throw NullPointerException if obj == null.
throw NullPointerException if obj is null.
throw NullPointerException if obj == null.
throw NullPointerException if obj is null.
throw NullPointerException if obj == null.
throw NullPointerException if obj is null.
throw SignatureException if sig dot verify(getSignature()) == false.
throw SignatureException if on signature errors.
throw IllegalArgumentException if raf == null.
throw IllegalArgumentException if raf is null.
throw NullPointerException if name == null.
throw NullPointerException if If the name is null.
throw IllegalArgumentException if key == null || algorithm == null.
throw IllegalArgumentException if algorithm is null or key is null, empty, or too short, i dot e dot  key dot length-offset<len.
throw IllegalArgumentException if key dot length == 0.
throw IllegalArgumentException if algorithm is null or key is null, empty, or too short, i dot e dot  key dot length-offset<len.
throw IllegalArgumentException if key == null || algorithm == null.
throw IllegalArgumentException if algorithm is null or key is null, empty, or too short, i dot e dot  key dot length-offset<len.
throw IllegalArgumentException if key dot length == 0.
throw IllegalArgumentException if algorithm is null or key is null, empty, or too short, i dot e dot  key dot length-offset<len.
throw IllegalArgumentException if key dot length - offset < len.
throw IllegalArgumentException if algorithm is null or key is null, empty, or too short, i dot e dot  key dot length-offset<len.
throw ArrayIndexOutOfBoundsException if len < 0.
throw ArrayIndexOutOfBoundsException if is thrown if offset or len index bytes outside the key.
throw IllegalArgumentException if (status == null) || (handshakeStatus == null) || (bytesConsumed < 0)|| (bytesProduced < 0).
throw IllegalArgumentException if the status or handshakeStatus arguments are null, or if bytesConsumed or bytesProduced is negative.
throw IllegalArgumentException if aChild == null.
throw IllegalArgumentException if aChild is null.
throw IllegalArgumentException if !allowsChildren.
throw IllegalArgumentException if newChild is null or is an ancestor of this node.
throw IllegalArgumentException if !allowsChildren.
throw IllegalArgumentException if newChild is null or is an ancestor of this node.
throw IllegalStateException if !allowsChildren.
throw IllegalStateException if this node does not allow children.
throw IllegalArgumentException if aChild == null.
throw IllegalArgumentException if aChild is null or is not a child of this node.
throw IllegalArgumentException if !isNodeChild(aChild).
throw IllegalArgumentException if aChild is null or is not a child of this node.
throw NoSuchElementException if getChildCount() == 0.
throw NoSuchElementException if this node has no children.
throw IllegalArgumentException if aChild == null.
throw IllegalArgumentException if aChild is null or is not a child of this node.
throw IllegalArgumentException if index == -1.
throw IllegalArgumentException if aChild is null or is not a child of this node.
throw ArrayIndexOutOfBoundsException if children == null.
throw ArrayIndexOutOfBoundsException if index is out of bounds.
throw NoSuchElementException if getChildCount() == 0.
throw NoSuchElementException if this node has no children.
throw IllegalArgumentException if aChild == null.
throw IllegalArgumentException if aChild is null or is not a child of this node.
throw IllegalArgumentException if index == -1.
throw IllegalArgumentException if aChild is null or is not a child of this node.
throw IllegalArgumentException if baseOperation instanceof NamedOperation.
throw IllegalArgumentException if baseOperation is itself a NamedOperation.
throw IllegalArgumentException if packages dot putIfAbsent(name,p) != null.
throw IllegalArgumentException if a package of the given name is already defined by this class loader.
throw NullPointerException if c == null.
throw NullPointerException if If c is null.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported or the range of values exceeds an int.
throw IOException if is == null.
throw IOException if If an I/O error occurs while reading the stream.
throw IllegalArgumentException if PYCCprofile == null.
throw IllegalArgumentException if If the stream does not contain valid ICC Profile data.
throw IllegalArgumentException if (profileData=getProfileDataFromStream(s)) == null.
throw IllegalArgumentException if If the stream does not contain valid ICC Profile data.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if When is is null.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if When is is null.
throw IllegalArgumentException if uri == null.
throw IllegalArgumentException if When is is null.
throw IllegalArgumentException if f == null.
throw IllegalArgumentException if When is is null.
throw IllegalArgumentException if name == null || name dot trim() dot isEmpty().
throw IllegalArgumentException if name or description are null or empty string.
throw IllegalArgumentException if description == null || description dot trim() dot isEmpty().
throw IllegalArgumentException if name or description are null or empty string.
throw IllegalArgumentException if (messageType != INFORMATION && messageType != WARNING && messageType != ERROR) || message == null || message dot isEmpty().
throw IllegalArgumentException if messageType is not either INFORMATION, WARNING or ERROR, if message is null, or if message has a length of 0.
throw IllegalMonitorStateException if !isHeldExclusively().
throw IllegalMonitorStateException if exclusive synchronization is not held.
throw IllegalArgumentException if !owns(condition).
throw IllegalArgumentException if the given condition is not associated with this synchronizer.
throw IllegalMonitorStateException if !isHeldExclusively().
throw IllegalMonitorStateException if exclusive synchronization is not held.
throw IllegalArgumentException if !owns(condition).
throw IllegalArgumentException if the given condition is not associated with this synchronizer.
throw InterruptedException if Thread dot interrupted() || (!tryAcquire(arg) && acquire(null,arg,false,true,false,0L) < 0).
throw InterruptedException if the current thread is interrupted.
throw NullPointerException if thread == null.
throw NullPointerException if the thread is null.
throw InterruptedException if Thread dot interrupted() || (tryAcquireShared(arg) < 0 && acquire(null,arg,true,true,false,0L) < 0).
throw InterruptedException if the current thread is interrupted.
throw IllegalMonitorStateException if !isHeldExclusively().
throw IllegalMonitorStateException if exclusive synchronization is not held.
throw IllegalArgumentException if !owns(condition).
throw IllegalArgumentException if the given condition is not associated with this synchronizer.
throw RuntimeException if !inProgress.
throw RuntimeException if this UndoManager is not in progress (end has been invoked).
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if the frame is displayable.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if the frame is displayable.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if the frame is displayable.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if the frame is displayable.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if undecorated is false, and this frame does not have the default shape.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this frame does not have the default shape.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this frame does not have the default shape.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this frame does not have the default shape.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if undecorated is false, and this frame opacity is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this frame opacity is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this frame opacity is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and this frame opacity is less than 1 dot 0f.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if undecorated is false, and the alpha value of this frame background color is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and the alpha value of this frame background color is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and the alpha value of this frame background color is less than 1 dot 0f.
throw IllegalComponentStateException if !undecorated.
throw IllegalComponentStateException if undecorated is false, and the alpha value of this frame background color is less than 1 dot 0f.
throw BadLocationException if pos < -1 || pos > getDocument() dot getLength().
throw BadLocationException if for a bad location within a document model.
throw BadLocationException if pos < -1 || pos > getDocument() dot getLength().
throw BadLocationException if for a bad location within a document model.
throw BadLocationException if pos < -1 || pos > getDocument() dot getLength().
throw BadLocationException if the given position is not a valid position within the document.
throw IllegalArgumentException if !isCompatibleRaster(raster).
throw IllegalArgumentException if the raster argument is not compatible with this IndexColorModel.
throw UnsupportedOperationException if pixel_bits == 1 || pixel_bits == 2 || pixel_bits == 4.
throw UnsupportedOperationException if the number of bits in a pixel is greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if (transferType != DataBuffer dot TYPE_BYTE) && (transferType != DataBuffer dot TYPE_USHORT).
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if (transferType != DataBuffer dot TYPE_BYTE) && (transferType != DataBuffer dot TYPE_USHORT).
throw IllegalArgumentException if bits is less than 1 or greater than 16.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if (transferType != DataBuffer dot TYPE_BYTE) && (transferType != DataBuffer dot TYPE_USHORT).
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if (transferType != DataBuffer dot TYPE_BYTE) && (transferType != DataBuffer dot TYPE_USHORT).
throw IllegalArgumentException if size is less than 1.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if (transferType != DataBuffer dot TYPE_BYTE) && (transferType != DataBuffer dot TYPE_USHORT).
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if bits < 1 || bits > 16.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if size < 1.
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if (transferType != DataBuffer dot TYPE_BYTE) && (transferType != DataBuffer dot TYPE_USHORT).
throw IllegalArgumentException if transferType is not one of DataBuffer dot TYPE_BYTE or DataBuffer dot TYPE_USHORT.
throw IllegalArgumentException if dragGestureListener == null || !dragGestureListener dot equals(dgl).
throw IllegalArgumentException if dgl is not (equal to) the currently registered DragGestureListener.
throw TooManyListenersException if dragGestureListener != null.
throw TooManyListenersException if a DragGestureListener has already been added.
throw IllegalArgumentException if ds == null.
throw IllegalArgumentException if ds is null.
throw IllegalArgumentException if !prefix dot equals("GMT") && !prefix dot equals("UTC") && !prefix dot equals("UT").
throw IllegalArgumentException if the prefix is not one of "GMT", "UTC", or "UT", or "".
throw DateTimeException if obj == null.
throw DateTimeException if unable to convert to a ZoneId.
throw NullPointerException if g == null.
throw NullPointerException if g or c is null.
throw IllegalStateException if !initialized.
throw IllegalStateException if this exemption mechanism is in a wrong state (e dot g dot , has not been initialized).
throw IllegalStateException if !initialized.
throw IllegalStateException if this exemption mechanism is in a wrong state (e dot g dot , has not been initialized).
throw IllegalStateException if !initialized.
throw IllegalStateException if this exemption mechanism is in a wrong state (e dot g dot , has not been initialized).
throw IllegalStateException if !initialized.
throw IllegalStateException if this exemption mechanism is in a wrong state (e dot g dot , has not yet been initialized).
throw IllegalArgumentException if position < 0.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if size < 0.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if position + size < 0.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if position < 0.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if size < 0.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if position + size < 0.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if anIndex == -1.
throw IllegalArgumentException if anIndex < -1 or anIndex is greater than or equal to size.
throw NullPointerException if t == null.
throw NullPointerException if t is null.
throw IllegalArgumentException if threshhold < 0.
throw IllegalArgumentException if threshhold < 0.
throw IllegalArgumentException if (key == LEFT) || (key == CENTER) || (key == RIGHT)|| (key == LEADING)|| (key == TRAILING).
throw IllegalArgumentException if key is not one of the legal values listed above.
throw IllegalArgumentException if index == -1.
throw IllegalArgumentException if will be thrown if index is >= length of the text, or < -1.
throw IllegalArgumentException if (key == TOP) || (key == CENTER) || (key == BOTTOM).
throw IllegalArgumentException if key is not one of the legal values listed above.
throw NullPointerException if listenerType == null.
throw NullPointerException if the specified listenertype parameter is null.
throw NullPointerException if obj instanceof Date.
throw NullPointerException if obj is null.
throw IllegalArgumentException if obj instanceof Date.
throw IllegalArgumentException if the Format cannot format the given object, or if the Format's pattern string is invalid.
throw NullPointerException if pattern == null || locale == null.
throw NullPointerException if the given pattern or formatSymbols is null.
throw NullPointerException if pattern == null || formatSymbols == null.
throw NullPointerException if the given pattern or formatSymbols is null.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if stream is null.
throw NullPointerException if idValue == null.
throw NullPointerException if idValue is null.
throw NullPointerException if name == null.
throw NullPointerException if name is null.
throw NullPointerException if namespaceURI == null.
throw NullPointerException if namespaceURI is null.
throw NullPointerException if name == null.
throw NullPointerException if name is null.
throw IllegalArgumentException if idValue == null || idValue dot length() == 0.
throw IllegalArgumentException if localName is not an attribute of the specified element or it does not contain a specific value.
throw NullPointerException if element == null.
throw NullPointerException if element or localName is null.
throw NullPointerException if localName == null.
throw NullPointerException if element or localName is null.
throw NullPointerException if namespaceURI == null.
throw NullPointerException if namespaceURI is null.
throw IllegalArgumentException if index > 0.
throw IllegalArgumentException if any of the redirects except the standard input of the first builder and the standard output of the last builder are not ProcessBuilder dot Redirect dot PIPE.
throw IllegalArgumentException if index < numBuilders - 1.
throw IllegalArgumentException if any of the redirects except the standard input of the first builder and the standard output of the last builder are not ProcessBuilder dot Redirect dot PIPE.
throw IllegalArgumentException if destination dot type() == Redirect dot Type dot READ.
throw IllegalArgumentException if the redirect does not correspond to a valid destination of data, that is, has type READ.
throw NullPointerException if arg == null.
throw NullPointerException if an element of the command list is null.
throw IOException if cmdarray[i] dot indexOf('\u0000') >= 0.
throw IOException if an I/O error occurs.
throw IllegalArgumentException if source dot type() == Redirect dot Type dot WRITE || source dot type() == Redirect dot Type dot APPEND.
throw IllegalArgumentException if the redirect does not correspond to a valid source of data, that is, has type WRITE or APPEND.
throw IllegalArgumentException if destination dot type() == Redirect dot Type dot READ.
throw IllegalArgumentException if the redirect does not correspond to a valid destination of data, that is, has type READ.
throw NullPointerException if uriReference == null.
throw NullPointerException if uriReference is null.
throw IllegalArgumentException if parentList dot isEmpty().
throw IllegalArgumentException if If the list of parents is empty, or the list has two or more parents with modules for different target operating systems, architectures, or versions.
throw IllegalArgumentException if parentList dot isEmpty().
throw IllegalArgumentException if If the list of parents is empty, or the list has two or more parents with modules for different target operating systems, architectures, or versions.
throw RuntimeException if parent == null && (parentComponent == null || (parent=parentComponent dot getParent()) == null).
throw RuntimeException if parentComponent does not have a valid parent.
throw IllegalArgumentException if data dot length < len.
throw IllegalArgumentException if the length of data is less than the product of width and height.
throw IllegalArgumentException if data == null.
throw IllegalArgumentException if data is less than the size of this Kernel.
throw IllegalArgumentException if rule != WIND_EVEN_ODD && rule != WIND_NON_ZERO.
throw IllegalArgumentException if rule is not either WIND_EVEN_ODD or WIND_NON_ZERO.
throw NullPointerException if stroke == null.
throw NullPointerException if the specified stroke is null.
throw IllegalArgumentException if roleInfo == null.
throw IllegalArgumentException if null parameter.
throw InvalidRelationTypeException if roleName2InfoMap dot containsKey(roleName).
throw InvalidRelationTypeException if there is already a role info in current relation type with the same name.
throw IllegalArgumentException if relationTypeName == null || roleInfoArray == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationTypeName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if roleInfoName == null.
throw IllegalArgumentException if null parameter.
throw RoleInfoNotFoundException if result == null.
throw RoleInfoNotFoundException if no role info with that name in relation type.
throw IllegalArgumentException if bytesStride == 0.
throw IllegalArgumentException if when the target var handle is not a memory access var handle, or if bytesStride <= 0, or otherwise incompatible with the alignment constraint.
throw IllegalArgumentException if (bytesStride & alignMask) != 0.
throw IllegalArgumentException if when the target var handle is not a memory access var handle, or if bytesStride <= 0, or otherwise incompatible with the alignment constraint.
throw IllegalArgumentException if alignmentBytes <= 0 || (alignmentBytes & (alignmentBytes - 1)) != 0.
throw IllegalArgumentException if an illegal carrier type is used, or if alignmentBytes is not a power of two.
throw IllegalArgumentException if bytesOffset < 0.
throw IllegalArgumentException if when the target var handle is not a memory access var handle, or when bytesOffset < 0, or otherwise incompatible with the alignment constraint.
throw IllegalArgumentException if (bytesOffset & alignMask) != 0.
throw IllegalArgumentException if when the target var handle is not a memory access var handle, or when bytesOffset < 0, or otherwise incompatible with the alignment constraint.
throw IllegalArgumentException if !isProxyClass(proxy dot getClass()).
throw IllegalArgumentException if the argument is not a proxy instance.
throw NullPointerException if subjectPublicKey == null.
throw NullPointerException if the subjectPublicKey or trustAnchor parameters are null.
throw NullPointerException if trustAnchor == null.
throw NullPointerException if the subjectPublicKey or trustAnchor parameters are null.
throw IllegalArgumentException if !(condition instanceof AbstractQueuedSynchronizer dot ConditionObject).
throw IllegalArgumentException if the given condition is not associated with this lock.
throw NullPointerException if condition == null.
throw NullPointerException if the condition is null.
throw IllegalArgumentException if !(condition instanceof AbstractQueuedSynchronizer dot ConditionObject).
throw IllegalArgumentException if the given condition is not associated with this lock.
throw NullPointerException if condition == null.
throw NullPointerException if the condition is null.
throw IllegalArgumentException if !(condition instanceof AbstractQueuedSynchronizer dot ConditionObject).
throw IllegalArgumentException if the given condition is not associated with this lock.
throw NullPointerException if condition == null.
throw NullPointerException if the condition is null.
throw NullPointerException if key == null || mappingFunction == null.
throw NullPointerException if the specified key is null or the mappingFunction is null.
throw NullPointerException if key == null || oldValue == null || newValue == null.
throw NullPointerException if the specified key or value is null.
throw NullPointerException if key == null || value == null.
throw NullPointerException if the specified key or value is null.
throw NullPointerException if value == null.
throw NullPointerException if the specified key or value is null.
throw NullPointerException if value == null.
throw NullPointerException if the specified value is null.
throw NullPointerException if value == null.
throw NullPointerException if the specified value is null.
throw NullPointerException if key == null.
throw NullPointerException if the specified key is null.
throw NullPointerException if key == null || remappingFunction == null.
throw NullPointerException if the specified key is null or the remappingFunction is null.
throw NullPointerException if key == null || value == null || remappingFunction == null.
throw NullPointerException if the specified key or value is null or the remappingFunction is null.
throw NullPointerException if key == null.
throw NullPointerException if the specified key is null.
throw NoSuchElementException if n == null.
throw NoSuchElementException if this map is empty.
throw NullPointerException if key == null.
throw NullPointerException if the specified key is null.
throw NullPointerException if fromKey == null || toKey == null.
throw NullPointerException if fromKey or toKey is null.
throw NullPointerException if fromKey == null || toKey == null.
throw NullPointerException if fromKey or toKey is null.
throw NullPointerException if key == null || remappingFunction == null.
throw NullPointerException if the specified key is null or the remappingFunction is null.
throw NoSuchElementException if n == null.
throw NoSuchElementException if this map is empty.
throw NullPointerException if toKey == null.
throw NullPointerException if toKey is null.
throw NullPointerException if toKey == null.
throw NullPointerException if toKey is null.
throw NullPointerException if value == null.
throw NullPointerException if the specified key or value is null.
throw NullPointerException if fromKey == null.
throw NullPointerException if fromKey is null.
throw NullPointerException if fromKey == null.
throw NullPointerException if fromKey is null.
throw IllegalComponentStateException if isDisplayable().
throw IllegalComponentStateException if the window is displayable.
throw IllegalArgumentException if type == null.
throw IllegalArgumentException if the type is null.
throw IllegalComponentStateException if (oldAlpha == 255) && (alpha < 255).
throw IllegalComponentStateException if the alpha value of the given background color is less than 1 dot 0f and the window is decorated.
throw IllegalComponentStateException if (oldAlpha == 255) && (alpha < 255).
throw IllegalComponentStateException if the alpha value of the given background color is less than 1 dot 0f and the window is in full-screen mode.
throw UnsupportedOperationException if (oldAlpha == 255) && (alpha < 255).
throw UnsupportedOperationException if the alpha value of the given background color is less than 1 dot 0f and PERPIXEL_TRANSLUCENT translucency is not supported.
throw IllegalComponentStateException if shape != null.
throw IllegalComponentStateException if the shape is not null and the window is decorated.
throw IllegalComponentStateException if shape != null.
throw IllegalComponentStateException if the shape is not null and the window is in full-screen mode.
throw UnsupportedOperationException if shape != null.
throw UnsupportedOperationException if the shape is not null and PERPIXEL_TRANSPARENT translucency is not supported.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS.
throw IllegalComponentStateException if locationByPlatform && isShowing().
throw IllegalComponentStateException if the window is showing on screen and locationByPlatform is true.
throw IllegalArgumentException if opacity < 0 dot 0f || opacity > 1 dot 0f.
throw IllegalArgumentException if the opacity is out of the range [0 dot  dot 1].
throw IllegalComponentStateException if opacity < 1 dot 0f.
throw IllegalComponentStateException if the window is decorated and the opacity is less than 1 dot 0f.
throw IllegalComponentStateException if opacity < 1 dot 0f.
throw IllegalComponentStateException if the window is in full screen mode, and the opacity is less than 1 dot 0f.
throw UnsupportedOperationException if opacity < 1 dot 0f.
throw UnsupportedOperationException if the GraphicsDevice dot WindowTranslucency#TRANSLUCENT TRANSLUCENT translucency is not supported and the opacity is less than 1 dot 0f.
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw IllegalArgumentException if parent == null.
throw IllegalArgumentException if name contains a slash ('/'), or parent is null and name isn't "".
throw IllegalArgumentException if parent == null.
throw IllegalArgumentException if name contains a slash ('/'), or parent is null and name isn't "".
throw IllegalArgumentException if parent == null.
throw IllegalArgumentException if name contains a slash ('/'), or parent is null and name isn't "".
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw NullPointerException if key == null || value == null.
throw NullPointerException if key or value is null.
throw IllegalArgumentException if key dot length() > MAX_KEY_LENGTH.
throw IllegalArgumentException if key dot length() exceeds MAX_KEY_LENGTH or if value dot length exceeds MAX_VALUE_LENGTH.
throw IllegalArgumentException if value dot length() > MAX_VALUE_LENGTH.
throw IllegalArgumentException if key dot length() exceeds MAX_KEY_LENGTH or if value dot length exceeds MAX_VALUE_LENGTH.
throw IllegalArgumentException if key dot indexOf(CODE_POINT_U0000) != -1.
throw IllegalArgumentException if key dot length() exceeds MAX_KEY_LENGTH or if value dot length exceeds MAX_VALUE_LENGTH.
throw IllegalArgumentException if value dot indexOf(CODE_POINT_U0000) != -1.
throw IllegalArgumentException if key dot length() exceeds MAX_KEY_LENGTH or if value dot length exceeds MAX_VALUE_LENGTH.
throw IllegalArgumentException if key dot length() > MAX_KEY_LENGTH.
throw IllegalArgumentException if either key or value contain the null control character, code point U+0000.
throw IllegalArgumentException if value dot length() > MAX_VALUE_LENGTH.
throw IllegalArgumentException if either key or value contain the null control character, code point U+0000.
throw IllegalArgumentException if key dot indexOf(CODE_POINT_U0000) != -1.
throw IllegalArgumentException if either key or value contain the null control character, code point U+0000.
throw IllegalArgumentException if value dot indexOf(CODE_POINT_U0000) != -1.
throw IllegalArgumentException if either key or value contain the null control character, code point U+0000.
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw IllegalArgumentException if key dot indexOf(CODE_POINT_U0000) != -1.
throw IllegalArgumentException if key contains the null control character, code point U+0000.
throw IllegalArgumentException if token dot equals("/").
throw IllegalArgumentException if the path name is invalid (i dot e dot , it contains multiple consecutive slash characters, or ends with a slash character and is more than one character long).
throw IllegalArgumentException if !path dot hasMoreTokens().
throw IllegalArgumentException if the path name is invalid (i dot e dot , it contains multiple consecutive slash characters, or ends with a slash character and is more than one character long).
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method and pathname is not the empty string ("").
throw IllegalArgumentException if token dot equals("/").
throw IllegalArgumentException if the path name is invalid (i dot e dot , it contains multiple consecutive slash characters, or ends with a slash character and is more than one character long).
throw IllegalArgumentException if child == null.
throw IllegalArgumentException if the path name is invalid (i dot e dot , it contains multiple consecutive slash characters, or ends with a slash character and is more than one character long).
throw IllegalArgumentException if !path dot hasMoreTokens().
throw IllegalArgumentException if the path name is invalid (i dot e dot , it contains multiple consecutive slash characters, or ends with a slash character and is more than one character long).
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw IllegalStateException if removed.
throw IllegalStateException if this node (or an ancestor) has been removed with the removeNode() method.
throw NullPointerException if key == null.
throw NullPointerException if key is null dot  (A null default is permitted dot ).
throw IllegalArgumentException if key dot indexOf(CODE_POINT_U0000) != -1.
throw IllegalArgumentException if key contains the null control character, code point U+0000.
throw UnsupportedOperationException if this == root.
throw UnsupportedOperationException if this method is invoked on the root node.
throw NoSuchElementException if !isPresent.
throw NoSuchElementException if no value is present.
throw NullPointerException if in == null.
throw NullPointerException if If b is null.
throw IndexOutOfBoundsException if in == null.
throw IndexOutOfBoundsException if If off is negative, len is negative, or len is greater than b dot length - off.
throw ParseException if pos dot index == 0.
throw ParseException if the beginning of the specified string cannot be parsed.
throw DateTimeException if chrono == null.
throw DateTimeException if unable to convert to a ChronoLocalDateTime.
throw NullPointerException if revocationDate == null || reason == null || authority == null || extensions == null.
throw NullPointerException if revocationDate, reason, authority, or extensions is null.
throw UnsupportedOperationException if state.
throw UnsupportedOperationException if When implementation does not override this method.
throw IllegalArgumentException if columnModel == null.
throw IllegalArgumentException if newModel is null.
throw IllegalArgumentException if width < 0 dot 0f.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if cap != CAP_BUTT && cap != CAP_ROUND && cap != CAP_SQUARE.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if join == JOIN_MITER.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if join == JOIN_MITER.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if dash != null.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if dash != null.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if dash != null.
throw IllegalArgumentException if width is negative.
throw IllegalArgumentException if messageType < INFORMATION || messageType > ERROR || optionType < YES_NO_OPTION || optionType > OK_CANCEL_OPTION.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if defaultOption != YES && defaultOption != NO.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if defaultOption != YES && defaultOption != NO && defaultOption != CANCEL.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if defaultOption != OK && defaultOption != CANCEL.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if messageType < INFORMATION || messageType > ERROR || options == null || options dot length == 0 || defaultOption < 0 || defaultOption >= options dot length.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if options[i] == null || options[i] dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty() || messageType < INFORMATION || messageType > ERROR || optionType < YES_NO_OPTION || optionType > OK_CANCEL_OPTION.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if defaultOption != YES && defaultOption != NO.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if defaultOption != YES && defaultOption != NO && defaultOption != CANCEL.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if defaultOption != OK && defaultOption != CANCEL.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty() || messageType < INFORMATION || messageType > ERROR || options == null || options dot length == 0 || defaultOption < 0 || defaultOption >= options dot length.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if options[i] == null || options[i] dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if messageType is not either INFORMATION, WARNING, or ERROR, if options is null, if options has a length of 0, if any element from options is null, if any element from options has a length of 0, or if defaultOption does not lie within the array boundaries of options.
throw IllegalArgumentException if bandwidth < 0.
throw IllegalArgumentException if bandwidth is less than zero.
throw IllegalArgumentException if priority != NORMAL_PRIORITY && priority != HIGH_PRIORITY.
throw IllegalArgumentException if priority is not NORMAL_PRIORITY or HIGH_PRIORITY.
throw InterruptedException if ((a=arena) != null || (v=slotExchange(item,false,0L)) == null) && (Thread dot interrupted() || (v=arenaExchange(item,false,0L)) == null).
throw InterruptedException if the current thread was interrupted while waiting.
throw InterruptedException if (arena != null || (v=slotExchange(item,true,ns)) == null) && (Thread dot interrupted() || (v=arenaExchange(item,true,ns)) == null).
throw InterruptedException if the current thread was interrupted while waiting.
throw TimeoutException if v == TIMED_OUT.
throw TimeoutException if the specified waiting time elapses before another thread enters the exchange.
throw IllegalArgumentException if rowType == null.
throw IllegalArgumentException if rowType is null, or indexNames is a null or empty array, or an element in indexNames is a null or empty string, or typeName or description is a null or empty string.
throw OpenDataException if !rowType dot containsKey(indexNames[i]).
throw OpenDataException if an element's value of indexNames is not an item name defined in rowType.
throw NullPointerException if name == null.
throw NullPointerException if When name is null.
throw NullPointerException if name == null.
throw NullPointerException if When name is null.
throw NullPointerException if name == null.
throw NullPointerException if When name is null.
throw NullPointerException if name == null.
throw NullPointerException if When name is null.
throw NullPointerException if file == null.
throw NullPointerException if file equals null.
throw NullPointerException if file == null.
throw NullPointerException if file equals null.
throw IOException if containingDir == null.
throw IOException if new folder could not be created.
throw IOException if newFolder dot exists().
throw IOException if new folder could not be created.
throw IOException if newFolder dot exists().
throw IOException if new folder could not be created.
throw IOException if containingDir == null.
throw IOException if new folder could not be created.
throw IOException if newFolder dot exists().
throw IOException if new folder could not be created.
throw IOException if newFolder dot exists().
throw IOException if new folder could not be created.
throw IOException if containingDir == null.
throw IOException if new folder could not be created.
throw IOException if newFolder dot exists().
throw IOException if new folder could not be created.
throw IOException if newFolder dot exists().
throw IOException if new folder could not be created.
throw IllegalArgumentException if (normComponents dot length - normOffset) < numComponents.
throw IllegalArgumentException if If the component values for this ColorModel are not conveniently representable in the unnormalized form.
throw IllegalArgumentException if (normComponents dot length - normOffset) < numComponents.
throw IllegalArgumentException if the length of normComponents minus normOffset is less than numComponents.
throw UnsupportedOperationException if colorSpace == null.
throw UnsupportedOperationException if the constructor of this ColorModel called the super(bits) constructor, but did not override this method dot  See the constructor, ColorModel(int).
throw UnsupportedOperationException if nBits == null.
throw UnsupportedOperationException if the constructor of this ColorModel called the super(bits) constructor, but did not override this method dot  See the constructor, ColorModel(int).
throw UnsupportedOperationException if colorSpace == null.
throw UnsupportedOperationException if the constructor of this ColorModel called the super(bits) constructor, but did not override this method dot  See the constructor, ColorModel(int).
throw UnsupportedOperationException if nBits == null.
throw UnsupportedOperationException if the constructor of this ColorModel called the super(bits) constructor, but did not override this method dot  See the constructor, ColorModel(int).
throw UnsupportedOperationException if colorSpace == null.
throw UnsupportedOperationException if this method is unable to determine the number of bits per component.
throw UnsupportedOperationException if nBits == null.
throw UnsupportedOperationException if this method is unable to determine the number of bits per component.
throw UnsupportedOperationException if length == 1.
throw UnsupportedOperationException if this transferType is not supported by this ColorModel.
throw UnsupportedOperationException if length == 1.
throw UnsupportedOperationException if this transferType is not supported by this ColorModel.
throw IllegalArgumentException if bits < 1.
throw IllegalArgumentException if the length of the bit array is less than the number of color or alpha components in this ColorModel, or if the transparency is not a valid value.
throw IllegalArgumentException if bits dot length < numComponents.
throw IllegalArgumentException if the length of the bit array is less than the number of color or alpha components in this ColorModel, or if the transparency is not a valid value.
throw IllegalArgumentException if transparency < Transparency dot OPAQUE || transparency > Transparency dot TRANSLUCENT.
throw IllegalArgumentException if the length of the bit array is less than the number of color or alpha components in this ColorModel, or if the transparency is not a valid value.
throw IllegalArgumentException if pixel_bits <= 0.
throw IllegalArgumentException if the length of the bit array is less than the number of color or alpha components in this ColorModel, or if the transparency is not a valid value.
throw IllegalArgumentException if bits[i] < 0.
throw IllegalArgumentException if the length of the bit array is less than the number of color or alpha components in this ColorModel, or if the transparency is not a valid value.
throw IllegalArgumentException if maxBits == 0.
throw IllegalArgumentException if the length of the bit array is less than the number of color or alpha components in this ColorModel, or if the transparency is not a valid value.
throw IllegalArgumentException if bits < 1.
throw IllegalArgumentException if the sum of the number of bits in bits is less than 1 or if any of the elements in bits is less than 0.
throw IllegalArgumentException if bits dot length < numComponents.
throw IllegalArgumentException if the sum of the number of bits in bits is less than 1 or if any of the elements in bits is less than 0.
throw IllegalArgumentException if transparency < Transparency dot OPAQUE || transparency > Transparency dot TRANSLUCENT.
throw IllegalArgumentException if the sum of the number of bits in bits is less than 1 or if any of the elements in bits is less than 0.
throw IllegalArgumentException if pixel_bits <= 0.
throw IllegalArgumentException if the sum of the number of bits in bits is less than 1 or if any of the elements in bits is less than 0.
throw IllegalArgumentException if bits[i] < 0.
throw IllegalArgumentException if the sum of the number of bits in bits is less than 1 or if any of the elements in bits is less than 0.
throw IllegalArgumentException if maxBits == 0.
throw IllegalArgumentException if the sum of the number of bits in bits is less than 1 or if any of the elements in bits is less than 0.
throw NullPointerException if nBits == null.
throw NullPointerException if the number of bits array is null.
throw UnsupportedOperationException if length == 1.
throw UnsupportedOperationException if this transferType is not supported by this ColorModel.
throw UnsupportedOperationException if length == 1.
throw UnsupportedOperationException if this tranferType is not supported by this ColorModel.
throw IntrospectionException if indexedReadMethodName != null && getIndexedReadMethod() == null.
throw IntrospectionException if an exception occurs during introspection.
throw IntrospectionException if indexedWriteMethodName != null && getIndexedWriteMethod() == null.
throw IntrospectionException if an exception occurs during introspection.
throw InvalidTargetObjectTypeException if (mr_type == null) || (!mr_type dot equalsIgnoreCase("objectReference")).
throw InvalidTargetObjectTypeException if The managed resource type should be "ObjectReference".
throw RuntimeOperationsException if attrNames == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.
throw IllegalArgumentException if listener == null.
throw IllegalArgumentException if The listener cannot be null.
throw MBeanException if opInfo == null.
throw MBeanException if Wraps one of the following Exceptions: An Exception thrown by the managed object's invoked method dot  ServiceNotFoundException: No ModelMBeanOperationInfo or no descriptor defined for the specified operation or the managed resource is null dot  InvalidTargetObjectTypeException: The 'targetType' field value is not 'objectReference'.
throw MBeanException if opDescr == null.
throw MBeanException if Wraps one of the following Exceptions: An Exception thrown by the managed object's invoked method dot  ServiceNotFoundException: No ModelMBeanOperationInfo or no descriptor defined for the specified operation or the managed resource is null dot  InvalidTargetObjectTypeException: The 'targetType' field value is not 'objectReference'.
throw MBeanException if opMethodName == null.
throw MBeanException if Wraps one of the following Exceptions: An Exception thrown by the managed object's invoked method dot  ServiceNotFoundException: No ModelMBeanOperationInfo or no descriptor defined for the specified operation or the managed resource is null dot  InvalidTargetObjectTypeException: The 'targetType' field value is not 'objectReference'.
throw MBeanException if targetTypeField != null && !targetTypeField dot equalsIgnoreCase("objectReference").
throw MBeanException if Wraps one of the following Exceptions: An Exception thrown by the managed object's invoked method dot  ServiceNotFoundException: No ModelMBeanOperationInfo or no descriptor defined for the specified operation or the managed resource is null dot  InvalidTargetObjectTypeException: The 'targetType' field value is not 'objectReference'.
throw MBeanException if method != null.
throw MBeanException if Wraps one of the following Exceptions: An Exception thrown by the managed object's invoked method dot  ServiceNotFoundException: No ModelMBeanOperationInfo or no descriptor defined for the specified operation or the managed resource is null dot  InvalidTargetObjectTypeException: The 'targetType' field value is not 'objectReference'.
throw ReflectionException if method != null.
throw ReflectionException if Wraps an Exception thrown while trying to invoke the method.
throw RuntimeOperationsException if opName == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException Method name is null.
throw RuntimeOperationsException if attributes == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.
throw AttributeNotFoundException if attrInfo == null.
throw AttributeNotFoundException if The specified attribute is not accessible in the MBean dot  The following cases may result in an AttributeNotFoundException: No ModelMBeanAttributeInfo is found for the specified attribute dot  The ModelMBeanAttributeInfo's isWritable method returns 'false'.
throw AttributeNotFoundException if attrDescr != null.
throw AttributeNotFoundException if The specified attribute is not accessible in the MBean dot  The following cases may result in an AttributeNotFoundException: No ModelMBeanAttributeInfo is found for the specified attribute dot  The ModelMBeanAttributeInfo's isWritable method returns 'false'.
throw InvalidAttributeValueException if attrDescr != null.
throw InvalidAttributeValueException if No descriptor is defined for the specified attribute.
throw InvalidAttributeValueException if attrDescr != null.
throw InvalidAttributeValueException if No descriptor is defined for the specified attribute.
throw MBeanException if attrDescr != null.
throw MBeanException if Wraps one of the following Exceptions: An Exception thrown by the managed object's setter dot  A ServiceNotFoundException if a setMethod field is defined in the descriptor for the attribute and the managed resource is null; or if no setMethod field is defined and caching is not enabled for the attribute dot  Note that if there is no getMethod field either, then caching is automatically enabled dot  InvalidTargetObjectTypeException The 'targetType' field value is not 'objectReference' dot  An Exception thrown by the managed object's getter.
throw RuntimeOperationsException if attribute == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException: The attribute in parameter is null.
throw RuntimeOperationsException if mbi == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException if the MBeanInfo passed in parameter is null dot  Wraps an IllegalStateException if the ModelMBean is currently registered in the MBeanServer.
throw RuntimeOperationsException if registered.
throw RuntimeOperationsException if Wraps an IllegalArgumentException if the MBeanInfo passed in parameter is null dot  Wraps an IllegalStateException if the ModelMBean is currently registered in the MBeanServer.
throw AttributeNotFoundException if modelMBeanInfo == null.
throw AttributeNotFoundException if The specified attribute is not accessible in the MBean dot  The following cases may result in an AttributeNotFoundException: No ModelMBeanInfo was found for the Model MBean dot  No ModelMBeanAttributeInfo was found for the specified attribute name dot  The ModelMBeanAttributeInfo isReadable method returns 'false'.
throw AttributeNotFoundException if attrInfo == null.
throw AttributeNotFoundException if The specified attribute is not accessible in the MBean dot  The following cases may result in an AttributeNotFoundException: No ModelMBeanInfo was found for the Model MBean dot  No ModelMBeanAttributeInfo was found for the specified attribute name dot  The ModelMBeanAttributeInfo isReadable method returns 'false'.
throw AttributeNotFoundException if attrDescr != null.
throw AttributeNotFoundException if The specified attribute is not accessible in the MBean dot  The following cases may result in an AttributeNotFoundException: No ModelMBeanInfo was found for the Model MBean dot  No ModelMBeanAttributeInfo was found for the specified attribute name dot  The ModelMBeanAttributeInfo isReadable method returns 'false'.
throw MBeanException if attrDescr != null.
throw MBeanException if Wraps one of the following Exceptions: InvalidAttributeValueException: A wrong value type was received from the attribute's getter method or no 'getMethod' field defined in the descriptor for the attribute and no default value exists dot  ServiceNotFoundException: No ModelMBeanOperationInfo defined for the attribute's getter method or no descriptor associated with the ModelMBeanOperationInfo or the managed resource is null dot  InvalidTargetObjectTypeException The 'targetType' field value is not 'objectReference' dot  An Exception thrown by the managed object's getter.
throw MBeanException if attrDescr != null.
throw MBeanException if Wraps one of the following Exceptions: InvalidAttributeValueException: A wrong value type was received from the attribute's getter method or no 'getMethod' field defined in the descriptor for the attribute and no default value exists dot  ServiceNotFoundException: No ModelMBeanOperationInfo defined for the attribute's getter method or no descriptor associated with the ModelMBeanOperationInfo or the managed resource is null dot  InvalidTargetObjectTypeException The 'targetType' field value is not 'objectReference' dot  An Exception thrown by the managed object's getter.
throw RuntimeOperationsException if attrName == null.
throw RuntimeOperationsException if Wraps an IllegalArgumentException: The attribute name in parameter is null.
throw ListenerNotFoundException if listener == null.
throw ListenerNotFoundException if The listener is not registered in the MBean or is null.
throw ListenerNotFoundException if generalBroadcaster == null.
throw ListenerNotFoundException if The listener is not registered in the MBean or is null.
throw ListenerNotFoundException if listener == null.
throw ListenerNotFoundException if The listener is not registered in the MBean or is null.
throw ListenerNotFoundException if generalBroadcaster == null.
throw ListenerNotFoundException if The listener is not registered in the MBean or is null.
throw ArrayIndexOutOfBoundsException if index < 0 || index >= getLength().
throw ArrayIndexOutOfBoundsException if When the supplied index does not identify an attribute.
throw ArrayIndexOutOfBoundsException if index < 0 || index >= getLength().
throw ArrayIndexOutOfBoundsException if When the supplied index does not identify an attribute.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if When the supplied name does not identify an attribute.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if When the supplied name does not identify an attribute.
throw IllegalArgumentException if trigger dot getDragSource() == null.
throw IllegalArgumentException if the Component associated with the trigger event is null.
throw IllegalArgumentException if trigger dot getComponent() == null.
throw IllegalArgumentException if the Component associated with the trigger event is null.
throw IllegalArgumentException if trigger dot getSourceAsDragGestureRecognizer() dot getSourceActions() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the Component associated with the trigger event is null.
throw IllegalArgumentException if trigger dot getDragAction() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the Component associated with the trigger event is null.
throw IllegalArgumentException if trigger dot getDragSource() == null.
throw IllegalArgumentException if the DragSource for the trigger event is null.
throw IllegalArgumentException if trigger dot getComponent() == null.
throw IllegalArgumentException if the DragSource for the trigger event is null.
throw IllegalArgumentException if trigger dot getSourceAsDragGestureRecognizer() dot getSourceActions() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the DragSource for the trigger event is null.
throw IllegalArgumentException if trigger dot getDragAction() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the DragSource for the trigger event is null.
throw IllegalArgumentException if trigger dot getDragSource() == null.
throw IllegalArgumentException if the drag action for the trigger event is DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getComponent() == null.
throw IllegalArgumentException if the drag action for the trigger event is DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getSourceAsDragGestureRecognizer() dot getSourceActions() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the drag action for the trigger event is DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getDragAction() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the drag action for the trigger event is DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getDragSource() == null.
throw IllegalArgumentException if the source actions for the DragGestureRecognizer associated with the trigger event are equal to DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getComponent() == null.
throw IllegalArgumentException if the source actions for the DragGestureRecognizer associated with the trigger event are equal to DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getSourceAsDragGestureRecognizer() dot getSourceActions() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the source actions for the DragGestureRecognizer associated with the trigger event are equal to DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if trigger dot getDragAction() == DnDConstants dot ACTION_NONE.
throw IllegalArgumentException if the source actions for the DragGestureRecognizer associated with the trigger event are equal to DnDConstants dot ACTION_NONE.
throw NullPointerException if dscp == null.
throw NullPointerException if dscp, trigger, or t are null, or if dragImage is non-null and offset is null.
throw NullPointerException if trigger == null.
throw NullPointerException if dscp, trigger, or t are null, or if dragImage is non-null and offset is null.
throw NullPointerException if t == null.
throw NullPointerException if dscp, trigger, or t are null, or if dragImage is non-null and offset is null.
throw NullPointerException if dragImage != null && offset == null.
throw NullPointerException if dscp, trigger, or t are null, or if dragImage is non-null and offset is null.
throw TooManyListenersException if listener != null.
throw TooManyListenersException if a DragSourceListener has already been added.
throw IllegalArgumentException if object == null.
throw IllegalArgumentException if The specified object is null.
throw IllegalArgumentException if period <= 0.
throw IllegalArgumentException if The granularity period is less than or equal to zero.
throw IllegalArgumentException if object == null.
throw IllegalArgumentException if The specified object is null.
throw IllegalArgumentException if attribute == null.
throw IllegalArgumentException if The specified attribute is null.
throw IllegalArgumentException if prefix == null.
throw IllegalArgumentException if The prefix parameter is null.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if firstProvider == null || secondProvider == null.
throw IllegalArgumentException if either provider is null or they are the same object.
throw IllegalArgumentException if firstProvider == secondProvider.
throw IllegalArgumentException if either provider is null or they are the same object.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if either provider is null or they are the same object.
throw IllegalArgumentException if firstProvider == null || secondProvider == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if firstProvider == secondProvider.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if providerClass == null.
throw IllegalArgumentException if providerClass is null, or if it is not one of the allowed service types.
throw IllegalArgumentException if providerClass == null.
throw IllegalArgumentException if providerClass is null, or if it is not one of the allowed service types.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if provider is null.
throw IllegalArgumentException if firstProvider == null || secondProvider == null.
throw IllegalArgumentException if either provider is null or they are the same object.
throw IllegalArgumentException if firstProvider == secondProvider.
throw IllegalArgumentException if either provider is null or they are the same object.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if either provider is null or they are the same object.
throw IllegalArgumentException if firstProvider == null || secondProvider == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if firstProvider == secondProvider.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if reg == null.
throw IllegalArgumentException if there is no category corresponding to category.
throw IllegalArgumentException if providers == null.
throw IllegalArgumentException if providers is null or contains a null entry.
throw IllegalArgumentException if categories == null.
throw IllegalArgumentException if categories is null, or if one of the categories is not an allowed service type.
throw IllegalArgumentException if providerClass == null.
throw IllegalArgumentException if providerClass is null.
throw IllegalArgumentException if size < 0.
throw IllegalArgumentException if size is negative.
throw IllegalArgumentException if loginModuleName == null || loginModuleName dot isEmpty() || (controlFlag != LoginModuleControlFlag dot REQUIRED && controlFlag != LoginModuleControlFlag dot REQUISITE && controlFlag != LoginModuleControlFlag dot SUFFICIENT && controlFlag != LoginModuleControlFlag dot OPTIONAL) || options == null.
throw IllegalArgumentException if loginModuleName is null, if LoginModuleName has a length of 0, if controlFlag is not either REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL, or if options is null.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if (cacheDir != null) && !(cacheDir dot isDirectory()).
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if cacheDir is non-null but is not a directory.
throw IllegalArgumentException if (cacheDir != null) && !(cacheDir dot isDirectory()).
throw IllegalArgumentException if cacheDir is non-null but is not a directory.
throw IllegalArgumentException if src == null.
throw IllegalArgumentException if tLen is negative, src is null, len or offset is negative, or the sum of offset and len is greater than the length of the src byte array.
throw NullPointerException if painter == null.
throw NullPointerException if the painter or page argument is null.
throw NullPointerException if page == null.
throw NullPointerException if the painter or page argument is null.
throw IllegalArgumentException if out == null || def == null.
throw IllegalArgumentException if size <= 0.
throw IOException if def dot finished().
throw IOException if an I/O error has occurred.
throw IllegalArgumentException if constraints instanceof GridBagConstraints.
throw IllegalArgumentException if constraints is not a GridBagConstraint.
throw IllegalArgumentException if type < 0.
throw IllegalArgumentException if type is not in the range of 0 to 255, inclusive.
throw IllegalArgumentException if type < 0.
throw IllegalArgumentException if type is not in the range of 0 to 255, inclusive.
throw NullPointerException if encoded == null.
throw NullPointerException if encoded is null.
throw EmptyStackException if len == 0.
throw EmptyStackException if this stack is empty.
throw IllegalArgumentException if aContainer == null || aComponent == null.
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if aContainer == null.
throw IllegalArgumentException if aContainer is null.
throw IllegalArgumentException if aContainer == null.
throw IllegalArgumentException if aContainer is null.
throw IllegalArgumentException if aContainer == null || aComponent == null.
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IOException if (writeSide != null) && (!writeSide dot isAlive()) && (--trials < 0).
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or an I/O error occurs.
throw IndexOutOfBoundsException if (off < 0) || (off > cbuf dot length) || (len < 0)|| ((off + len) > cbuf dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or len is negative, or len is greater than cbuf dot length - off.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, or closed.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, or closed.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, or closed.
throw IllegalArgumentException if !name dot equals("control").
throw IllegalArgumentException if name is empty or if arguments are invalid.
throw IllegalArgumentException if actions != null && actions dot length() > 0.
throw IllegalArgumentException if name is empty or if arguments are invalid.
throw AWTException if GraphicsEnvironment dot isHeadless().
throw AWTException if the platform configuration does not allow low-level input control dot  This exception is always thrown when GraphicsEnvironment dot isHeadless() returns true.
throw IllegalArgumentException if mods dot contains(Modifier dot AUTOMATIC) && mods dot size() > 1.
throw IllegalArgumentException if If the module name is null or is not a legal module name.
throw NullPointerException if language == null || country == null || variant == null.
throw NullPointerException if thrown if argument is null.
throw MissingResourceException if language3 == null.
throw MissingResourceException if Throws MissingResourceException if three-letter language abbreviation is not available for this locale.
throw IllegalArgumentException if !LocaleExtensions dot isValidKey(key).
throw IllegalArgumentException if key is not well-formed.
throw IllegalArgumentException if !isUnicodeExtensionKey(key).
throw IllegalArgumentException if the key is not well-formed.
throw MissingResourceException if country3 == null.
throw MissingResourceException if Throws MissingResourceException if the three-letter country abbreviation is not available for this locale.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if the value is 0 or is negative.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if bindpoint != null && (!(bindpoint instanceof InetSocketAddress)).
throw IllegalArgumentException if bindpoint is a SocketAddress subclass not supported by this socket.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if !on.
throw IllegalArgumentException if the linger value is negative.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if endpoint == null.
throw IllegalArgumentException if endpoint is null or is a SocketAddress subclass not supported by this socket, or if timeout is negative.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if endpoint is null or is a SocketAddress subclass not supported by this socket, or if timeout is negative.
throw IllegalArgumentException if !(endpoint instanceof InetSocketAddress).
throw IllegalArgumentException if endpoint is null or is a SocketAddress subclass not supported by this socket, or if timeout is negative.
throw SocketException if isClosed().
throw SocketException if there is an error setting the traffic class or type-of-service.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if an error occurs enabling or disabling the SO_REUSEADDR socket option, or the socket is closed.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if timeout is negative.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if factory != null.
throw SocketException if the factory is already defined.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if !(size > 0).
throw IllegalArgumentException if the value is 0 or is negative.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if proxy == null.
throw IllegalArgumentException if the port parameter is outside the specified range of valid port values, which is between 0 and 65535, inclusive.
throw IllegalArgumentException if type == Proxy dot Type dot SOCKS || type == Proxy dot Type dot HTTP.
throw IllegalArgumentException if the port parameter is outside the specified range of valid port values, which is between 0 and 65535, inclusive.
throw NullPointerException if address == null.
throw NullPointerException if host is null.
throw IllegalArgumentException if !fd dot valid().
throw IllegalArgumentException if If the file descriptor is not valid.
throw IllegalArgumentException if index > component dot size() || (index < 0 && index != -1).
throw IllegalArgumentException if index is invalid; if comp is a child of this container, the valid range is [-1, getComponentCount()-1]; if component is not a child of this container, the valid range is [-1, getComponentCount()].
throw IllegalArgumentException if comp dot parent != null.
throw IllegalArgumentException if index is invalid; if comp is a child of this container, the valid range is [-1, getComponentCount()-1]; if component is not a child of this container, the valid range is [-1, getComponentCount()].
throw IllegalArgumentException if index > component dot size() || (index < 0 && index != -1).
throw IllegalArgumentException if comp is an ancestor of this container.
throw IllegalArgumentException if comp dot parent != null.
throw IllegalArgumentException if comp is an ancestor of this container.
throw IllegalArgumentException if index > component dot size() || (index < 0 && index != -1).
throw IllegalArgumentException if adding a window to a container.
throw IllegalArgumentException if comp dot parent != null.
throw IllegalArgumentException if adding a window to a container.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another focus traversal operation for this Container.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS.
throw IllegalArgumentException if stackDepth >= 0 && stackFrame == null.
throw IllegalArgumentException if stackDepth ? 0 but stackFrame is null, or stackDepth < 0 but stackFrame is not null.
throw IllegalArgumentException if stackDepth < 0 && stackFrame != null.
throw IllegalArgumentException if stackDepth ? 0 but stackFrame is null, or stackDepth < 0 but stackFrame is not null.
throw NullPointerException if ex == null.
throw NullPointerException if the exception is null.
throw IllegalArgumentException if srcCM instanceof IndexColorModel.
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if numComponents != 1 && numComponents != srcCM dot getNumComponents() && numComponents != srcCM dot getNumColorComponents().
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if numBands != dstLength.
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if numComponents != 1 && numComponents != src dot getNumBands().
throw IllegalArgumentException if the source and destinations rasters do not have the same number of bands, or the number of arrays in the LookupTable does not meet the restrictions described in the class comments.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if !(randomNumberOrigin < randomNumberBound).
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if !(randomNumberOrigin < randomNumberBound).
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if bound <= 0.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if origin >= bound.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw UnsupportedOperationException if initialized.
throw UnsupportedOperationException if always.
throw IllegalArgumentException if bound <= 0.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if origin >= bound.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if !(bound > 0 dot 0).
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if !(origin < bound).
throw IllegalArgumentException if origin is greater than or equal to bound.
throw NullPointerException if curve == null.
throw NullPointerException if curve, g, or n is null.
throw NullPointerException if g == null.
throw NullPointerException if curve, g, or n is null.
throw NullPointerException if n == null.
throw NullPointerException if curve, g, or n is null.
throw IllegalArgumentException if n dot signum() != 1.
throw IllegalArgumentException if n or h is not positive.
throw IllegalArgumentException if h <= 0.
throw IllegalArgumentException if n or h is not positive.
throw SQLException if len < 1 || len > 128.
throw SQLException if identifier is not a valid identifier.
throw SQLException if Pattern dot compile("[^\u0000\"]+") dot matcher(identifier) dot matches().
throw SQLException if identifier is not a valid identifier.
throw IllegalArgumentException if button <= 0 || button > BUTTON_DOWN_MASK dot length.
throw IllegalArgumentException if button is less than zero or greater than the number of button masks reserved for buttons.
throw IllegalArgumentException if (component < 0) || (component > numComponents - 1).
throw IllegalArgumentException if component is less than 0 or greater than numComponents - 1.
throw IllegalArgumentException if (idx < 0) || (idx > numComponents - 1).
throw IllegalArgumentException if idx is less than 0 or greater than numComponents - 1.
throw IllegalArgumentException if (component < 0) || (component > numComponents - 1).
throw IllegalArgumentException if component is less than 0 or greater than numComponents - 1.
throw IllegalArgumentException if !name dot equals("virtualMachineManager").
throw IllegalArgumentException if arguments are invalid.
throw IllegalArgumentException if !name dot equals("virtualMachineManager").
throw IllegalArgumentException if arguments are invalid.
throw IllegalArgumentException if actions != null && actions dot length() > 0.
throw IllegalArgumentException if arguments are invalid.
throw IllegalArgumentException if cause == null.
throw IllegalArgumentException if source equals null.
throw NoSuchFieldException if field == null.
throw NoSuchFieldException if a field with the specified name is not found.
throw ClassCastException if obj != null && !isInstance(obj).
throw ClassCastException if the object is not null and is not assignable to the type T.
throw ClassCastException if clazz dot isAssignableFrom(this).
throw ClassCastException if this Class object does not represent a subclass of the specified class (here "subclass" includes the class itself).
throw NoSuchFieldException if field == null.
throw NoSuchFieldException if a field with the specified name is not found.
throw NoSuchMethodException if method == null.
throw NoSuchMethodException if a matching method is not found.
throw IllegalAccessException if tmpConstructor == null.
throw IllegalAccessException if the class or its nullary constructor is not accessible.
throw InstantiationException if tmpConstructor == null.
throw InstantiationException if this Class represents an abstract class, an interface, an array class, a primitive type, or void; or if the class has no nullary constructor; or if the instantiation fails for some other reason.
throw NoSuchMethodException if method == null.
throw NoSuchMethodException if a matching method is not found or if the name is "<init>"or "<clinit>".
throw IllegalArgumentException if constraints instanceof String.
throw IllegalArgumentException if the constraint is not a string.
throw LoginException if subject dot isReadOnly().
throw LoginException if the logout fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw LoginException if userProvider == null.
throw LoginException if this LoginModule is unable to perform the authentication.
throw IllegalArgumentException if frontCaps == null || backCaps == null.
throw IllegalArgumentException if frontCaps or backCaps are null.
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if columns is less than 0.
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if (alignment == LEFT) || (alignment == CENTER) || (alignment == RIGHT)|| (alignment == LEADING)|| (alignment == TRAILING).
throw IllegalArgumentException if alignment is not a valid key.
throw IllegalArgumentException if !env dot getClass() dot getName() dot equals("com dot sun dot tools dot javac dot processing dot JavacProcessingEnvironment").
throw IllegalArgumentException if the env does not support the Trees API.
throw IllegalArgumentException if otherPrimeInfo == null.
throw IllegalArgumentException if an empty, i dot e dot  0-length, otherPrimeInfo is specified.
throw IllegalArgumentException if saltLen < 0.
throw IllegalArgumentException if saltLen is less than 0.
throw IllegalArgumentException if trailerField < 0.
throw IllegalArgumentException if saltLen is less than 0.
throw IllegalArgumentException if maxAge != null && maxAge dot isNegative().
throw IllegalArgumentException if maxAge is negative.
throw IllegalArgumentException if start != null && end != null && end dot isBefore(start).
throw IllegalArgumentException if end happens before start.
throw IllegalArgumentException if maxSize < 0.
throw IllegalArgumentException if maxSize is negative.
throw IllegalArgumentException if !isValidBasicStrict(notifType,sourceObj,id,typeName) || !isValidCreate(notifType).
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if !isValidBasicStrict(notifType,sourceObj,id,typeName) || !isValidUpdate(notifType,name,newValue,oldValue).
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if orientation != newOrientation.
throw IllegalArgumentException if newOrientation is an illegal value.
throw IllegalArgumentException if protocols == null.
throw IllegalArgumentException if protocols is null, or if any element in a non-empty array is null or an empty (zero-length) string.
throw IllegalArgumentException if p == null || p dot isEmpty().
throw IllegalArgumentException if protocols is null, or if any element in a non-empty array is null or an empty (zero-length) string.
throw IllegalArgumentException if matchers != null.
throw IllegalArgumentException if the matchers contains more than one name of the same name type.
throw IllegalArgumentException if maximumPacketSize < 0.
throw IllegalArgumentException if maximumPacketSize is negative.
throw IllegalArgumentException if serverNames != null.
throw IllegalArgumentException if the serverNames contains more than one name of the same name type.
throw NoSuchElementException if result == null.
throw NoSuchElementException if no line was found.
throw NoSuchElementException if result == null.
throw NoSuchElementException if no line was found.
throw IllegalStateException if !matchValid.
throw IllegalStateException if If no match result is available.
throw IllegalArgumentException if horizon < 0.
throw IllegalArgumentException if horizon is negative.
throw IllegalArgumentException if (radix < Character dot MIN_RADIX) || (radix > Character dot MAX_RADIX).
throw IllegalArgumentException if radix is out of range.
throw IllegalArgumentException if fields == null.
throw IllegalArgumentException if the parameter is null, or if a field name is null or empty, or if the same field name appears more than once (which can happen because field names are not case sensitive).
throw IllegalArgumentException if name == null || name dot isEmpty().
throw IllegalArgumentException if the parameter is null, or if a field name is null or empty, or if the same field name appears more than once (which can happen because field names are not case sensitive).
throw IllegalArgumentException if map dot containsKey(name).
throw IllegalArgumentException if the parameter is null, or if a field name is null or empty, or if the same field name appears more than once (which can happen because field names are not case sensitive).
throw IllegalArgumentException if d != null.
throw IllegalArgumentException if two Descriptors contain the same field name with different associated values dot  Primitive array values are considered the same if they are of the same type with the same elements dot  Object array values are considered the same if Arrays dot deepEquals(Object[],Object[]) returns true.
throw InvalidMidiDataException if divisionType == PPQ.
throw InvalidMidiDataException if divisionType is not valid.
throw InvalidMidiDataException if divisionType == PPQ.
throw InvalidMidiDataException if divisionType is not valid.
throw NumberFormatException if versionInfo dot specVersion == null || versionInfo dot specVersion dot length() < 1.
throw NumberFormatException if the current version is not known or the desired or current version is not of the correct dotted form.
throw CloneNotSupportedException if this instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw NullPointerException if stringSid == null.
throw NullPointerException if the String is null.
throw IllegalArgumentException if stringSid dot length() == 0.
throw IllegalArgumentException if the String has zero length.
throw IllegalArgumentException if !(averageCharsPerByte > 0 dot 0f).
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if !(maxCharsPerByte > 0 dot 0f).
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if averageCharsPerByte > maxCharsPerByte.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if newAction == null.
throw IllegalArgumentException if If the precondition on the parameter does not hold.
throw IllegalArgumentException if newAction == null.
throw IllegalArgumentException if If the precondition on the parameter does not hold.
throw IllegalArgumentException if newReplacement == null.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if len == 0.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if len > maxCharsPerByte.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw InvalidKeyException if spi != null.
throw InvalidKeyException if the given key is inappropriate for this key agreement, e dot g dot , is of the wrong type or has an incompatible algorithm type.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw DateTimeException if dayOfMonth > month dot maxLength().
throw DateTimeException if the value of any field is out of range, or if the day-of-month is invalid for the month.
throw DateTimeException if Chronology dot from(temporal) dot equals(IsoChronology dot INSTANCE) == false.
throw DateTimeException if unable to make the adjustment.
throw IOException if sink == null.
throw IOException if the pipe is broken, unconnected, closed, or if an I/O error occurs.
throw IOException if sink == null.
throw IOException if the pipe is broken, unconnected, closed, or if an I/O error occurs.
throw IOException if snk == null.
throw IOException if an I/O error occurs.
throw IllegalArgumentException if impact < INFO || impact > UNKNOWN.
throw IllegalArgumentException if impact is not one of ACTION, ACTION_INFO, INFO or UNKNOWN.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if !(randomNumberOrigin < randomNumberBound).
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if !(randomNumberOrigin < randomNumberBound).
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if bound <= 0.
throw IllegalArgumentException if bound is not positive.
throw IllegalStateException if destroyed.
throw IllegalStateException if the key is destroyed.
throw IllegalStateException if destroyed.
throw IllegalStateException if the key is destroyed.
throw NoSuchElementException if l == null.
throw NoSuchElementException if this list is empty.
throw NoSuchElementException if l == null.
throw NoSuchElementException if this list is empty.
throw NoSuchElementException if f == null.
throw NoSuchElementException if this list is empty.
throw NoSuchElementException if f == null.
throw NoSuchElementException if this list is empty.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty() || choices == null || choices dot length == 0 || defaultChoice < 0 || defaultChoice >= choices dot length.
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if choices is null, if choices has a length of 0, if any element from choices is null, if any element from choices has a length of 0 or if defaultChoice does not fall within the array boundaries of choices.
throw IllegalArgumentException if choices[i] == null || choices[i] dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if choices is null, if choices has a length of 0, if any element from choices is null, if any element from choices has a length of 0 or if defaultChoice does not fall within the array boundaries of choices.
throw UnsupportedOperationException if !multipleSelectionsAllowed.
throw UnsupportedOperationException if multiple selections are not allowed, as determined by allowMultipleSelections.
throw IllegalArgumentException if v < 0.
throw IllegalArgumentException if the implementation encounters illegal characters.
throw IllegalArgumentException if (i < numChars) && (c == '%').
throw IllegalArgumentException if the implementation encounters illegal characters.
throw InvalidParameterException if pub == null || priv == null.
throw InvalidParameterException if the key pair is not properly initialized.
throw IllegalArgumentException if syncResolver == null.
throw IllegalArgumentException if the SyncResolver object is null.
throw IllegalArgumentException if syncResolver == null.
throw IllegalArgumentException if the SyncResolver object is null.
throw IllegalStateException if Thread dot currentThread() == currWriter.
throw IllegalStateException if thrown on illegal lock attempt dot  If the document is implemented properly, this can only happen if a document listener attempts to mutate the document dot  This situation violates the bean event model where order of delivery is not guaranteed and all listeners should be notified before further mutations are allowed.
throw BadLocationException if length < 0.
throw BadLocationException if the range given includes a position that is not a valid position within the document.
throw BadLocationException if length < 0.
throw BadLocationException if the range given includes a position that is not a valid position within the document.
throw BadLocationException if offs > getLength().
throw BadLocationException if the given insert position is not a valid position within the document.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw DateTimeException if Chronology dot from(temporal) dot equals(IsoChronology dot INSTANCE) == false.
throw DateTimeException if unable to make the adjustment.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw IllegalArgumentException if width == 0 || height == 0.
throw IllegalArgumentException if width equals zero or height equals zero.
throw ArrayIndexOutOfBoundsException if (x < 0) || (y < 0) || (x >= width)|| (y >= height).
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if iArray is too small to hold the output.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if numBands < 1.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if maxBank < 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if this dot bankIndices[i] > maxBank.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if this dot bandOffsets dot length != this dot bankIndices dot length.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if numBands < 1.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if maxBank < 0.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if this dot bankIndices[i] > maxBank.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if this dot bandOffsets dot length != this dot bankIndices dot length.
throw IllegalArgumentException if pixelStride is less than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if numBands < 1.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if maxBank < 0.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if this dot bankIndices[i] > maxBank.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if this dot bandOffsets dot length != this dot bankIndices dot length.
throw IllegalArgumentException if scanlineStride is less than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if numBands < 1.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if maxBank < 0.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if this dot bankIndices[i] > maxBank.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if this dot bandOffsets dot length != this dot bankIndices dot length.
throw IllegalArgumentException if the length of bankIndices does not equal the length of bankOffsets.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if numBands < 1.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if maxBank < 0.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if this dot bankIndices[i] > maxBank.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if this dot bandOffsets dot length != this dot bankIndices dot length.
throw IllegalArgumentException if any of the bank indices of bandIndices is less than 0.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if numBands < 1.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if pixelStride < 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if scanlineStride < 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if (dataType < DataBuffer dot TYPE_BYTE) || (dataType > DataBuffer dot TYPE_DOUBLE).
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if maxBank < 0.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if this dot bankIndices[i] > maxBank.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if this dot bandOffsets dot length != this dot bankIndices dot length.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw ArrayIndexOutOfBoundsException if (x < 0) || (y < 0) || (x >= width)|| (y >= height).
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if obj is too small to hold the output.
throw IllegalStateException if !isFrozen.
throw IllegalStateException if the ConstantCallSite constructor has not completed.
throw InvalidObjectException if theTable == null.
throw InvalidObjectException if the enumeration value table is null, this enumeration value's integer value does not correspond to an element in the enumeration value table, or the corresponding element in the enumeration value table is null dot  (Note: InvalidObjectException is a subclass of ObjectStreamException, which readResolve() is declared to throw dot ).
throw InvalidObjectException if 0 > theIndex || theIndex >= theTable dot length.
throw InvalidObjectException if the enumeration value table is null, this enumeration value's integer value does not correspond to an element in the enumeration value table, or the corresponding element in the enumeration value table is null dot  (Note: InvalidObjectException is a subclass of ObjectStreamException, which readResolve() is declared to throw dot ).
throw InvalidObjectException if result == null.
throw InvalidObjectException if the enumeration value table is null, this enumeration value's integer value does not correspond to an element in the enumeration value table, or the corresponding element in the enumeration value table is null dot  (Note: InvalidObjectException is a subclass of ObjectStreamException, which readResolve() is declared to throw dot ).
throw MidiUnavailableException if connected.
throw MidiUnavailableException if the sequencer is not available due to resource restrictions, or no sequencer is installed in the system, or if connected is true, and there is no Receiver available by any installed MidiDevice.
throw InvalidMidiDataException if sequence == null.
throw InvalidMidiDataException if the File does not point to valid MIDI file data recognized by the system.
throw InvalidMidiDataException if sequence == null.
throw InvalidMidiDataException if the File does not point to valid MIDI file data recognized by the system.
throw InvalidMidiDataException if sequence == null.
throw InvalidMidiDataException if the File does not point to valid MIDI file data recognized by the system.
throw IllegalArgumentException if bytesWritten == -2.
throw IllegalArgumentException if the file type is not supported by the system.
throw IllegalArgumentException if bytesWritten == -2.
throw IllegalArgumentException if the file type is not supported by the system.
throw InvalidMidiDataException if format == null.
throw InvalidMidiDataException if the File does not point to valid MIDI file data recognized by the system.
throw InvalidMidiDataException if format == null.
throw InvalidMidiDataException if the File does not point to valid MIDI file data recognized by the system.
throw InvalidMidiDataException if format == null.
throw InvalidMidiDataException if the File does not point to valid MIDI file data recognized by the system.
throw IllegalArgumentException if (long)width * height > Integer dot MAX_VALUE.
throw IllegalArgumentException if either width or height are negative or zero.
throw IllegalArgumentException if (long)width * height > Integer dot MAX_VALUE.
throw IllegalArgumentException if the product of width and height is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if bufferedImageType >= BufferedImage dot TYPE_INT_RGB && bufferedImageType <= BufferedImage dot TYPE_BYTE_INDEXED.
throw IllegalArgumentException if bufferedImageType is not one of the standard types, or is equal to TYPE_CUSTOM.
throw IllegalArgumentException if bufferedImageType >= BufferedImage dot TYPE_INT_RGB && bufferedImageType <= BufferedImage dot TYPE_BYTE_INDEXED.
throw IllegalArgumentException if bufferedImageType is not one of the standard types, or is equal to TYPE_CUSTOM.
throw IllegalArgumentException if band < 0 || band >= getNumBands().
throw IllegalArgumentException if band is negative or greater than the largest band index.
throw IllegalArgumentException if image == null.
throw IllegalArgumentException if image is null.
throw IllegalArgumentException if colorModel == null.
throw IllegalArgumentException if the argument is null.
throw IllegalArgumentException if sampleModel == null.
throw IllegalArgumentException if the argument is null.
throw IllegalArgumentException if !colorModel dot isCompatibleSampleModel(sampleModel).
throw IllegalArgumentException if the argument is null.
throw IllegalArgumentException if image == null.
throw IllegalArgumentException if the argument is null.
throw NoSuchElementException if !isPresent.
throw NoSuchElementException if no value is present.
throw IllegalArgumentException if m instanceof EnumMap.
throw IllegalArgumentException if m is not an EnumMap instance and contains no mappings.
throw ParseException if !isValidValue(value,true).
throw ParseException if there is an error in the conversion.
throw NullPointerException if x == null.
throw NullPointerException if x is null.
throw NullPointerException if g == null.
throw NullPointerException if g or c is null.
throw ClassCastException if !(obj instanceof LdapName).
throw ClassCastException if obj is null or not a LdapName.
throw IllegalArgumentException if start > getMaximum() || start < getMinimum().
throw IllegalArgumentException if start is out of range, or if increment is less than or equal to zero.
throw IllegalArgumentException if increment <= 0.
throw IllegalArgumentException if start is out of range, or if increment is less than or equal to zero.
throw ActivationException if currGroup != null.
throw ActivationException if group already exists or if error occurs during group creation.
throw ActivationException if canCreate == false.
throw ActivationException if group already exists or if error occurs during group creation.
throw ActivationException if groupClassName == null || groupClassName dot equals(defaultGroupClass dot getName()).
throw ActivationException if group already exists or if error occurs during group creation.
throw ActivationException if groupClassName == null || groupClassName dot equals(defaultGroupClass dot getName()).
throw ActivationException if group already exists or if error occurs during group creation.
throw ActivationException if currSystem == null.
throw ActivationException if activation system cannot be obtained or is not bound (means that it is not running).
throw ActivationException if currSystem != null.
throw ActivationException if activation system is already set.
throw NullPointerException if name == null || value == null.
throw NullPointerException if encoded is null.
throw NullPointerException if encoded == null.
throw NullPointerException if encoded is null.
throw IllegalArgumentException if len < 5.
throw IllegalArgumentException if the length of any row in newZoneStrings is less than 5.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw BufferOverflowException if n > remaining().
throw BufferOverflowException if If there is insufficient space in this buffer.
throw BufferOverflowException if length > remaining().
throw BufferOverflowException if If there is insufficient space in this buffer.
throw BufferOverflowException if end - start > remaining().
throw BufferOverflowException if If there is insufficient space in this buffer.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw NullPointerException if mimeType == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if type == null || factory == null.
throw NullPointerException if any of the parameters is null.
throw NullPointerException if extension == null.
throw NullPointerException if extension is null.
throw NullPointerException if shortName == null.
throw NullPointerException if shortName is null.
throw IllegalArgumentException if bindings == null.
throw IllegalArgumentException if bindings is null.
throw NullPointerException if name == null || factory == null.
throw NullPointerException if any of the parameters is null.
throw NullPointerException if extension == null || factory == null.
throw NullPointerException if any of the parameters is null.
throw KeyStoreException if protParam instanceof KeyStore dot PasswordProtection.
throw KeyStoreException if the operation failed.
throw UnrecoverableKeyException if protParam == null.
throw UnrecoverableKeyException if the entry is a PrivateKeyEntry or SecretKeyEntry and the specified protParam does not contain the information needed to recover the key (e dot g dot  wrong password).
throw NoSuchAlgorithmException if protection instanceof PasswordProtection.
throw NoSuchAlgorithmException if the algorithm used to check the integrity of the keystore cannot be found.
throw NoSuchAlgorithmException if protection instanceof PasswordProtection.
throw NoSuchAlgorithmException if the algorithm used to check the integrity of the keystore cannot be found.
throw NoSuchAlgorithmException if protection instanceof PasswordProtection.
throw NoSuchAlgorithmException if the algorithm used to check the integrity of the keystore cannot be found.
throw KeyStoreException if protParam != null && !(protParam instanceof KeyStore dot PasswordProtection).
throw KeyStoreException if this operation fails.
throw KeyStoreException if protParam != null.
throw KeyStoreException if this operation fails.
throw KeyStoreException if entry instanceof KeyStore dot TrustedCertificateEntry.
throw KeyStoreException if this operation fails.
throw KeyStoreException if entry instanceof KeyStore dot TrustedCertificateEntry.
throw KeyStoreException if this operation fails.
throw KeyStoreException if entry instanceof KeyStore dot TrustedCertificateEntry.
throw KeyStoreException if this operation fails.
throw NullPointerException if stream == null.
throw NullPointerException if stream is null.
throw NoSuchAlgorithmException if property == null || property dot isEmpty().
throw NoSuchAlgorithmException if no algorithm is available.
throw IllegalArgumentException if params == null.
throw IllegalArgumentException if params is null, illegal or unsupported by this SecureRandom.
throw IllegalArgumentException if params == null.
throw IllegalArgumentException if the specified provider or params is null.
throw IllegalArgumentException if params == null.
throw IllegalArgumentException if the specified provider or params is null.
throw IllegalArgumentException if params == null.
throw IllegalArgumentException if the specified provider or params is null.
throw IllegalArgumentException if numBytes < 0.
throw IllegalArgumentException if numBytes is negative.
throw IllegalArgumentException if params == null.
throw IllegalArgumentException if params is null, illegal or unsupported by this SecureRandom.
throw LoginException if subject == null.
throw LoginException if the logout fails.
throw LoginException if subject == null.
throw LoginException if the caller-specified name does not appear in the Configuration and there is no Configuration entry for "other".
throw LoginException if callbackHandler == null.
throw LoginException if the caller-specified name does not appear in the Configuration and there is no Configuration entry for "other".
throw LoginException if callbackHandler == null.
throw LoginException if the caller-specified name does not appear in the Configuration and there is no Configuration entry for "other".
throw IndexOutOfBoundsException if (off < 0) || (off > cbuf dot length) || (len < 0)|| ((off + len) > cbuf dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or len is negative, or len is greater than cbuf dot length - off.
throw IllegalArgumentException if readAheadLimit < 0.
throw IllegalArgumentException if If readAheadLimit < 0.
throw IllegalArgumentException if type instanceof MethodType.
throw IllegalArgumentException if the bootstrap arguments are invalid or inconsistent.
throw IllegalArgumentException if methodType != null && !methodType dot equals(MethodType dot methodType(boolean dot class,recordClass,Object dot class)).
throw IllegalArgumentException if the bootstrap arguments are invalid or inconsistent.
throw IllegalArgumentException if methodType != null && !methodType dot equals(MethodType dot methodType(int dot class,recordClass)).
throw IllegalArgumentException if the bootstrap arguments are invalid or inconsistent.
throw IllegalArgumentException if methodType != null && !methodType dot equals(MethodType dot methodType(String dot class,recordClass)).
throw IllegalArgumentException if the bootstrap arguments are invalid or inconsistent.
throw IllegalArgumentException if nameList dot size() != getterList dot size().
throw IllegalArgumentException if the bootstrap arguments are invalid or inconsistent.
throw NullPointerException if exp == null.
throw NullPointerException if exp is null.
throw NullPointerException if currency == null.
throw NullPointerException if currency is null.
throw IllegalArgumentException if sf == null.
throw IllegalArgumentException if the SSLSocketFactory parameter is null.
throw IllegalArgumentException if v == null.
throw IllegalArgumentException if the HostnameVerifier parameter is null.
throw IllegalArgumentException if sf == null.
throw IllegalArgumentException if the SSLSocketFactory parameter is null.
throw IllegalArgumentException if v == null.
throw IllegalArgumentException if the HostnameVerifier parameter is null.
throw IllegalArgumentException if !Modifier dot isStatic(modifiers) && (this instanceof Method || this instanceof Field).
throw IllegalArgumentException if this reflected object is a static member or constructor and the given obj is non-null, or if this reflected object is an instance method or field and the given obj is null or of type that is not a subclass of the declaring class of the member.
throw IllegalArgumentException if !Modifier dot isStatic(modifiers) && (this instanceof Method || this instanceof Field).
throw IllegalArgumentException if this reflected object is a static member or constructor and the given obj is non-null, or if this reflected object is an instance method or field and the given obj is null or of type that is not a subclass of the declaring class of the member.
throw IllegalArgumentException if !Modifier dot isStatic(modifiers) && (this instanceof Method || this instanceof Field).
throw IllegalArgumentException if this reflected object is a static member or constructor and the given obj is non-null, or if this reflected object is an instance method or field and the given obj is null or of type that is not a subclass of the declaring class of the member.
throw IllegalArgumentException if actions != null && !actions dot isEmpty().
throw IllegalArgumentException if name is empty or invalid, or actions is a non-empty string.
throw NullPointerException if driver != null.
throw NullPointerException if driver is null.
throw SQLException if url == null.
throw SQLException if a database access error occurs or the url is null.
throw SecurityException if registeredDrivers dot contains(aDriver).
throw SecurityException if a security manager exists and its checkPermission method denies permission to deregister a driver.
throw IllegalArgumentException if columnModel == null.
throw IllegalArgumentException if columnModel is null.
throw HeadlessException if isHeadless.
throw HeadlessException if the method is asked to show a printing dialog or run interactively, and GraphicsEnvironment dot isHeadless returns true.
throw HeadlessException if isHeadless.
throw HeadlessException if the method is asked to show a printing dialog or run interactively, and GraphicsEnvironment dot isHeadless returns true.
throw IllegalArgumentException if selectionModel == null.
throw IllegalArgumentException if selectionModel is null.
throw IllegalArgumentException if dataModel == null.
throw IllegalArgumentException if dataModel is null.
throw IllegalArgumentException if gridColor == null.
throw IllegalArgumentException if gridColor is null.
throw IllegalArgumentException if rowHeight <= 0.
throw IllegalArgumentException if rowHeight is less than 1.
throw IllegalArgumentException if rowHeight <= 0.
throw IllegalArgumentException if rowHeight is less than 1.
throw IllegalArgumentException if capacity <= 0.
throw IllegalArgumentException if capacity is less than c dot size(), or less than 1.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw IllegalArgumentException if iv == null.
throw IllegalArgumentException if iv is null or (iv dot length - offset < 2 * (wordSize / 8)).
throw IllegalArgumentException if iv dot length - offset < blockSize.
throw IllegalArgumentException if iv is null or (iv dot length - offset < 2 * (wordSize / 8)).
throw IllegalArgumentException if obj instanceof Date.
throw IllegalArgumentException if the Format cannot format the given obj.
throw ParseException if pos dot index == 0.
throw ParseException if the beginning of the specified string cannot be parsed.
throw NullPointerException if type == null || source == null || connectionId == null.
throw NullPointerException if type, source, or connectionId is null.
throw IllegalArgumentException if sequenceNumber < 0.
throw IllegalArgumentException if sequenceNumber is negative.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH - 1.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, or KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH - 1.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, or KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS.
throw IllegalArgumentException if width < 0 || height < 0.
throw IllegalArgumentException if width or height is < 0.
throw IllegalArgumentException if id < 0 || id >= KeyboardFocusManager dot TRAVERSAL_KEY_LENGTH - 1.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, or KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another focus traversal operation for this Component.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalComponentStateException if parent == null.
throw IllegalComponentStateException if the Component does not have its own locale and has not yet been added to a containment hierarchy such that the locale can be determined from the containing parent.
throw NullPointerException if orientation == null.
throw NullPointerException if orientation is null.
throw ClassNotFoundException if result == null.
throw ClassNotFoundException if the class of a serialized object could not be found.
throw ClassNotFoundException if result == null.
throw ClassNotFoundException if the class of a serialized object could not be found.
throw IllegalStateException if platformRecorder == null.
throw IllegalStateException if Flight Recorder can't be created (for example, if the Java Virtual Machine (JVM) lacks Flight Recorder support, or if the file repository can't be created or accessed).
throw IllegalArgumentException if (chars[i] == '\\') && (i + 1 < end).
throw IllegalArgumentException if When an Illegal value is provided.
throw ClassCastException if !(obj instanceof Rdn).
throw ClassCastException if obj is null or not a Rdn.
throw InvalidNameException if attrSet dot size() == 0.
throw InvalidNameException if If type/value cannot be used to construct a valid RDN.
throw InvalidNameException if type dot equals("") || isEmptyValue(value).
throw InvalidNameException if If type/value cannot be used to construct a valid RDN.
throw IllegalArgumentException if om dot isPresent().
throw IllegalArgumentException if a module of the given name is not defined in this layer or any parent of this layer.
throw NoSuchProviderException if mechanismType == null || algorithm == null || provider == null.
throw NoSuchProviderException if the specified provider is not registered in the security provider list.
throw NoSuchProviderException if p == null.
throw NoSuchProviderException if the specified provider is not registered in the security provider list.
throw NullPointerException if mechanismType == null || algorithm == null.
throw NullPointerException if provider, mechanismType, or algorithm is null.
throw NullPointerException if mechanismType == null || algorithm == null || provider == null.
throw NullPointerException if provider, mechanismType, or algorithm is null.
throw NullPointerException if mechanismType == null || algorithm == null || provider == null.
throw NullPointerException if provider, mechanismType, or algorithm is null.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin >= randomNumberBound.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if streamSize < 0L.
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if !(randomNumberOrigin < randomNumberBound).
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if !(randomNumberOrigin < randomNumberBound).
throw IllegalArgumentException if randomNumberOrigin is greater than or equal to randomNumberBound.
throw IllegalArgumentException if bound <= 0.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if origin >= bound.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if bound <= 0.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if origin >= bound.
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if !(bound > 0 dot 0).
throw IllegalArgumentException if origin is greater than or equal to bound.
throw IllegalArgumentException if !(origin < bound).
throw IllegalArgumentException if origin is greater than or equal to bound.
throw BadLocationException if pos < -1 || pos > getDocument() dot getLength().
throw BadLocationException if the given position is not a valid position within the document.
throw BadLocationException if doc instanceof HTMLDocument.
throw BadLocationException if pos represents an invalid location within the document.
throw BadLocationException if offset > doc dot getLength().
throw BadLocationException if offset is invalid.
throw IllegalArgumentException if p0 != p1.
throw IllegalArgumentException if the selection doesn't have a valid mapping into the document for some reason.
throw IllegalArgumentException if doc != null.
throw IllegalArgumentException if the value supplied for position is less than zero or greater than the component's text length.
throw IllegalArgumentException if doc != null.
throw IllegalArgumentException if the value supplied for position is less than zero or greater than the component's text length.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw IllegalArgumentException if containedAt == -1.
throw IllegalArgumentException if panel is not in list of known chooser panels.
throw HeadlessException if b && GraphicsEnvironment dot isHeadless().
throw HeadlessException if b is true and GraphicsEnvironment dot isHeadless() returns true.
throw IllegalStateException if initialized.
throw IllegalStateException if this method is called more than once.
throw IllegalArgumentException if operation != DO_NOTHING_ON_CLOSE && operation != HIDE_ON_CLOSE && operation != DISPOSE_ON_CLOSE.
throw IllegalArgumentException if defaultCloseOperation value isn't one of the above valid values.
throw IllegalArgumentException if map != null && (!(map instanceof ComponentInputMap) || ((ComponentInputMap)map) dot getComponent() != getComponent()).
throw IllegalArgumentException if map is not a ComponentInputMap or is not associated with the same component.
throw IllegalArgumentException if component == null.
throw IllegalArgumentException if component is null.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xffff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xffff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xffff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw ArrayIndexOutOfBoundsException if numComponents == 1.
throw ArrayIndexOutOfBoundsException if src is longer than dst or if for any element i of src, (src[i]&0xffff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.
throw NullPointerException if name == null.
throw NullPointerException if the name is null.
throw IllegalArgumentException if key dot equals(LOWER_LEFT_CORNER).
throw IllegalArgumentException if corner key is invalid.
throw ClassCastException if layout instanceof ScrollPaneLayout.
throw ClassCastException if layout is not a ScrollPaneLayout.
throw InvalidObjectException if this dot getClass() != TextAttribute dot class.
throw InvalidObjectException if the object to resolve is not an instance of Attribute.
throw InvalidObjectException if instance != null.
throw InvalidObjectException if the object to resolve is not an instance of Attribute.
throw NullPointerException if b == null.
throw NullPointerException if If b is null.
throw IndexOutOfBoundsException if b == null.
throw IndexOutOfBoundsException if If off is negative, len is negative, or len is greater than b dot length - off.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or if an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or if an I/O error occurs.
throw IOException if !connected.
throw IOException if the pipe is broken, unconnected, closed, or if an I/O error occurs.
throw IOException if (writeSide != null) && (!writeSide dot isAlive()) && (--trials < 0).
throw IOException if the pipe is broken, unconnected, closed, or if an I/O error occurs.
throw IllegalArgumentException if charray dot length != 3.
throw IllegalArgumentException if currencyCode is not in the form of three upper-case letters, or locale isn't one of the locales returned from getAvailableLocales().
throw IllegalArgumentException if c < 'A' || c > 'Z'.
throw IllegalArgumentException if currencyCode is not in the form of three upper-case letters, or locale isn't one of the locales returned from getAvailableLocales().
throw NullPointerException if currencyCode == null || locale == null.
throw NullPointerException if currencyCode or locale is null.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than zero.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than zero.
throw IllegalArgumentException if paths == null || index < 0 || index >= paths dot length.
throw IllegalArgumentException if index is outside the range of getPaths.
throw UTFDataFormatException if count > utflen.
throw UTFDataFormatException if the bytes do not represent a valid modified UTF-8 encoding of a Unicode string.
throw UTFDataFormatException if (char2 & 0xC0) != 0x80.
throw UTFDataFormatException if the bytes do not represent a valid modified UTF-8 encoding of a Unicode string.
throw UTFDataFormatException if count > utflen.
throw UTFDataFormatException if the bytes do not represent a valid modified UTF-8 encoding of a Unicode string.
throw UTFDataFormatException if ((char2 & 0xC0) != 0x80) || ((char3 & 0xC0) != 0x80).
throw UTFDataFormatException if the bytes do not represent a valid modified UTF-8 encoding of a Unicode string.
throw EOFException if (ch1 | ch2) < 0.
throw EOFException if this input stream reaches the end before reading two bytes.
throw IndexOutOfBoundsException if len < 0.
throw IndexOutOfBoundsException if off is negative, len is negative, or len is greater than b dot length - off.
throw EOFException if count < 0.
throw EOFException if this input stream reaches the end before reading all the bytes.
throw EOFException if ch < 0.
throw EOFException if this input stream has reached the end.
throw EOFException if ch < 0.
throw EOFException if this input stream has reached the end.
throw EOFException if (ch1 | ch2 | ch3| ch4) < 0.
throw EOFException if this input stream reaches the end before reading four bytes.
throw EOFException if ch < 0.
throw EOFException if this input stream has reached the end.
throw EOFException if (ch1 | ch2) < 0.
throw EOFException if this input stream reaches the end before reading two bytes.
throw EOFException if (ch1 | ch2) < 0.
throw EOFException if this input stream reaches the end before reading two bytes.
throw SocketException if netifs != null && netifs dot length > 0.
throw SocketException if an I/O error occurs, or if the platform does not have at least one configured network interface.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if index has a negative value.
throw NullPointerException if name == null.
throw NullPointerException if If the specified name is null.
throw SocketException if netifs != null && netifs dot length > 0.
throw SocketException if an I/O error occurs, or if the platform does not have at least one configured network interface.
throw NullPointerException if addr == null.
throw NullPointerException if If the specified address is null.
throw DateTimeException if range dot isValidValue(value) == false.
throw DateTimeException if a value for the field cannot be obtained or the value is outside the range of valid values for the field.
throw UnsupportedTemporalTypeException if range dot isIntValue() == false.
throw UnsupportedTemporalTypeException if the field is not supported or the range of values exceeds an int.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw UnsupportedOperationException if view == null.
throw UnsupportedOperationException if the associated file system does not support the PosixFileAttributeView.
throw OutOfMemoryError if size > (long)Integer dot MAX_VALUE.
throw OutOfMemoryError if an array of the required size cannot be allocated, for example the file is larger that 2GB.
throw UnsupportedOperationException if view == null.
throw UnsupportedOperationException if the associated file system does not support the FileOwnerAttributeView.
throw UnsupportedOperationException if view == null.
throw UnsupportedOperationException if the associated file system does not support the FileOwnerAttributeView.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified collection or any of its elements are null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NotActiveException if curPut == null.
throw NotActiveException if Called when a classes writeObject method was not called to write the state of the object.
throw IOException if depth != 0.
throw IOException if reset() is invoked while serializing an object.
throw IllegalStateException if handles dot size() != 0.
throw IllegalStateException if called after any objects have been serialized.
throw IOException if fields[numPrimFields + i] dot isUnshared().
throw IOException if If an I/O error has occurred.
throw IllegalArgumentException if min > max.
throw IllegalArgumentException if the smallest minimum is greater than the smallest maximum, or the smallest maximum is greater than the largest maximum or the largest minimum is greater than the largest maximum.
throw IllegalArgumentException if minSmallest > minLargest.
throw IllegalArgumentException if the smallest minimum is greater than the smallest maximum, or the smallest maximum is greater than the largest maximum or the largest minimum is greater than the largest maximum.
throw IllegalArgumentException if maxSmallest > maxLargest.
throw IllegalArgumentException if the smallest minimum is greater than the smallest maximum, or the smallest maximum is greater than the largest maximum or the largest minimum is greater than the largest maximum.
throw IllegalArgumentException if minLargest > maxLargest.
throw IllegalArgumentException if the smallest minimum is greater than the smallest maximum, or the smallest maximum is greater than the largest maximum or the largest minimum is greater than the largest maximum.
throw IllegalArgumentException if !taskClassName dot equals("com dot sun dot tools dot javac dot api dot JavacTaskImpl") && !taskClassName dot equals("com dot sun dot tools dot javac dot api dot BasicJavacTask").
throw IllegalArgumentException if the env does not support the Trees API.
throw IllegalArgumentException if !env dot getClass() dot getName() dot equals("com dot sun dot tools dot javac dot processing dot JavacProcessingEnvironment").
throw IllegalArgumentException if the env does not support the Trees API.
throw LoginException if subject dot isReadOnly().
throw LoginException if the logout fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw NullPointerException if source == null || target == null.
throw NullPointerException if source or target is null.
throw IllegalArgumentException if (newStrength != PRIMARY) && (newStrength != SECONDARY) && (newStrength != TERTIARY)&& (newStrength != IDENTICAL).
throw IllegalArgumentException if If the new strength value is not one of PRIMARY, SECONDARY, TERTIARY or IDENTICAL.
throw IllegalArgumentException if (decompositionMode != NO_DECOMPOSITION) && (decompositionMode != CANONICAL_DECOMPOSITION) && (decompositionMode != FULL_DECOMPOSITION).
throw IllegalArgumentException if If the given value is not a valid decomposition mode.
throw IllegalArgumentException if member < 1.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw NullPointerException if o == null.
throw NullPointerException if the specified element is null.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded), or if this operation fails for some other reason.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded), or if this operation fails for some other reason.
throw NullPointerException if alias == null || entryClass == null.
throw NullPointerException if alias or entryClass is null.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw NullPointerException if alias == null.
throw NullPointerException if alias is null.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw NullPointerException if alias == null || entry == null.
throw NullPointerException if alias or entry is null.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded), or if this operation fails for some other reason.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized, or the given alias already exists and does not identify an entry containing a trusted certificate, or this operation fails for some other reason.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized, or if the entry cannot be removed.
throw KeyStoreException if !initialized.
throw KeyStoreException if the keystore has not been initialized (loaded).
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if file does not exist or does not refer to a normal file, or if param is not recognized.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if file does not exist or does not refer to a normal file, or if param is not recognized.
throw IllegalArgumentException if file dot isFile() == false.
throw IllegalArgumentException if file does not exist or does not refer to a normal file, or if param is not recognized.
throw NullPointerException if file == null.
throw NullPointerException if file is null.
throw NullPointerException if uri == null.
throw NullPointerException if uri is null.
throw IllegalArgumentException if (key == LEFT) || (key == CENTER) || (key == RIGHT)|| (key == LEADING)|| (key == TRAILING).
throw IllegalArgumentException if key isn't LEFT, CENTER, RIGHT, LEADING or TRAILING.
throw IllegalArgumentException if index == -1.
throw IllegalArgumentException if will be thrown if index is >= length of the text, or < -1.
throw IllegalArgumentException if (key == TOP) || (key == CENTER) || (key == BOTTOM).
throw IllegalArgumentException if key isn't TOP, CENTER, or BOTTOM.
throw InstantiationException if p != null.
throw InstantiationException if If any specified class is an interface or abstract class.
throw IllegalArgumentException if style != SHORT && style != LONG.
throw IllegalArgumentException if style is invalid.
throw IllegalArgumentException if flatness < 0 dot 0.
throw IllegalArgumentException if flatness or limit is less than zero.
throw IllegalArgumentException if limit < 0.
throw IllegalArgumentException if flatness or limit is less than zero.
throw NoSuchElementException if isDone().
throw NoSuchElementException if there are no more elements in the flattening path to be returned.
throw NoSuchElementException if isDone().
throw NoSuchElementException if there are no more elements in the flattening path to be returned.
throw IllegalArgumentException if !isValidCodePoint(codePoint).
throw IllegalArgumentException if the specified codePoint is not a valid Unicode code point.
throw IndexOutOfBoundsException if index >= limit || limit < 0 || limit > a dot length.
throw IndexOutOfBoundsException if the index argument is negative or not less than the limit argument, or if the limit argument is negative or greater than the length of the char array.
throw IndexOutOfBoundsException if index <= start || start < 0 || start >= a dot length.
throw IndexOutOfBoundsException if the index argument is not greater than the start argument or is greater than the length of the char array, or if the start argument is negative or not less than the length of the char array.
throw IndexOutOfBoundsException if beginIndex < 0 || endIndex > length || beginIndex > endIndex.
throw IndexOutOfBoundsException if offset or count is negative, or if offset + count is larger than the length of the given array.
throw IndexOutOfBoundsException if count > a dot length - offset || offset < 0 || count < 0.
throw IndexOutOfBoundsException if offset or count is negative, or if offset + count is larger than the length of the given array.
throw IndexOutOfBoundsException if index < 0 || index > length.
throw IndexOutOfBoundsException if start or count is negative, or if start + count is larger than the length of the given array, or if index is less than start or larger then start + count, or if codePointOffset is positive and the text range starting with index and ending with start + count - 1 has fewer than codePointOffset code points, or if codePointOffset is negative and the text range starting with start and ending with index - 1 has fewer than the absolute value of codePointOffset code points.
throw IndexOutOfBoundsException if codePointOffset >= 0.
throw IndexOutOfBoundsException if start or count is negative, or if start + count is larger than the length of the given array, or if index is less than start or larger then start + count, or if codePointOffset is positive and the text range starting with index and ending with start + count - 1 has fewer than codePointOffset code points, or if codePointOffset is negative and the text range starting with start and ending with index - 1 has fewer than the absolute value of codePointOffset code points.
throw IndexOutOfBoundsException if codePointOffset >= 0.
throw IndexOutOfBoundsException if start or count is negative, or if start + count is larger than the length of the given array, or if index is less than start or larger then start + count, or if codePointOffset is positive and the text range starting with index and ending with start + count - 1 has fewer than codePointOffset code points, or if codePointOffset is negative and the text range starting with start and ending with index - 1 has fewer than the absolute value of codePointOffset code points.
throw IndexOutOfBoundsException if count > a dot length - start || start < 0 || count < 0 || index < start || index > start + count.
throw IndexOutOfBoundsException if start or count is negative, or if start + count is larger than the length of the given array, or if index is less than start or larger then start + count, or if codePointOffset is positive and the text range starting with index and ending with start + count - 1 has fewer than codePointOffset code points, or if codePointOffset is negative and the text range starting with start and ending with index - 1 has fewer than the absolute value of codePointOffset code points.
throw IllegalArgumentException if isBmpCodePoint(codePoint).
throw IllegalArgumentException if the specified codePoint is not a valid Unicode code point.
throw IllegalArgumentException if isBmpCodePoint(codePoint).
throw IllegalArgumentException if the specified codePoint is not a valid Unicode code point.
throw NullPointerException if defensiveCopy[i] == null.
throw NullPointerException if stackTrace is null or if any of the elements of stackTrace are null.
throw IllegalArgumentException if exception == this.
throw IllegalArgumentException if exception is this throwable; a throwable cannot suppress itself.
throw IllegalArgumentException if cause == this.
throw IllegalArgumentException if cause is this throwable dot  (A throwable cannot be its own cause dot ).
throw IllegalStateException if this dot cause != this.
throw IllegalStateException if this throwable was created with Throwable(Throwable) or Throwable(String,Throwable), or this method has already been called on this throwable.
throw IllegalArgumentException if p dot signum() != 1.
throw IllegalArgumentException if p is not positive.
throw NullPointerException if executor == null.
throw NullPointerException if executor null.
throw NullPointerException if task == null.
throw NullPointerException if action null.
throw NullPointerException if task == null.
throw NullPointerException if action null.
throw NullPointerException if action == null.
throw NullPointerException if action null.
throw NullPointerException if action == null.
throw NullPointerException if action null.
throw NullPointerException if callable == null.
throw NullPointerException if callable null.
throw NullPointerException if callable == null.
throw NullPointerException if callable null.
throw NullPointerException if executor == null.
throw NullPointerException if executor null.
throw IllegalArgumentException if id < INPUT_METHOD_FIRST || id > INPUT_METHOD_LAST.
throw IllegalArgumentException if id is not in the range INPUT_METHOD_FIRST dot  dot INPUT_METHOD_LAST.
throw IllegalArgumentException if id == CARET_POSITION_CHANGED && text != null.
throw IllegalArgumentException if id is not in the range INPUT_METHOD_FIRST dot  dot INPUT_METHOD_LAST.
throw IllegalArgumentException if committedCharacterCount < 0 || committedCharacterCount > textLength.
throw IllegalArgumentException if id is not in the range INPUT_METHOD_FIRST dot  dot INPUT_METHOD_LAST.
throw IllegalArgumentException if id < INPUT_METHOD_FIRST || id > INPUT_METHOD_LAST.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if id == CARET_POSITION_CHANGED && text != null.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if committedCharacterCount < 0 || committedCharacterCount > textLength.
throw IllegalArgumentException if source is null.
throw NullPointerException if date == null.
throw NullPointerException if the date parameter is null.
throw IntrospectionException if beanClass == null.
throw IntrospectionException if an exception occurs during introspection.
throw IntrospectionException if propertyName == null || propertyName dot length() == 0.
throw IntrospectionException if an exception occurs during introspection.
throw IntrospectionException if "" dot equals(readMethodName) || "" dot equals(writeMethodName).
throw IntrospectionException if an exception occurs during introspection.
throw IntrospectionException if readMethodName != null && getReadMethod() == null.
throw IntrospectionException if an exception occurs during introspection.
throw IntrospectionException if writeMethodName != null && getWriteMethod() == null.
throw IntrospectionException if an exception occurs during introspection.
throw IntrospectionException if propertyName == null || propertyName dot length() == 0.
throw IntrospectionException if an exception occurs during introspection.
throw IllegalArgumentException if type == null.
throw IllegalArgumentException if source or type is null.
throw IllegalArgumentException if value == null.
throw IllegalArgumentException if The specified string to compare is null.
throw EOFException if n > 0.
throw EOFException if end of stream is encountered before the stream can be positioned n bytes beyond its position when this method was invoked.
throw IOException if n > 0.
throw IOException if the stream cannot be positioned properly or if an I/O error occurs.
throw UnsupportedFlavorException if flavor dot equals(flavors[STRING]).
throw UnsupportedFlavorException if the requested data flavor is not equivalent to either DataFlavor dot stringFlavor or DataFlavor dot plainTextFlavor.
throw IllegalArgumentException if ch == '\\'.
throw IllegalArgumentException if when an escape sequence is malformed.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if the count is negative.
throw IndexOutOfBoundsException if beginIndex < 0 || beginIndex > endIndex || endIndex > length().
throw IndexOutOfBoundsException if the beginIndex is negative, or endIndex is larger than the length of this String, or beginIndex is larger than endIndex.
throw IndexOutOfBoundsException if index < 0 || index > length().
throw IndexOutOfBoundsException if index is negative or larger then the length of this String, or if codePointOffset is positive and the substring starting with index has fewer than codePointOffset code points, or if codePointOffset is negative and the substring before index has fewer than the absolute value of codePointOffset code points.
throw BadLocationException if p0 < 0.
throw BadLocationException if the specified location is invalid.
throw BadLocationException if p1 < p0.
throw BadLocationException if the specified location is invalid.
throw BadLocationException if p0 < 0.
throw BadLocationException if the specified location is invalid.
throw BadLocationException if p1 < p0.
throw BadLocationException if the specified location is invalid.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw ArrayIndexOutOfBoundsException if off < 0 || len < 0 || off > b dot length - len.
throw ArrayIndexOutOfBoundsException if off is negative, or len is negative, or off+len is negative or greater than the length of the array b.
throw IllegalArgumentException if millisecond != DatatypeConstants dot FIELD_UNDEFINED.
throw IllegalArgumentException if If any individual parameter's value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in XMLGregorianCalendar or if the composite values constitute an invalid XMLGregorianCalendar instance as determined by XMLGregorianCalendar dot isValid().
throw IllegalArgumentException if milliseconds != DatatypeConstants dot FIELD_UNDEFINED.
throw IllegalArgumentException if If any individual parameter's value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in XMLGregorianCalendar or if the composite values constitute an invalid XMLGregorianCalendar instance as determined by XMLGregorianCalendar dot isValid().
throw IllegalArgumentException if !matcher dot matches().
throw IllegalArgumentException if If the values are not a valid representation of a Duration: if any of the fields (day, hour,  dot  dot  dot ) is negative.
throw IllegalArgumentException if !matcher dot matches().
throw IllegalArgumentException if If the values are not a valid representation of a Duration: if any of the fields (year, month) is negative.
throw IllegalArgumentException if perms dot length() != 9.
throw IllegalArgumentException if the string cannot be converted to a set of permissions.
throw IllegalArgumentException if tempList dot isEmpty().
throw IllegalArgumentException if xPathList is empty.
throw NullPointerException if xPathList == null.
throw NullPointerException if xPathList is null.
throw NoSuchElementException if !isPresent.
throw NoSuchElementException if no value is present.
throw InterruptedException if xfer(e,true,SYNC,0) != null.
throw InterruptedException if interrupted while waiting, in which case the element is not left enqueued.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw NullPointerException if cursorLocn == null.
throw NullPointerException if cursorLocn is null.
throw IllegalArgumentException if dropAction != DnDConstants dot ACTION_NONE && dropAction != DnDConstants dot ACTION_COPY && dropAction != DnDConstants dot ACTION_MOVE && dropAction != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if dropAction is not one of DnDConstants.
throw IllegalArgumentException if (srcActions & ~(DnDConstants dot ACTION_COPY_OR_MOVE | DnDConstants dot ACTION_LINK)) != 0.
throw IllegalArgumentException if dropAction is not one of DnDConstants.
throw IllegalArgumentException if dropAction != DnDConstants dot ACTION_NONE && dropAction != DnDConstants dot ACTION_COPY && dropAction != DnDConstants dot ACTION_MOVE && dropAction != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if srcActions is not a bitwise mask of DnDConstants.
throw IllegalArgumentException if (srcActions & ~(DnDConstants dot ACTION_COPY_OR_MOVE | DnDConstants dot ACTION_LINK)) != 0.
throw IllegalArgumentException if srcActions is not a bitwise mask of DnDConstants.
throw IllegalArgumentException if dropAction != DnDConstants dot ACTION_NONE && dropAction != DnDConstants dot ACTION_COPY && dropAction != DnDConstants dot ACTION_MOVE && dropAction != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if dtc is null.
throw IllegalArgumentException if (srcActions & ~(DnDConstants dot ACTION_COPY_OR_MOVE | DnDConstants dot ACTION_LINK)) != 0.
throw IllegalArgumentException if dtc is null.
throw UnsupportedTemporalTypeException if unit == ChronoUnit dot YEARS.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw DateTimeException if amount instanceof ChronoPeriod.
throw DateTimeException if unable to convert to a Period.
throw DateTimeException if unit == ChronoUnit dot YEARS.
throw DateTimeException if unable to convert to a Period.
throw DateTimeParseException if matcher dot matches().
throw DateTimeParseException if the text cannot be parsed to a period.
throw IllegalArgumentException if multipleDocumentHandling == null.
throw IllegalArgumentException if multipleDocumentHandling is null.
throw IllegalArgumentException if copies <= 0.
throw IllegalArgumentException if copies is less than or equal to 0.
throw IllegalArgumentException if minPage <= 0 || minPage > maxPage.
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if fromPage <= 0 || (toPage != 0 && fromPage > toPage) || fromPage < minPage || fromPage > maxPage.
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if sides == null.
throw IllegalArgumentException if sides is null.
throw IllegalArgumentException if dialog == null.
throw IllegalArgumentException if dialog is null.
throw IllegalArgumentException if toPage <= 0 || (fromPage != 0 && toPage < fromPage) || toPage < minPage || toPage > maxPage.
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if destination == null.
throw IllegalArgumentException if destination is null.
throw IllegalArgumentException if maxPage <= 0 || maxPage < minPage.
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if pageRanges == null.
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if pageRanges[i] == null || pageRanges[i] dot length != 2 || pageRanges[i][0] <= last || pageRanges[i][1] < pageRanges[i][0].
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if first < minPage || last > maxPage.
throw IllegalArgumentException if one or more of the above conditions is violated.
throw IllegalArgumentException if defaultSelection == null.
throw IllegalArgumentException if defaultSelection is null.
throw NullPointerException if expression == null.
throw NullPointerException if expression, filter or namespaceMap are null.
throw NullPointerException if filter == null.
throw NullPointerException if expression, filter or namespaceMap are null.
throw NullPointerException if expression == null.
throw NullPointerException if expression, filter or namespaceMap are null.
throw NullPointerException if filter == null.
throw NullPointerException if expression, filter or namespaceMap are null.
throw NullPointerException if namespaceMap == null.
throw NullPointerException if expression, filter or namespaceMap are null.
throw NullPointerException if trayIcon == null.
throw NullPointerException if trayIcon is null.
throw IllegalArgumentException if icons == null.
throw IllegalArgumentException if the same instance of a TrayIcon is added more than once.
throw UnsupportedOperationException if !isSupported().
throw UnsupportedOperationException if the system tray isn't supported by the current platform.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalArgumentException if this dot enabledCipherSuites != null || this dot enabledProtocols != null.
throw IllegalArgumentException if when one or more of the cipher suites named by the enabledCipherSuites parameter is not supported, when one or more of the protocols named by the enabledProtocols parameter is not supported or when a problem is encountered while trying to check if the supplied cipher suites and protocols to be enabled are supported.
throw NullPointerException if salt == null.
throw NullPointerException if salt is null.
throw NullPointerException if salt == null.
throw NullPointerException if salt is null.
throw IllegalArgumentException if salt == null.
throw IllegalArgumentException if salt is empty, i dot e dot  0-length, or iterationCount is not positive.
throw IllegalArgumentException if iterationCount <= 0.
throw IllegalArgumentException if salt is empty, i dot e dot  0-length, or iterationCount is not positive.
throw IllegalArgumentException if keyLength <= 0.
throw IllegalArgumentException if salt is empty, i dot e dot  0-length, or iterationCount is not positive.
throw IllegalArgumentException if salt == null.
throw IllegalArgumentException if salt is empty, i dot e dot  0-length, or iterationCount is not positive.
throw IllegalArgumentException if iterationCount <= 0.
throw IllegalArgumentException if salt is empty, i dot e dot  0-length, or iterationCount is not positive.
throw IllegalStateException if password == null.
throw IllegalStateException if password has been cleared by calling clearPassword method.
throw IllegalArgumentException if maxBandOff > scanlineStride.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if pixelStride * w > scanlineStride.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if pixelStride < maxBandOff.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if maxBandOff > scanlineStride.
throw IllegalArgumentException if any offset between bands is greater than the scanline stride.
throw IllegalArgumentException if pixelStride * w > scanlineStride.
throw IllegalArgumentException if any offset between bands is greater than the scanline stride.
throw IllegalArgumentException if pixelStride < maxBandOff.
throw IllegalArgumentException if any offset between bands is greater than the scanline stride.
throw IllegalArgumentException if maxBandOff > scanlineStride.
throw IllegalArgumentException if the product of pixelStride and w is greater than scanlineStride.
throw IllegalArgumentException if pixelStride * w > scanlineStride.
throw IllegalArgumentException if the product of pixelStride and w is greater than scanlineStride.
throw IllegalArgumentException if pixelStride < maxBandOff.
throw IllegalArgumentException if the product of pixelStride and w is greater than scanlineStride.
throw IllegalArgumentException if maxBandOff > scanlineStride.
throw IllegalArgumentException if pixelStride is less than any offset between bands.
throw IllegalArgumentException if pixelStride * w > scanlineStride.
throw IllegalArgumentException if pixelStride is less than any offset between bands.
throw IllegalArgumentException if pixelStride < maxBandOff.
throw IllegalArgumentException if pixelStride is less than any offset between bands.
throw IllegalArgumentException if maxBandOff > scanlineStride.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if pixelStride * w > scanlineStride.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IllegalArgumentException if pixelStride < maxBandOff.
throw IllegalArgumentException if dataType is not one of the supported data types.
throw IndexOutOfBoundsException if (off < 0) || (off > cbuf dot length) || (len < 0)|| ((off + len) > cbuf dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or off + len is greater than the length of the given string.
throw IllegalArgumentException if sz <= 0.
throw IllegalArgumentException if If sz <= 0.
throw InvalidKeyException if key dot length - offset < 24.
throw InvalidKeyException if the given key material, starting at offset inclusive, is shorter than 24 bytes.
throw InvalidKeyException if key dot length - offset < 24.
throw InvalidKeyException if the given key material, starting at offset inclusive, is shorter than 24 bytes.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw NullPointerException if severity == null.
throw NullPointerException if severity is null.
throw NullPointerException if reason == null.
throw NullPointerException if reason is null or severity is null.
throw NullPointerException if severity == null.
throw NullPointerException if reason is null or severity is null.
throw IllegalArgumentException if ts != null.
throw IllegalArgumentException if the field doesn't exist, or the field value can't be converted to an Instant object.
throw IllegalArgumentException if ts != null.
throw IllegalArgumentException if the field doesn't exist, or the field value can't be converted to a Duration object.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw InterruptedException if transferer dot transfer(e,false,0) == null.
throw InterruptedException if interrupted while waiting.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw NoSuchElementException if elementCount == 0.
throw NoSuchElementException if this vector has no components.
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw IndexOutOfBoundsException if index >= elementCount.
throw IndexOutOfBoundsException if the specified index is greater than or equal to the current size of this vector.
throw ArrayIndexOutOfBoundsException if index > elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw ArrayIndexOutOfBoundsException if index < 0 || index > elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).
throw NoSuchElementException if elementCount == 0.
throw NoSuchElementException if this vector is empty.
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw ArrayIndexOutOfBoundsException if index >= elementCount.
throw ArrayIndexOutOfBoundsException if the index is out of range (index < 0 || index >= size()).
throw IndexOutOfBoundsException if index < 0 || index > elementCount.
throw IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).
throw IllegalArgumentException if m <= 0.
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if m <= 0.
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if !this dot rp dot testBit(0) || !this dot rp dot testBit(m) || ((bitCount != 3) && (bitCount != 5)).
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if m <= 0.
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if (this dot ks dot length != 1) && (this dot ks dot length != 3).
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if (this dot ks[i] < 1) || (this dot ks[i] > m - 1).
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if (i != 0) && (this dot ks[i] >= this dot ks[i - 1]).
throw IllegalArgumentException ifm is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.
throw IllegalArgumentException if sourceRegion dot x < 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot x or sourceRegion dot y is negative.
throw IllegalArgumentException if sourceRegion dot y < 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot x or sourceRegion dot y is negative.
throw IllegalArgumentException if sourceRegion dot width <= 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot x or sourceRegion dot y is negative.
throw IllegalArgumentException if sourceRegion dot height <= 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot x or sourceRegion dot y is negative.
throw IllegalArgumentException if sourceRegion dot x < 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot width or sourceRegion dot height is negative or 0.
throw IllegalArgumentException if sourceRegion dot y < 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot width or sourceRegion dot height is negative or 0.
throw IllegalArgumentException if sourceRegion dot width <= 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot width or sourceRegion dot height is negative or 0.
throw IllegalArgumentException if sourceRegion dot height <= 0.
throw IllegalArgumentException if sourceRegion is non-null and either sourceRegion dot width or sourceRegion dot height is negative or 0.
throw IllegalStateException if sourceRegion dot width <= subsamplingXOffset.
throw IllegalStateException if subsampling is such that this region will have a subsampled width or height of zero.
throw IllegalStateException if sourceRegion dot height <= subsamplingYOffset.
throw IllegalStateException if subsampling is such that this region will have a subsampled width or height of zero.
throw IllegalArgumentException if sourceXSubsampling <= 0.
throw IllegalArgumentException if either period is negative or 0, or if either grid offset is negative or greater than the corresponding period.
throw IllegalArgumentException if sourceYSubsampling <= 0.
throw IllegalArgumentException if either period is negative or 0, or if either grid offset is negative or greater than the corresponding period.
throw IllegalArgumentException if subsamplingXOffset < 0 || subsamplingXOffset >= sourceXSubsampling.
throw IllegalArgumentException if either period is negative or 0, or if either grid offset is negative or greater than the corresponding period.
throw IllegalArgumentException if subsamplingYOffset < 0 || subsamplingYOffset >= sourceYSubsampling.
throw IllegalArgumentException if either period is negative or 0, or if either grid offset is negative or greater than the corresponding period.
throw IllegalStateException if sourceRegion != null.
throw IllegalStateException if the source region is such that the subsampled output would contain no pixels.
throw IllegalStateException if !hasController().
throw IllegalStateException if there is no controller currently installed.
throw IllegalArgumentException if destinationOffset == null.
throw IllegalArgumentException if destinationOffset is null.
throw IllegalArgumentException if sourceBands == null.
throw IllegalArgumentException if sourceBands contains a negative or duplicate value.
throw IllegalArgumentException if sourceBands == null.
throw IllegalArgumentException if sourceBands contains a negative or duplicate value.
throw IllegalStateException if destroyed.
throw IllegalStateException if this ticket is destroyed.
throw IllegalStateException if destroyed.
throw IllegalStateException if this ticket is destroyed.
throw IllegalStateException if destroyed.
throw IllegalStateException if this ticket is destroyed.
throw RefreshFailedException if destroyed.
throw RefreshFailedException if the ticket is not renewable, or the latest allowable renew time has passed, or the KDC returns some error.
throw RefreshFailedException if !isRenewable().
throw RefreshFailedException if the ticket is not renewable, or the latest allowable renew time has passed, or the KDC returns some error.
throw RefreshFailedException if System dot currentTimeMillis() > getRenewTill() dot getTime().
throw RefreshFailedException if the ticket is not renewable, or the latest allowable renew time has passed, or the KDC returns some error.
throw IllegalArgumentException if snippet dot status() != Status dot VALID.
throw IllegalArgumentException if the snippet is not associated with this JShell instance.
throw IllegalArgumentException if snippet dot status() != Status dot VALID.
throw IllegalArgumentException if the variable's status is anything but Snippet dot Status dot VALID.
throw IllegalArgumentException if (axis != X_AXIS) && (axis != Y_AXIS).
throw IllegalArgumentException if for an invalid axis.
throw IllegalArgumentException if (axis != X_AXIS) && (axis != Y_AXIS).
throw IllegalArgumentException if for an invalid axis.
throw IllegalArgumentException if (axis != X_AXIS) && (axis != Y_AXIS).
throw IllegalArgumentException if for an invalid axis.
throw NullPointerException if client == null.
throw NullPointerException if client is null.
throw NullPointerException if oidMap == null.
throw NullPointerException if oidMap is null.
throw NullPointerException if name == null.
throw NullPointerException if the InputStream is null.
throw NullPointerException if keywordMap == null.
throw NullPointerException if the InputStream is null.
throw NullPointerException if is == null.
throw NullPointerException if the InputStream is null.
throw IllegalArgumentException if roleInfo == null.
throw IllegalArgumentException if null parameter.
throw IllegalComponentStateException if layered == null.
throw IllegalComponentStateException if (a runtime exception) if the layered pane parameter is null.
throw IllegalComponentStateException if content == null.
throw IllegalComponentStateException if (a runtime exception) if the content pane parameter is null.
throw IllegalArgumentException if windowDecorationStyle < 0 || windowDecorationStyle > WARNING_DIALOG.
throw IllegalArgumentException if style is not one of: NONE, FRAME, PLAIN_DIALOG, INFORMATION_DIALOG, ERROR_DIALOG, COLOR_CHOOSER_DIALOG, FILE_CHOOSER_DIALOG, QUESTION_DIALOG, or WARNING_DIALOG.
throw NullPointerException if glass == null.
throw NullPointerException if the glass parameter is null.
throw IndexOutOfBoundsException if (off < 0) || (off > c dot length) || (len < 0)|| ((off + len) > c dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or len is negative, or off + len is negative or greater than the length of the given string.
throw IllegalArgumentException if initialSize < 0.
throw IllegalArgumentException if initialSize is negative.
throw IllegalArgumentException if tabularType == null.
throw IllegalArgumentException if the initial capacity is less than zero, or the load factor is nonpositive, or the tabular type is null.
throw KeyAlreadyExistsException if indexes dot contains(index).
throw KeyAlreadyExistsException if the index for an element of values, calculated according to this TabularData instance's TabularType definition already maps to an existing value in this instance, or two elements of values have the same index.
throw IllegalArgumentException if CENTER dot equals(constraints).
throw IllegalArgumentException if the constraint object is not one of the five specified constants.
throw IllegalArgumentException if NORTH dot equals(constraints).
throw IllegalArgumentException if the constraint object is not one of the five specified constants.
throw IllegalArgumentException if (constraints == null) || (constraints instanceof String).
throw IllegalArgumentException if the constraint object is not a string, or if it not one of the five specified constants.
throw IllegalArgumentException if "Center" dot equals(name).
throw IllegalArgumentException if the constraint object is not a string, or if it not one of the five specified constants.
throw NullPointerException if xPath == null.
throw NullPointerException if xPath or namespaceMap are null.
throw NullPointerException if xPath == null || namespaceMap == null.
throw NullPointerException if xPath or namespaceMap are null.
throw IllegalArgumentException if text dot getEndIndex() - text dot getBeginIndex() < 1.
throw IllegalArgumentException if the text has less than one character.
throw AWTException if cursor == null.
throw AWTException if in case of erroneous retrieving of the cursor.
throw AWTException if cursor == null.
throw AWTException if in case of erroneous retrieving of the cursor.
throw AWTException if cursor == null.
throw AWTException if in case of erroneous retrieving of the cursor.
throw AWTException if cursor == null.
throw AWTException if in case of erroneous retrieving of the cursor.
throw IllegalArgumentException if type < Cursor dot DEFAULT_CURSOR || type > Cursor dot MOVE_CURSOR.
throw IllegalArgumentException if the specified cursor type is invalid.
throw IllegalArgumentException if type < Cursor dot DEFAULT_CURSOR || type > Cursor dot MOVE_CURSOR.
throw IllegalArgumentException if the specified cursor type is invalid.
throw NullPointerException if key == null || mappingFunction == null.
throw NullPointerException if the specified key or mappingFunction is null.
throw IllegalStateException if tab == null || (n=tab dot length) == 0.
throw IllegalStateException if the computation detectably attempts a recursive update to this map that would otherwise never complete.
throw IllegalStateException if tab == null || (n=tab dot length) == 0.
throw IllegalStateException if the computation detectably attempts a recursive update to this map that would otherwise never complete.
throw NullPointerException if key == null || oldValue == null || newValue == null.
throw NullPointerException if the specified key or value is null.
throw NullPointerException if key == null || value == null.
throw NullPointerException if the specified key or value is null.
throw NullPointerException if value == null.
throw NullPointerException if the specified value is null.
throw NullPointerException if key == null.
throw NullPointerException if the specified key is null.
throw NullPointerException if key == null || remappingFunction == null.
throw NullPointerException if the specified key or remappingFunction is null.
throw IllegalStateException if tab == null || (n=tab dot length) == 0.
throw IllegalStateException if the computation detectably attempts a recursive update to this map that would otherwise never complete.
throw IllegalStateException if tab == null || (n=tab dot length) == 0.
throw IllegalStateException if the computation detectably attempts a recursive update to this map that would otherwise never complete.
throw NullPointerException if key == null || value == null || remappingFunction == null.
throw NullPointerException if the specified key or the remappingFunction is null.
throw IllegalArgumentException if !(loadFactor > 0 dot 0f) || initialCapacity < 0 || concurrencyLevel <= 0.
throw IllegalArgumentException if the initial capacity is negative or the load factor or concurrencyLevel are nonpositive.
throw NullPointerException if mappedValue == null.
throw NullPointerException if the mappedValue is null.
throw NullPointerException if key == null || remappingFunction == null.
throw NullPointerException if the specified key or remappingFunction is null.
throw IllegalStateException if tab == null || (n=tab dot length) == 0.
throw IllegalStateException if the computation detectably attempts a recursive update to this map that would otherwise never complete.
throw SQLException if (attributes == null) || (map == null).
throw SQLException if the attributes or the map is a null value.
throw IllegalArgumentException if offsetBefore dot equals(offsetAfter).
throw IllegalArgumentException if offsetBefore and offsetAfter are equal, or transition dot getNano() returns non-zero value.
throw IllegalArgumentException if transition dot getNano() != 0.
throw IllegalArgumentException if offsetBefore and offsetAfter are equal, or transition dot getNano() returns non-zero value.
throw BadLocationException if offset < 0.
throw BadLocationException if thrown if the offset is less than zero or greater than the document length.
throw BadLocationException if offset < 0.
throw BadLocationException if thrown if the offset is less than zero or greater than the document length.
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if columns is less than 0.
throw IllegalArgumentException if rows < 0.
throw IllegalArgumentException if the rows or columns arguments are negative.
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if the rows or columns arguments are negative.
throw BadLocationException if line < 0.
throw BadLocationException if Thrown if the line is less than zero or greater or equal to the number of lines contained in the document (as reported by getLineCount).
throw BadLocationException if line < 0.
throw BadLocationException if Thrown if the line is less than zero or greater or equal to the number of lines contained in the document (as reported by getLineCount).
throw IllegalArgumentException if rows < 0.
throw IllegalArgumentException if rows is less than 0.
throw IllegalArgumentException if end < start.
throw IllegalArgumentException if part of the range is an invalid position in the model.
throw IllegalArgumentException if doc != null.
throw IllegalArgumentException if part of the range is an invalid position in the model.
throw BadLocationException if line < 0.
throw BadLocationException if thrown if the line is less than zero or greater or equal to the number of lines contained in the document (as reported by getLineCount).
throw BadLocationException if line < 0.
throw BadLocationException if thrown if the line is less than zero or greater or equal to the number of lines contained in the document (as reported by getLineCount).
throw IllegalArgumentException if doc != null.
throw IllegalArgumentException if pos is an invalid position in the model.
throw IOException if count != serializable.
throw IOException if serialization failed.
throw NullPointerException if bcsl == null.
throw NullPointerException if the argument is null.
throw IllegalArgumentException if alignment < BOTTOM_ALIGNMENT || alignment > HANGING_BASELINE.
throw IllegalArgumentException if alignment is not one of the five defined values.
throw NullPointerException if arguments == null.
throw NullPointerException if arguments is null.
throw ArrayIndexOutOfBoundsException if formatElementIndex > maxOffset.
throw ArrayIndexOutOfBoundsException if formatElementIndex is equal to or larger than the number of format elements in the pattern string.
throw ParseException if pos dot index == 0.
throw ParseException if the beginning of the specified string cannot be parsed.
throw IllegalArgumentException if braceStack == 0 && part != 0.
throw IllegalArgumentException if the pattern is invalid.
throw NullPointerException if feature == null.
throw NullPointerException if feature is null.
throw NullPointerException if node == null.
throw NullPointerException if node is null.
throw EmptyStackException if prevQueue == null.
throw EmptyStackException if no previous push was made on this EventQueue.
throw InvocationTargetException if eventThrowable != null.
throw InvocationTargetException if an throwable is thrown when running runnable.
throw IllegalArgumentException if y >= 0 && y <= 1.
throw IllegalArgumentException if y < 0 or y > 3.
throw IllegalArgumentException if x >= 0 && x <= 1.
throw IllegalArgumentException if x < 0 or x > 3.
throw IllegalArgumentException if y >= 0 && y <= 1.
throw IllegalArgumentException if y < 0 or y > 3.
throw IllegalArgumentException if x >= 0 && x <= 1.
throw IllegalArgumentException if x < 0 or x > 3.
throw IllegalArgumentException if notif == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if objectName == null.
throw IllegalArgumentException if the given ObjectName is null.
throw IllegalArgumentException if objectName == null.
throw IllegalArgumentException if the given ObjectName is null.
throw IllegalArgumentException if (level < 0 || level > 9) && level != DEFAULT_COMPRESSION.
throw IllegalArgumentException if the compression level is invalid.
throw NullPointerException if (x == null) || (y == null).
throw NullPointerException if x or y is null.
throw IllegalArgumentException if border != null.
throw IllegalArgumentException if this method is not implemented.
throw NullPointerException if component == null || region == null || style == null.
throw NullPointerException if component, region of style is null.
throw NullPointerException if uri == null.
throw NullPointerException if the specified URI is null.
throw CannotUndoException if !canUndo().
throw CannotUndoException if canUndo returns false.
throw CannotRedoException if !canRedo().
throw CannotRedoException if canRedo returns false.
throw IllegalArgumentException if (component=dgr dot getComponent()) == null.
throw IllegalArgumentException if any parameter equals null.
throw IllegalArgumentException if (dragSource=dgr dot getDragSource()) == null.
throw IllegalArgumentException if any parameter equals null.
throw IllegalArgumentException if evs == null || evs dot isEmpty().
throw IllegalArgumentException if any parameter equals null.
throw IllegalArgumentException if act != DnDConstants dot ACTION_COPY && act != DnDConstants dot ACTION_MOVE && act != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if any parameter equals null.
throw IllegalArgumentException if ori == null.
throw IllegalArgumentException if any parameter equals null.
throw IllegalArgumentException if (component=dgr dot getComponent()) == null.
throw IllegalArgumentException if the act parameter does not comply with the values given in the class description for DragGestureEvent.
throw IllegalArgumentException if (dragSource=dgr dot getDragSource()) == null.
throw IllegalArgumentException if the act parameter does not comply with the values given in the class description for DragGestureEvent.
throw IllegalArgumentException if evs == null || evs dot isEmpty().
throw IllegalArgumentException if the act parameter does not comply with the values given in the class description for DragGestureEvent.
throw IllegalArgumentException if act != DnDConstants dot ACTION_COPY && act != DnDConstants dot ACTION_MOVE && act != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if the act parameter does not comply with the values given in the class description for DragGestureEvent.
throw IllegalArgumentException if ori == null.
throw IllegalArgumentException if the act parameter does not comply with the values given in the class description for DragGestureEvent.
throw LoginException if subject dot isReadOnly().
throw LoginException if the logout fails.
throw LoginException if subject dot isReadOnly().
throw LoginException if the commit fails.
throw FailedLoginException if ntSystem dot getName() == null.
throw FailedLoginException if the authentication fails.
throw IllegalArgumentException if node == null.
throw IllegalArgumentException if If the Node parameter content does not adhere to the TIFFField element structure defined by the TIFF native image metadata format specification, or if the combination of node attributes and data is not legal per the TIFFField(TIFFTag,int,int,Object) constructor specification dot  Note that a cause might be set on such an exception.
throw IllegalArgumentException if !name dot equals("TIFFField").
throw IllegalArgumentException if If the Node parameter content does not adhere to the TIFFField element structure defined by the TIFF native image metadata format specification, or if the combination of node attributes and data is not legal per the TIFFField(TIFFTag,int,int,Object) constructor specification dot  Note that a cause might be set on such an exception.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw NullPointerException if tag == null.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if ((long[])data)[0] < 0.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if ((long[])data)[0] > MAX_UINT32.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if !isDataArrayCorrect.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if value < 0.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if value > MAX_UINT32.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if value < 65536.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if value < 65536.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is an unacceptable data type for the supplied TIFFTag.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if ((long[])data)[0] < 0.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if ((long[])data)[0] > MAX_UINT32.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if !isDataArrayCorrect.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if value < 0.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if value > MAX_UINT32.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if value < 65536.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if value < 65536.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if type is neither TIFFTag dot TIFF_LONG nor TIFFTag dot TIFF_IFD_POINTER.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if ((long[])data)[0] < 0.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if ((long[])data)[0] > MAX_UINT32.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if isDataArrayCorrect.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if !isDataArrayCorrect.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if value < 0.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if value > MAX_UINT32.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if value < 65536.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if value < 65536.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw IllegalArgumentException if tag == null.
throw IllegalArgumentException if offset <= 0.
throw NullPointerException if tag == null.
throw NullPointerException if dir == null.
throw NullPointerException if tag == null.
throw NullPointerException if dir == null.
throw NullPointerException if tag == null.
throw NullPointerException if dir == null.
throw NullPointerException if tag == null.
throw NullPointerException if dir == null.
throw NullPointerException if tag == null.
throw NullPointerException if dir == null.
throw ClassCastException if data instanceof int[].
throw ClassCastException if the field is not of type TIFF_SHORT, TIFF_SSHORT, or TIFF_SLONG.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if dataType is not one of the TIFFTag dot TIFF_* data type constants.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if dataType is not one of the TIFFTag dot TIFF_* data type constants.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if dataType is not one of the TIFFTag dot TIFF_* data type constants.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 1 and type is TIFF_RATIONAL or TIFF_SRATIONAL.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 1 and type is TIFF_RATIONAL or TIFF_SRATIONAL.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count < 1 and type is TIFF_RATIONAL or TIFF_SRATIONAL.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count != 1 and type is TIFF_IFD_POINTER.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count != 1 and type is TIFF_IFD_POINTER.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count != 1 and type is TIFF_IFD_POINTER.
throw IllegalArgumentException if dataType < TIFFTag dot MIN_DATATYPE || dataType > TIFFTag dot MAX_DATATYPE.
throw IllegalArgumentException if dataType is not one of the TIFFTag dot TIFF_* data type constants.
throw IllegalArgumentException if localPart == null.
throw IllegalArgumentException if When localPart is null.
throw IllegalArgumentException if prefix == null.
throw IllegalArgumentException if When localPart is null.
throw IllegalArgumentException if qNameAsString == null.
throw IllegalArgumentException if When qNameAsString is null or malformed.
throw IllegalArgumentException if qNameAsString dot startsWith("{" + XMLConstants dot NULL_NS_URI + "}").
throw IllegalArgumentException if When qNameAsString is null or malformed.
throw IllegalArgumentException if endOfNamespaceURI == -1.
throw IllegalArgumentException if When qNameAsString is null or malformed.
throw IllegalArgumentException if (profileClass != ICC_Profile dot CLASS_INPUT) && (profileClass != ICC_Profile dot CLASS_DISPLAY) && (profileClass != ICC_Profile dot CLASS_OUTPUT)&& (profileClass != ICC_Profile dot CLASS_COLORSPACECONVERSION)&& (profileClass != ICC_Profile dot CLASS_NAMEDCOLOR)&& (profileClass != ICC_Profile dot CLASS_ABSTRACT).
throw IllegalArgumentException if profile is inappropriate for representing a ColorSpace.
throw IllegalArgumentException if (component < 0) || (component > this dot getNumComponents() - 1).
throw IllegalArgumentException if component is less than 0 or greater than numComponents - 1.
throw IllegalArgumentException if (component < 0) || (component > this dot getNumComponents() - 1).
throw IllegalArgumentException if component is less than 0 or greater than numComponents - 1.
throw NullPointerException if changes == null.
throw NullPointerException if changes associated with this event are null.
throw NullPointerException if changes == null.
throw NullPointerException if changes associated with this event are null.
throw UnsupportedOperationException if state.
throw UnsupportedOperationException if When implementation does not override this method.
throw IllegalArgumentException if nProfiles < 2.
throw IllegalArgumentException if the number of source or destination bands is incorrect, the source or destination color spaces are undefined, or this op was constructed with one of the constructors that applies only to operations on BufferedImages.
throw IllegalArgumentException if src dot getNumBands() != profileList[0] dot getNumComponents().
throw IllegalArgumentException if the number of source or destination bands is incorrect, the source or destination color spaces are undefined, or this op was constructed with one of the constructors that applies only to operations on BufferedImages.
throw IllegalArgumentException if dest == null.
throw IllegalArgumentException if the number of source or destination bands is incorrect, the source or destination color spaces are undefined, or this op was constructed with one of the constructors that applies only to operations on BufferedImages.
throw IllegalArgumentException if dest == null.
throw IllegalArgumentException if the number of source or destination bands is incorrect, the source or destination color spaces are undefined, or this op was constructed with one of the constructors that applies only to operations on BufferedImages.
throw NullPointerException if cspace == null.
throw NullPointerException if profiles is null.
throw NullPointerException if (srcCspace == null) || (dstCspace == null).
throw NullPointerException if profiles is null.
throw NullPointerException if profiles == null.
throw NullPointerException if profiles is null.
throw IllegalArgumentException if destCM == null.
throw IllegalArgumentException if destCM is null and this ColorConvertOp was created without any ICC_Profile or ColorSpace defined for the destination.
throw IllegalArgumentException if CSList != null.
throw IllegalArgumentException if this ColorConvertOp was created without sufficient information to define the dst and src color spaces.
throw IllegalArgumentException if CSList != null.
throw IllegalArgumentException if this ColorConvertOp was created without sufficient information to define the dst and src color spaces.
throw IllegalArgumentException if pattern dot length() < 1.
throw IllegalArgumentException if limit < 0, or count < 1.
throw IllegalArgumentException if pattern dot length() < 1.
throw IllegalArgumentException if limit < 0, or count < 1.
throw IllegalArgumentException if limit < 0 || count < 1 || pattern dot length() < 1.
throw IllegalArgumentException if limit < 0, or count < 1.
throw IllegalArgumentException if limit < 0 || count < 1 || pattern dot length() < 1.
throw IllegalArgumentException if limit < 0, or count < 1.
throw IllegalArgumentException if pattern dot length() < 1.
throw IllegalArgumentException if pattern is an empty string.
throw IllegalArgumentException if pattern dot length() < 1.
throw IllegalArgumentException if pattern is an empty string.
throw IllegalArgumentException if limit < 0 || count < 1 || pattern dot length() < 1.
throw IllegalArgumentException if pattern is an empty string.
throw IllegalArgumentException if limit < 0 || count < 1 || pattern dot length() < 1.
throw IllegalArgumentException if pattern is an empty string.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw IllegalArgumentException if end < start.
throw IllegalArgumentException if step is zero, or step dot getDays() and step dot toTotalMonths() have opposite sign, or end date is before this date and step is positive, or end date is after this date and step is negative.
throw IllegalArgumentException if step dot isZero().
throw IllegalArgumentException if step is zero, or step dot getDays() and step dot toTotalMonths() have opposite sign, or end date is before this date and step is positive, or end date is after this date and step is negative.
throw IllegalArgumentException if (months < 0 && days > 0) || (months > 0 && days < 0).
throw IllegalArgumentException if step is zero, or step dot getDays() and step dot toTotalMonths() have opposite sign, or end date is before this date and step is positive, or end date is after this date and step is negative.
throw IllegalArgumentException if sign < 0 ^ until < 0.
throw IllegalArgumentException if step is zero, or step dot getDays() and step dot toTotalMonths() have opposite sign, or end date is before this date and step is positive, or end date is after this date and step is negative.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw DateTimeException if date == null.
throw DateTimeException if unable to convert to a LocalDate.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw DateTimeException if dayOfYear == 366 && leap == false.
throw DateTimeException if the value of any field is out of range, or if the day-of-year is invalid for the year.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw BadLocationException if pos < -1 || pos > getDocument() dot getLength().
throw BadLocationException if the given position is not a valid position within the document.
throw IllegalArgumentException if ColorModel dot isLinearRGBspace(colorSpace).
throw IllegalArgumentException if space is not a TYPE_RGB space or if the min/max normalized component values are not 0 dot 0/1 dot 0.
throw UnsupportedOperationException if isAlphaPremultiplied.
throw UnsupportedOperationException if this transferType is not supported by this color model.
throw UnsupportedOperationException if isAlphaPremultiplied.
throw UnsupportedOperationException if this transferType is not supported by this color model.
throw IllegalArgumentException if (w <= 0) || (h <= 0).
throw IllegalArgumentException if w or h is less than or equal to zero.
throw IOException if isClosed.
throw IOException if the stream is closed.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if uri == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if uri == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if f == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if f == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if is == null.
throw IllegalArgumentException if If the InputSource object is null.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if If the index is negative or the unit size is not a power of 2.
throw IllegalArgumentException if unitSize < 1 || (unitSize & (unitSize - 1)) != 0.
throw IllegalArgumentException if If the index is negative or the unit size is not a power of 2.
throw UnsupportedOperationException if unitSize > 8 && !isDirect().
throw UnsupportedOperationException if If the native platform does not guarantee stable alignment offset values for the given unit size when managing the memory regions of buffers of the same kind as this buffer (direct or non-direct) dot  For example, if garbage collection would result in the moving of a memory region covered by a non-direct buffer from one location to another and both locations have different alignment characteristics.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw InvalidKeyException if spi != null.
throw InvalidKeyException if the public key in the given certificate is inappropriate for initializing this cipher, or this cipher requires algorithm parameters that cannot be determined from the public key in the given certificate, or the keysize of the public key in the given certificate has a keysize that exceeds the maximum allowable keysize (as determined by the configured jurisdiction policy files).
throw InvalidKeyException if certificate instanceof java dot security dot cert dot X509Certificate.
throw InvalidKeyException if the public key in the given certificate is inappropriate for initializing this cipher, or this cipher requires algorithm parameters that cannot be determined from the public key in the given certificate, or the keysize of the public key in the given certificate has a keysize that exceeds the maximum allowable keysize (as determined by the configured jurisdiction policy files).
throw InvalidKeyException if spi != null.
throw InvalidKeyException if the public key in the given certificate is inappropriate for initializing this cipher, or this cipher requires algorithm parameters that cannot be determined from the public key in the given certificate, or the keysize of the public key in the given certificate has a keysize that exceeds the maximum allowable keysize (as determined by the configured jurisdiction policy files).
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null || inputOffset < 0 || inputLen > (input dot length - inputOffset) || inputLen < 0.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null || inputOffset < 0 || inputLen > (input dot length - inputOffset) || inputLen < 0.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null || inputOffset < 0 || inputLen > (input dot length - inputOffset) || inputLen < 0 || outputOffset < 0.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if (input == null) || (output == null).
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == output.
throw IllegalArgumentException if input and output are the same object.
throw ReadOnlyBufferException if output dot isReadOnly().
throw ReadOnlyBufferException if the output buffer is read-only.
throw IllegalStateException if !initialized && !(this instanceof NullCipher).
throw IllegalStateException if this cipher is in a wrong state (e dot g dot , has not yet been initialized).
throw IllegalArgumentException if src == null.
throw IllegalArgumentException if the src ByteBuffer is null.
throw IllegalArgumentException if (src == null) || (offset < 0) || (len < 0)|| len > (src dot length - offset).
throw IllegalArgumentException if the src ByteBuffer is null.
throw IllegalArgumentException if src == null.
throw IllegalArgumentException if the src ByteBuffer is null.
throw IllegalArgumentException if (output == null) || (outputOffset < 0).
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null || inputOffset < 0 || inputLen > (input dot length - inputOffset) || inputLen < 0.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null || inputOffset < 0 || inputLen > (input dot length - inputOffset) || inputLen < 0.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == null || inputOffset < 0 || inputLen > (input dot length - inputOffset) || inputLen < 0 || outputOffset < 0.
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if (input == null) || (output == null).
throw IllegalArgumentException if input and output are the same object.
throw IllegalArgumentException if input == output.
throw IllegalArgumentException if input and output are the same object.
throw ReadOnlyBufferException if output dot isReadOnly().
throw ReadOnlyBufferException if the output buffer is read-only.
throw IllegalStateException if !(this instanceof NullCipher).
throw IllegalStateException if this cipher is in a wrong state (e dot g dot , has not been initialized).
throw IllegalStateException if !(this instanceof NullCipher).
throw IllegalStateException if this cipher is in a wrong state (e dot g dot , has not been initialized).
throw IllegalArgumentException if !JceSecurityManager dot INSTANCE dot isCallerTrusted(provider).
throw IllegalArgumentException if the supplied arguments are deemed invalid for constructing the Cipher object.
throw IllegalArgumentException if (provider == null) || (provider dot isEmpty()).
throw IllegalArgumentException if the provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if the provider is null.
throw NoSuchAlgorithmException if (transformation == null) || transformation dot isEmpty().
throw NoSuchAlgorithmException if transformation is null, empty, in an invalid format, or if a CipherSpi implementation for the specified algorithm is not available from the specified Provider object.
throw NoSuchAlgorithmException if (transformation == null) || transformation dot isEmpty().
throw NoSuchAlgorithmException if transformation is null, empty, in an invalid format, or if a CipherSpi implementation for the specified algorithm is not available from the specified Provider object.
throw NoSuchAlgorithmException if (transformation == null) || transformation dot isEmpty().
throw NoSuchAlgorithmException if transformation is null, empty, in an invalid format, or if a CipherSpi implementation for the specified algorithm is not available from the specified Provider object.
throw NoSuchPaddingException if paddingError != null.
throw NoSuchPaddingException if transformation contains a padding scheme that is not available.
throw IllegalStateException if !(this instanceof NullCipher).
throw IllegalStateException if this cipher is in a wrong state (e dot g dot , has not been initialized).
throw IllegalStateException if !(this instanceof NullCipher).
throw IllegalStateException if this cipher is in a wrong state (e dot g dot , has not been initialized).
throw NullPointerException if callable == null.
throw NullPointerException if the runnable is null.
throw TimeoutException if s <= COMPLETING && (s=awaitDone(true,unit dot toNanos(timeout))) <= COMPLETING.
throw TimeoutException if the wait timed out.
throw NumberFormatException if i < MIN_VALUE || i > MAX_VALUE.
throw NumberFormatException if If the string does not contain a parsable short.
throw NumberFormatException if i < MIN_VALUE || i > MAX_VALUE.
throw NumberFormatException if the String does not contain a parsable short.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw NullPointerException if executor == null.
throw NullPointerException if executor or completionQueue are null.
throw NullPointerException if executor == null || completionQueue == null.
throw NullPointerException if executor or completionQueue are null.
throw SaslException if provs != null.
throw SaslException if If cannot create a SaslServer because of an error.
throw IllegalArgumentException if thickness < 1 dot 0f.
throw IllegalArgumentException if the specified thickness is less than 1, or if the specified length is less than 1, or if the specified spacing is less than 0.
throw IllegalArgumentException if length < 1 dot 0f.
throw IllegalArgumentException if the specified thickness is less than 1, or if the specified length is less than 1, or if the specified spacing is less than 0.
throw IllegalArgumentException if spacing < 0 dot 0f.
throw IllegalArgumentException if the specified thickness is less than 1, or if the specified length is less than 1, or if the specified spacing is less than 0.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw SocketException if isClosed().
throw SocketException if there is an error in the underlying protocol, such as a TCP error.
throw IllegalArgumentException if mcastaddr == null || !(mcastaddr instanceof InetSocketAddress).
throw IllegalArgumentException if mcastaddr is null or is a SocketAddress subclass not supported by this socket.
throw IllegalArgumentException if mcastaddr == null || !(mcastaddr instanceof InetSocketAddress).
throw IllegalArgumentException if mcastaddr is null or is a SocketAddress subclass not supported by this socket.
throw IllegalArgumentException if connectState == ST_NOT_CONNECTED.
throw IllegalArgumentException if the socket is connected, and connected address and packet address differ, or if the socket is not connected and the packet address is not set.
throw IllegalArgumentException if connectState == ST_NOT_CONNECTED.
throw IllegalArgumentException if the socket is connected, and connected address and packet address differ, or if the socket is not connected and the packet address is not set.
throw IllegalArgumentException if padWidth < 1.
throw IllegalArgumentException if pad width is too small.
throw IllegalStateException if active dot parent == null.
throw IllegalStateException if there was no previous call to optionalStart.
throw IllegalArgumentException if style != TextStyle dot FULL && style != TextStyle dot SHORT.
throw IllegalArgumentException if style is neither full nor short.
throw IllegalArgumentException if fractionalDigits < -1 || fractionalDigits > 9.
throw IllegalArgumentException if the number of fractional digits is invalid.
throw IllegalArgumentException if dateStyle == null && timeStyle == null.
throw IllegalArgumentException if both the date and time styles are null.
throw IllegalArgumentException if width < 1 || width > 19.
throw IllegalArgumentException if the widths are invalid.
throw IllegalArgumentException if minWidth < 1 || minWidth > 19.
throw IllegalArgumentException if the widths are invalid.
throw IllegalArgumentException if maxWidth < 1 || maxWidth > 19.
throw IllegalArgumentException if the widths are invalid.
throw IllegalArgumentException if maxWidth < minWidth.
throw IllegalArgumentException if the widths are invalid.
throw IllegalArgumentException if dateStyle == null && timeStyle == null.
throw IllegalArgumentException if both dateStyle and timeStyle are null.
throw NullPointerException if object == null.
throw NullPointerException if object is null.
throw ClassCastException if object == null.
throw ClassCastException if object is not an instance of interfaceName.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw ClassCastException if interfaceName dot isAssignableFrom(result).
throw ClassCastException if object is not a Class that implements interfaceName.
throw IllegalArgumentException if !category dot equals(attribute dot getCategory()).
throw IllegalArgumentException if the category is not equal to the category of the attribute.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw NullPointerException if attributeSet == null.
throw NullPointerException if attributeSet is null.
throw IndexOutOfBoundsException if fromIndex > toIndex.
throw IndexOutOfBoundsException if fromIndex or toIndex is out of range (fromIndex < 0 || toIndex > size() || toIndex < fromIndex).
throw DateTimeException if dayOfYear > date dot lengthOfYear().
throw DateTimeException if the value of the year is out of range, or if the day-of-year is invalid for the year.
throw IllegalStateException if contextPos != 0.
throw IllegalStateException if when attempting to set this after any context has been pushed.
throw IllegalArgumentException if realm dot isEmpty().
throw IllegalArgumentException if realm is an empty string.
throw IllegalArgumentException if set == null.
throw IllegalArgumentException if socketType is not a valid socket type from the java dot net package.
throw NullPointerException if src == null.
throw NullPointerException if src is null.
throw ImagingOpException if ImagingLib dot filter(this,src,dst) == null.
throw ImagingOpException if src and dst do not have the same number of bands.
throw ImagingOpException if dst == null.
throw ImagingOpException if src and dst do not have the same number of bands.
throw ImagingOpException if ImagingLib dot filter(this,src,dst) == null.
throw ImagingOpException if src and dst do not have the same number of bands.
throw ImagingOpException if ImagingLib dot filter(this,src,dst) == null.
throw ImagingOpException if src cannot be filtered.
throw ImagingOpException if dst == null.
throw ImagingOpException if src cannot be filtered.
throw ImagingOpException if ImagingLib dot filter(this,src,dst) == null.
throw ImagingOpException if src cannot be filtered.
throw IllegalArgumentException if src == dst.
throw IllegalArgumentException if src equals dst.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if src equals dst.
throw JMRuntimeException if delegate == null.
throw JMRuntimeException if the property javax dot management dot builder dot initial exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its newMBeanServerDelegate or newMBeanServer methods.
throw JMRuntimeException if mbeanServer == null.
throw JMRuntimeException if the property javax dot management dot builder dot initial exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its newMBeanServerDelegate or newMBeanServer methods.
throw IOException if frameSize != 1.
throw IOException if an input or output error occurs.
throw IOException if temp % frameSize != 0.
throw IOException if an input or output error occurs.
throw InvalidParameterException if maxPathLength < -1.
throw InvalidParameterException if maxPathLength is set to a value less than -1.
throw IllegalArgumentException if elem != null && elem dot isLeaf().
throw IllegalArgumentException if elem is a leaf.
throw IllegalArgumentException if elem != null && elem dot isLeaf().
throw IllegalArgumentException if elem is a leaf.
throw IllegalArgumentException if elem dot isLeaf().
throw IllegalArgumentException if elem is a leaf.
throw NullPointerException if configuration == null || protectionParams == null.
throw NullPointerException if configuration or protectionParams is null.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw NullPointerException if replacement == null.
throw NullPointerException if the replacer function is null.
throw ConcurrentModificationException if ec != modCount.
throw ConcurrentModificationException if it is detected, on a best-effort basis, that the replacer function modified this matcher's state.
throw ConcurrentModificationException if result.
throw ConcurrentModificationException if it is detected, on a best-effort basis, that the replacer function modified this matcher's state.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw IndexOutOfBoundsException if (start < 0) || (start > limit).
throw IndexOutOfBoundsException if If start is less than zero or if start is greater than the length of the input sequence.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw IndexOutOfBoundsException if (start < 0) || (start > getTextLength()).
throw IndexOutOfBoundsException if If start or end is less than zero, if start is greater than the length of the input sequence, if end is greater than the length of the input sequence, or if start is greater than end.
throw IndexOutOfBoundsException if (end < 0) || (end > getTextLength()).
throw IndexOutOfBoundsException if If start or end is less than zero, if start is greater than the length of the input sequence, if end is greater than the length of the input sequence, or if start is greater than end.
throw IndexOutOfBoundsException if start > end.
throw IndexOutOfBoundsException if If start or end is less than zero, if start is greater than the length of the input sequence, if end is greater than the length of the input sequence, or if start is greater than end.
throw IllegalStateException if first < 0.
throw IllegalStateException if If no match has yet been attempted, or if the previous match operation failed.
throw IllegalArgumentException if newPattern == null.
throw IllegalArgumentException if If newPattern is null.
throw NullPointerException if op == null.
throw NullPointerException if op is null.
throw IllegalArgumentException if w < 0 || h < 0.
throw IllegalArgumentException if width or height are less than zero.
throw IllegalArgumentException if w < 0 || h < 0.
throw IllegalArgumentException if width or height are less than zero.
throw AttachNotSupportedException if providers dot size() == 0.
throw AttachNotSupportedException if If the attach provider's attachVirtualmachine throws AttachNotSupportedException.
throw NullPointerException if id == null.
throw NullPointerException if If vmd is null.
throw NullPointerException if provider == null.
throw NullPointerException if If provider or id is null.
throw NullPointerException if id == null.
throw NullPointerException if If provider or id is null.
throw NullPointerException if name == null.
throw NullPointerException if the logger name is null.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if the timeout parameter is negative.
throw Error if factory != null.
throw Error if the factory has already been defined.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if the timeout parameter is negative.
throw NullPointerException if key == null.
throw NullPointerException if key is null.
throw NullPointerException if key == null.
throw NullPointerException if key is null.
throw XPathFactoryConfigurationException if xpathFactory == null.
throw XPathFactoryConfigurationException if factoryClassName is null, or the factory class cannot be loaded, instantiated or the factory class does not support the object model specified in the uri parameter.
throw XPathFactoryConfigurationException if f == null.
throw XPathFactoryConfigurationException if factoryClassName is null, or the factory class cannot be loaded, instantiated or the factory class does not support the object model specified in the uri parameter.
throw XPathFactoryConfigurationException if f dot isObjectModelSupported(uri).
throw XPathFactoryConfigurationException if factoryClassName is null, or the factory class cannot be loaded, instantiated or the factory class does not support the object model specified in the uri parameter.
throw NullPointerException if uri == null.
throw NullPointerException if If uri is null.
throw NullPointerException if uri == null.
throw NullPointerException if If uri is null.
throw IllegalArgumentException if uri dot length() == 0.
throw IllegalArgumentException if If uri is null or uri dot length() == 0.
throw IllegalArgumentException if uri dot length() == 0.
throw IllegalArgumentException if If uri is null or uri dot length() == 0.
throw IllegalArgumentException if parties < 0.
throw IllegalArgumentException if parties < 0.
throw InterruptedException if p == phase.
throw InterruptedException if thread interrupted while waiting.
throw InterruptedException if p == phase.
throw InterruptedException if thread interrupted while waiting.
throw TimeoutException if p == phase.
throw TimeoutException if timed out while waiting.
throw IllegalArgumentException if parties >>> PARTIES_SHIFT != 0.
throw IllegalArgumentException if parties less than zero or greater than the maximum number of parties supported.
throw IllegalStateException if unarrived <= 0.
throw IllegalStateException if not terminated and the number of unarrived parties would become negative.
throw ArrayIndexOutOfBoundsException if off < 0 || len < 0 || off > b dot length - len.
throw ArrayIndexOutOfBoundsException if off is negative, or len is negative, or off+len is negative or greater than the length of the array b.
throw NoSuchMechanismException if s != null.
throw NoSuchMechanismException if no Provider supports a KeyInfoFactory implementation for the DOM mechanism.
throw NoSuchMechanismException if s != null.
throw NoSuchMechanismException if no Provider supports a KeyInfoFactory implementation for the DOM mechanism.
throw NoSuchMechanismException if s != null.
throw NoSuchMechanismException if no Provider supports a KeyInfoFactory implementation for the DOM mechanism.
throw SQLException if (attributes == null) || (map == null).
throw SQLException if the attributes or the map is a null value.
throw SQLException if attrib instanceof Struct.
throw SQLException if the read position is located at an invalid position; or if there are no further values in the stream.
throw NullPointerException if cursorLocn == null.
throw NullPointerException if cursorLocn is null.
throw IllegalArgumentException if dropAction != DnDConstants dot ACTION_NONE && dropAction != DnDConstants dot ACTION_COPY && dropAction != DnDConstants dot ACTION_MOVE && dropAction != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if dropAction is not one of DnDConstants.
throw IllegalArgumentException if (srcActions & ~(DnDConstants dot ACTION_COPY_OR_MOVE | DnDConstants dot ACTION_LINK)) != 0.
throw IllegalArgumentException if dropAction is not one of DnDConstants.
throw IllegalArgumentException if dropAction != DnDConstants dot ACTION_NONE && dropAction != DnDConstants dot ACTION_COPY && dropAction != DnDConstants dot ACTION_MOVE && dropAction != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if srcActions is not a bitwise mask of DnDConstants.
throw IllegalArgumentException if (srcActions & ~(DnDConstants dot ACTION_COPY_OR_MOVE | DnDConstants dot ACTION_LINK)) != 0.
throw IllegalArgumentException if srcActions is not a bitwise mask of DnDConstants.
throw IllegalArgumentException if dropAction != DnDConstants dot ACTION_NONE && dropAction != DnDConstants dot ACTION_COPY && dropAction != DnDConstants dot ACTION_MOVE && dropAction != DnDConstants dot ACTION_LINK.
throw IllegalArgumentException if dtc is null.
throw IllegalArgumentException if (srcActions & ~(DnDConstants dot ACTION_COPY_OR_MOVE | DnDConstants dot ACTION_LINK)) != 0.
throw IllegalArgumentException if dtc is null.
throw UnsupportedOperationException if version() != 1.
throw UnsupportedOperationException if If this UUID is not a version 1 UUID.
throw IllegalArgumentException if len > 36.
throw IllegalArgumentException if If name does not conform to the string representation as described in toString().
throw IllegalArgumentException if dash4 < 0 || dash5 >= 0.
throw IllegalArgumentException if If name does not conform to the string representation as described in toString().
throw UnsupportedOperationException if version() != 1.
throw UnsupportedOperationException if If this UUID is not a version 1 UUID.
throw UnsupportedOperationException if version() != 1.
throw UnsupportedOperationException if If this UUID is not a version 1 UUID.
throw NullPointerException if command == null || unit == null.
throw NullPointerException if command or unit is null.
throw IllegalArgumentException if period <= 0L.
throw IllegalArgumentException if period less than or equal to zero.
throw NullPointerException if command == null || unit == null.
throw NullPointerException if callable or unit is null.
throw NullPointerException if callable == null || unit == null.
throw NullPointerException if callable or unit is null.
throw NullPointerException if command == null || unit == null.
throw NullPointerException if command or unit is null.
throw IllegalArgumentException if delay <= 0L.
throw IllegalArgumentException if delay less than or equal to zero.
throw NullPointerException if b == null.
throw NullPointerException if If b is null.
throw IndexOutOfBoundsException if b == null.
throw IndexOutOfBoundsException if If off is negative, len is negative, or len is greater than b dot length - off.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if size <= 0.
throw IOException if pos == 0.
throw IOException if If there is not enough room in the pushback buffer for the specified number of bytes, or this input stream has been closed by invoking its close() method.
throw IOException if len > pos.
throw IOException if If there is not enough room in the pushback buffer for the specified number of bytes, or this input stream has been closed by invoking its close() method.
throw DigestException if len < digest dot length.
throw DigestException if an error occurs.
throw DigestException if buf dot length - offset < digest dot length.
throw DigestException if an error occurs.
throw CloneNotSupportedException if this instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw NullPointerException if timestamp == null || signerCertPath == null.
throw NullPointerException if timestamp or signerCertPath is null.
throw IOException if enabledCipherSuites != null.
throw IOException if an I/O error occurs during socket creation.
throw IOException if enabledProtocols != null.
throw IOException if an I/O error occurs during socket creation.
throw LoginException if subject dot isReadOnly().
throw LoginException if the logout fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw LoginException if userProvider == null.
throw LoginException if this LoginModule is unable to perform the authentication.
throw LoginException if groupProvider == null.
throw LoginException if this LoginModule is unable to perform the authentication.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if size is <= 0.
throw IllegalArgumentException if (value == null) || (stepSize == null).
throw IllegalArgumentException if the following expression is false: minimum <= value <= maximum.
throw IllegalArgumentException if !(((minimum == null) || (((Comparable<Object>)minimum) dot compareTo(value) <= 0)) && ((maximum == null) || (((Comparable<Object>)maximum) dot compareTo(value) >= 0))).
throw IllegalArgumentException if the following expression is false: minimum <= value <= maximum.
throw IllegalArgumentException if (value == null) || !(value instanceof Number).
throw IllegalArgumentException if value is null or not a Number.
throw ArrayIndexOutOfBoundsException if index < 0 || index > getSize().
throw ArrayIndexOutOfBoundsException if index does not fall within the range of number of elements currently held.
throw IllegalArgumentException if groupID == null.
throw IllegalArgumentException if groupID is null.
throw IllegalArgumentException if id dot isEmpty().
throw IllegalArgumentException if no ExecutionControlProvider has the specified name and parameters.
throw IllegalArgumentException if !more() || ch != exp.
throw IllegalArgumentException if no ExecutionControlProvider has the specified name and parameters.
throw IllegalArgumentException if id dot isEmpty().
throw IllegalArgumentException if spec is malformed.
throw IllegalArgumentException if !more() || ch != exp.
throw IllegalArgumentException if spec is malformed.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if size <= 0.
throw IOException if markpos < 0.
throw IOException if this stream has not been marked or, if the mark has been invalidated, or the stream has been closed by invoking its close() method, or an I/O error occurs.
throw IndexOutOfBoundsException if len <= 0.
throw IndexOutOfBoundsException if If off is negative, or len is negative, or len is greater than cbuf dot length - off.
throw IndexOutOfBoundsException if len <= 0.
throw IndexOutOfBoundsException if If off is negative, or len is negative, or len is greater than cbuf dot length - off.
throw IOException if pos == 0.
throw IOException if If there is insufficient room in the pushback buffer, or if some other I/O error occurs.
throw IOException if len > pos.
throw IOException if If there is insufficient room in the pushback buffer, or if some other I/O error occurs.
throw IllegalArgumentException if n < 0L.
throw IllegalArgumentException if If n is negative.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if type < OPEN || type > PIE.
throw IllegalArgumentException if type is not 0, 1, or 2 dot +.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw IllegalArgumentException if relationTypeObj == null.
throw IllegalArgumentException if null parameter or if relationTypeObj dot getRelationTypeName() returns null.
throw InvalidRelationTypeException if roleInfoList == null.
throw InvalidRelationTypeException if: - the same name has been used for two different roles - no role info provided - one null role info provided - there is already a relation type with that name.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationTypeName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationTypeName == null || roleInfoName == null.
throw IllegalArgumentException if null parameter.
throw RelationServiceNotRegisteredException if myMBeanServer == null.
throw RelationServiceNotRegisteredException if it is not registered.
throw IllegalArgumentException if mbeanName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if role == null || relationTypeName == null || initFlag == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || newRole == null || oldValue == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationObjectName == null.
throw IllegalArgumentException if null parameter.
throw NoSuchMethodException if (!(myMBeanServer dot isInstanceOf(relationObjectName,"javax dot management dot relation dot Relation"))).
throw NoSuchMethodException if If the MBean does not implement the Relation interface.
throw InvalidRelationIdException if relId == null.
throw InvalidRelationIdException if: - no relation identifier in MBean - the relation identifier is already used in the Relation Service.
throw InvalidRelationServiceException if badRelServFlag.
throw InvalidRelationServiceException if: - no Relation Service name in MBean - the Relation Service name in the MBean is not the one of the current Relation Service.
throw RelationTypeNotFoundException if relTypeName == null.
throw RelationTypeNotFoundException if: - no relation type name in MBean - the relation type name in MBean does not correspond to a relation type created in the Relation Service.
throw IllegalArgumentException if relationId == null || roleList == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || roleNameArray == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if mbeanName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationTypeName == null || roleInfoArray == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || newRole == null || oldValue == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || roleName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || relationTypeName == null.
throw IllegalArgumentException if null parameter, except the role list which can be null if no role initialization.
throw IllegalArgumentException if roleName == null || relationTypeName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || roleName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if objectName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationTypeName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationTypeName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null || role == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationId == null.
throw IllegalArgumentException if null parameter.
throw IOException if sink != null.
throw IOException if the pipe is closed, or an I/O error occurs.
throw IndexOutOfBoundsException if sink == null.
throw IndexOutOfBoundsException if If off is negative, or len is negative, or off + len is negative or greater than the length of the given array.
throw IOException if sink == null.
throw IOException if the pipe is broken, unconnected, closed or an I/O error occurs.
throw IOException if sink == null.
throw IOException if the pipe is broken, unconnected, closed or an I/O error occurs.
throw IOException if snk == null.
throw IOException if an I/O error occurs.
throw IOException if snk == null.
throw IOException if an I/O error occurs.
throw InvalidNameException if suffix instanceof CompositeName.
throw InvalidNameException if If n is not a composite name.
throw InvalidNameException if n instanceof CompositeName.
throw InvalidNameException if If n is not a composite name.
throw ClassCastException if !(obj instanceof CompositeName).
throw ClassCastException if obj is not a CompositeName.
throw IllegalArgumentException if dotBias == null.
throw IllegalArgumentException if the bias is null.
throw IllegalArgumentException if dotBias == null.
throw IllegalArgumentException if the bias is null.
throw NullPointerException if (input == null) || (reason == null).
throw NullPointerException if If either the input or reason strings are null.
throw DateTimeException if chrono == null.
throw DateTimeException if unable to convert to a ChronoZonedDateTime.
throw IntrospectionException if listenerMethods dot length > 0.
throw IntrospectionException if an exception occurs during introspection.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection.
throw NullPointerException if screen && (n == 1 || this dot comparator != null).
throw NullPointerException if the specified collection or any of its elements are null.
throw IOException if isInvalid().
throw IOException if If an I/O error occurs, which is possible because the construction of the canonical pathname may require filesystem queries.
throw MalformedURLException if isInvalid().
throw MalformedURLException if If the path cannot be parsed as a URL.
throw NullPointerException if dest == null.
throw NullPointerException if If parameter dest is null.
throw IllegalArgumentException if prefix dot length() < 3.
throw IllegalArgumentException if If the prefix argument contains fewer than three characters.
throw IOException if !fs dot createFileExclusively(f dot getPath()).
throw IOException if If a file could not be created.
throw SecurityException if sm != null.
throw SecurityException if If a security manager exists and its SecurityManager dot checkWrite(java dot lang dot String) method does not allow a file to be created.
throw IOException if isInvalid().
throw IOException if If an I/O error occurred.
throw NullPointerException if pathname == null.
throw NullPointerException if If uri is null.
throw NullPointerException if child == null.
throw NullPointerException if If uri is null.
throw NullPointerException if child == null.
throw NullPointerException if If uri is null.
throw IllegalArgumentException if !uri dot isAbsolute().
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if uri dot isOpaque().
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if (scheme == null) || !scheme dot equalsIgnoreCase("file").
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if uri dot getRawAuthority() != null.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if uri dot getRawFragment() != null.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if uri dot getRawQuery() != null.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if p dot isEmpty().
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if time < 0.
throw IllegalArgumentException if If the argument is negative.
throw ArithmeticException if divisor == 0.
throw ArithmeticException if the divisor is zero, or if numeric overflow occurs.
throw UnsupportedTemporalTypeException if unit == SECONDS.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if unitDur dot getSeconds() > LocalTime dot SECONDS_PER_DAY.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if (LocalTime dot NANOS_PER_DAY % dur) != 0.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw DateTimeParseException if matcher dot matches().
throw DateTimeParseException if the text cannot be parsed to a duration.
throw IllegalArgumentException if !(RoleStatus dot isRoleStatus(pbType)).
throw IllegalArgumentException if incorrect problem type.
throw IllegalArgumentException if name == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if name == null.
throw IllegalArgumentException if null parameter or incorrect problem type.
throw NullPointerException if handler == null.
throw NullPointerException if handler is null.
throw IllegalArgumentException if maximumPoolSize <= 0 || maximumPoolSize < corePoolSize.
throw IllegalArgumentException if the new maximum is less than or equal to zero, or less than the core pool size.
throw NullPointerException if threadFactory == null.
throw NullPointerException if threadFactory is null.
throw IllegalArgumentException if value && keepAliveTime <= 0.
throw IllegalArgumentException if value is true and the current keep-alive time is not greater than zero.
throw IllegalArgumentException if corePoolSize < 0 || maximumPoolSize <= 0 || maximumPoolSize < corePoolSize || keepAliveTime < 0.
throw IllegalArgumentException if one of the following holds: corePoolSize < 0 keepAliveTime < 0 maximumPoolSize <= 0 maximumPoolSize < corePoolSize.
throw NullPointerException if workQueue == null || threadFactory == null || handler == null.
throw NullPointerException if workQueue or threadFactory or handler is null.
throw NullPointerException if command == null.
throw NullPointerException if command is null.
throw IllegalArgumentException if corePoolSize < 0 || maximumPoolSize < corePoolSize.
throw IllegalArgumentException if corePoolSize < 0 or corePoolSize is greater than the maximum pool size.
throw IllegalArgumentException if time < 0.
throw IllegalArgumentException if time less than zero or if time is zero and allowsCoreThreadTimeOut.
throw IllegalArgumentException if time == 0 && allowsCoreThreadTimeOut().
throw IllegalArgumentException if time less than zero or if time is zero and allowsCoreThreadTimeOut.
throw IllegalArgumentException if constantName dot length() == 0.
throw IllegalArgumentException if the name has the incorrect format.
throw IllegalArgumentException if n < 0L.
throw IllegalArgumentException if If n is negative.
throw NullPointerException if mailtoURI == null.
throw NullPointerException if the specified URI is null.
throw IllegalArgumentException if !"mailto" dot equalsIgnoreCase(mailtoURI dot getScheme()).
throw IllegalArgumentException if the URI scheme is not "mailto".
throw IllegalArgumentException if parentFile == null || !parentFile dot exists().
throw IllegalArgumentException if the specified file or its parent doesn't exist.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw UnsupportedOperationException if !Desktop dot isDesktopSupported().
throw UnsupportedOperationException if this class is not supported on the current platform.
throw DateTimeException if i < 0 || i >= KNOWN_ERAS dot length.
throw DateTimeException if the value is invalid.
throw NullPointerException if obj instanceof Double || obj instanceof Float.
throw NullPointerException if obj is null.
throw IllegalArgumentException if obj instanceof Double || obj instanceof Float.
throw IllegalArgumentException if when the Format cannot format the given object.
throw IllegalArgumentException if newValue < 0 || newValue > Byte dot MAX_VALUE.
throw IllegalArgumentException if newValue is negative or greater than Byte dot MAX_VALUE.
throw NullPointerException if roundingMode == null.
throw NullPointerException if roundingMode is null.
throw IllegalArgumentException if inQuote.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if inQuote.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if inQuote.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if ch == digit.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if ch == digit.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if ch == digit.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if ch == digit.
throw IllegalArgumentException if the given pattern is invalid.
throw IllegalArgumentException if (decimalPos < 0 && digitRightCount > 0) || (decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > (digitLeftCount + zeroDigitCount))) || groupingCount == 0 || inQuote.
throw IllegalArgumentException if the given pattern is invalid.
throw Error if factory != null.
throw Error if the application has already set a factory.
throw IllegalArgumentException if proxy == null.
throw IllegalArgumentException if will be thrown if proxy is null, or proxy has the wrong type.
throw URISyntaxException if authority != null && isBuiltinStreamHandler(handler).
throw URISyntaxException if this URL is not formatted strictly according to RFC2396 and cannot be converted to a URI.
throw MalformedURLException if host != null.
throw MalformedURLException if no protocol is specified, or an unknown protocol is found, or spec is null, or the parsed URL fails to comply with the specific syntax of the associated protocol.
throw MalformedURLException if handler == null && (handler=getURLStreamHandler(protocol)) == null.
throw MalformedURLException if no protocol is specified, or an unknown protocol is found, or spec is null, or the parsed URL fails to comply with the specific syntax of the associated protocol.
throw MalformedURLException if host != null && isBuiltinStreamHandler(handler).
throw MalformedURLException if no protocol is specified, or an unknown protocol is found, or spec is null, or the parsed URL fails to comply with the specific syntax of the associated protocol.
throw MalformedURLException if "jar" dot equalsIgnoreCase(protocol).
throw MalformedURLException if no protocol is specified, or an unknown protocol is found, or spec is null, or the parsed URL fails to comply with the specific syntax of the associated protocol.
throw MalformedURLException if protocol == null.
throw MalformedURLException if no protocol is specified, or an unknown protocol is found, or spec is null, or the parsed URL fails to comply with the specific syntax of the associated protocol.
throw MalformedURLException if handler == null && (handler=getURLStreamHandler(protocol)) == null.
throw MalformedURLException if no protocol is specified, or an unknown protocol is found, or spec is null, or the parsed URL fails to comply with the specific syntax of the associated protocol.
throw AWTException if caps != null && caps dot isAccelerated() && !vi dot getCapabilities() dot isAccelerated().
throw AWTException if the supplied image capabilities could not be met by this graphics configuration.
throw IllegalArgumentException if cm == null.
throw IllegalArgumentException if the transparency is not a valid value.
throw RasterFormatException if bands dot length > numBands.
throw RasterFormatException if the length of the bands argument is greater than the number of bands in the sample model.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if mask != 0.
throw IllegalArgumentException if w or h is not greater than 0.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if any mask in bitMask is not contiguous.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if any mask in bitMask is not contiguous.
throw IllegalArgumentException if mask != 0.
throw IllegalArgumentException if any mask in bitMask is not contiguous.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType is not either DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType != DataBuffer dot TYPE_BYTE && dataType != DataBuffer dot TYPE_USHORT && dataType != DataBuffer dot TYPE_INT.
throw IllegalArgumentException if dataType is not either DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if mask != 0.
throw IllegalArgumentException if dataType is not either DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if newChild == null.
throw IllegalArgumentException if newChild is null.
throw IllegalArgumentException if newChild == null.
throw IllegalArgumentException if newChild is null.
throw IllegalArgumentException if oldChild == null.
throw IllegalArgumentException if oldChild is null.
throw IllegalArgumentException if newChild == null.
throw IllegalArgumentException if newChild is null.
throw NumberFormatException if s == null.
throw NumberFormatException if the string does not contain a parsable integer.
throw NumberFormatException if radix < Character dot MIN_RADIX.
throw NumberFormatException if the string does not contain a parsable integer.
throw NumberFormatException if radix > Character dot MAX_RADIX.
throw NumberFormatException if the string does not contain a parsable integer.
throw NumberFormatException if radix < Character dot MIN_RADIX.
throw NumberFormatException if the string does not contain a parsable integer.
throw NumberFormatException if radix > Character dot MAX_RADIX.
throw NumberFormatException if the string does not contain a parsable integer.
throw NumberFormatException if nm dot isEmpty().
throw NumberFormatException if the String does not contain a parsable integer.
throw NumberFormatException if nm dot startsWith("-",index) || nm dot startsWith("+",index).
throw NumberFormatException if the String does not contain a parsable integer.
throw IllegalArgumentException if inputTypes == null.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if inputTypes dot length == 0.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if inputTypes == null.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if inputTypes dot length == 0.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if inputTypes == null.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if inputTypes dot length == 0.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if inputTypes == null.
throw IllegalArgumentException if readerClassName is null.
throw IllegalArgumentException if inputTypes dot length == 0.
throw IllegalArgumentException if readerClassName is null.
throw IllegalArgumentException if inputTypes == null.
throw IllegalArgumentException if inputTypes is null or has length 0.
throw IllegalArgumentException if inputTypes dot length == 0.
throw IllegalArgumentException if inputTypes is null or has length 0.
throw IllegalArgumentException if reader == null.
throw IllegalArgumentException if reader is null.
throw IllegalArgumentException if url == null.
throw IllegalArgumentException if url is null.
throw MalformedURLException if rmiServerImpl == null.
throw MalformedURLException if url does not conform to the syntax for an RMI connector, or if its protocol is not recognized by this implementation dot  Only "rmi" is recognized when rmiServerImpl is null.
throw MalformedURLException if rmiServerImpl == null.
throw MalformedURLException if url does not conform to the syntax for an RMI connector, or if its protocol is not recognized by this implementation dot  Only "rmi" is recognized when rmiServerImpl is null.
throw IllegalStateException if getMBeanServer() == null.
throw IllegalStateException if the connector server has not been attached to an MBean server.
throw IOException if state == STARTED.
throw IOException if the connector server cannot be started.
throw IllegalStateException if !isActive().
throw IllegalStateException if the JMXConnectorServer is not started (see JMXConnectorServerMBean dot isActive()).
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if (level != Connection dot TRANSACTION_NONE) && (level != Connection dot TRANSACTION_READ_COMMITTED) && (level != Connection dot TRANSACTION_READ_UNCOMMITTED)&& (level != Connection dot TRANSACTION_REPEATABLE_READ)&& (level != Connection dot TRANSACTION_SERIALIZABLE).
throw SQLException if the given parameter is not one of the Connection constants.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs, this method is called on a closed CallableStatement or if the given Object parameter is ambiguous.
throw SQLException if params == null.
throw SQLException if a database access error occurs, this method is called on a closed CallableStatement or if the given Object parameter is ambiguous.
throw SQLException if params == null.
throw SQLException if a database access error occurs, this method is called on a closed CallableStatement or if the given Object parameter is ambiguous.
throw SQLException if seconds < 0.
throw SQLException if an error occurs setting the query time-out or if the query time-out value is less than 0.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if ((getType() == ResultSet dot TYPE_FORWARD_ONLY) && (direction != ResultSet dot FETCH_FORWARD)) || ((direction != ResultSet dot FETCH_FORWARD) && (direction != ResultSet dot FETCH_REVERSE) && (direction != ResultSet dot FETCH_UNKNOWN)).
throw SQLException if (1) the RowSet type is TYPE_FORWARD_ONLY and the given fetch direction is not FETCH_FORWARD or (2) the given fetch direction is not one of the following: ResultSet dot FETCH_FORWARD, ResultSet dot FETCH_REVERSE, or ResultSet dot FETCH_UNKNOWN.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if an error occurs; the parameter index is out of bounds or the Ref object is null; or the Ref object returns a null base type name.
throw SQLException if max < 0.
throw SQLException if an error occurs internally setting the maximum limit on the number of rows that a JDBC RowSet object can contain; or if max is less than 0; or if max is less than the fetchSize of the RowSet.
throw SQLException if max < 0.
throw SQLException if an error occurs internally setting the maximum limit on the number of rows that a JDBC RowSet object can contain; or if max is less than 0; or if max is less than the fetchSize of the RowSet.
throw SQLException if max < 0.
throw SQLException if (1) an error occurs internally setting the maximum limit of the column size or (2) a size of less than 0 is set.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if name == null.
throw SQLException if an empty string is provided as the DataSource name.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if (rows < 0) || (rows > getMaxRows()).
throw SQLException if the specified fetch size is less than 0 or more than the limit for the maximum number of rows.
throw SQLException if (concurrency != ResultSet dot CONCUR_READ_ONLY) && (concurrency != ResultSet dot CONCUR_UPDATABLE).
throw SQLException if the parameter supplied is not one of the following constants: ResultSet dot CONCUR_UPDATABLE or ResultSet dot CONCUR_READ_ONLY.
throw SQLException if params == null.
throw SQLException if an error occurs, the parameter index is out of bounds, or the number of bytes the driver reads and sends to the database is not equal to the number of bytes specified in length.
throw SQLException if (type != ResultSet dot TYPE_FORWARD_ONLY) && (type != ResultSet dot TYPE_SCROLL_INSENSITIVE) && (type != ResultSet dot TYPE_SCROLL_SENSITIVE).
throw SQLException if the parameter supplied is not one of the following constants: ResultSet dot TYPE_FORWARD_ONLY or ResultSet dot TYPE_SCROLL_INSENSITIVE ResultSet dot TYPE_SCROLL_SENSITIVE.
throw SQLException if cmd == null.
throw SQLException if an empty string is provided as the command value.
throw SQLException if cmd == null.
throw SQLException if an empty string is provided as the command value.
throw SQLException if url == null.
throw SQLException if an error occurs setting the Url property or the parameter supplied is a string with a length of 0 (an empty string).
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if an error occurs; the parameter index is out of bounds or the ARRAY is null.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw SQLException if params == null.
throw SQLException if an error occurs retrieving the object array of parameters of this RowSet object or if not all parameters have been set.
throw SQLException if params == null.
throw SQLException if a database access error occurs or this method is called on a closed CallableStatement.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw UnsupportedOperationException if !Taskbar dot isTaskbarSupported().
throw UnsupportedOperationException if this class is not supported on the current platform.
throw IllegalArgumentException if field < 0 || field >= ZONE_OFFSET.
throw IllegalArgumentException if field is ZONE_OFFSET, DST_OFFSET, or unknown, or if any calendar fields have out-of-range values in non-lenient mode.
throw IllegalArgumentException if dayOfWeek < SUNDAY || dayOfWeek > SATURDAY.
throw IllegalArgumentException if any of the given date specifiers is invalid, or if any of the calendar fields are inconsistent with the given date specifiers in non-lenient mode.
throw IllegalArgumentException if !isLenient() && (gc dot getWeekYear() != weekYear || gc dot internalGet(WEEK_OF_YEAR) != weekOfYear || gc dot internalGet(DAY_OF_WEEK) != dayOfWeek).
throw IllegalArgumentException if any of the given date specifiers is invalid, or if any of the calendar fields are inconsistent with the given date specifiers in non-lenient mode.
throw IllegalArgumentException if !isLenient().
throw IllegalArgumentException if any calendar fields are invalid.
throw IllegalArgumentException if era == BCE.
throw IllegalArgumentException if any calendar fields are invalid.
throw IllegalArgumentException if gfd >= gregorianCutoverDate.
throw IllegalArgumentException if any calendar fields are invalid.
throw IllegalArgumentException if !isLenient().
throw IllegalArgumentException if any calendar fields are invalid.
throw IllegalArgumentException if queries dot length < 2.
throw IllegalArgumentException if less than 2 types are specified.
throw IllegalArgumentException if scheme == null.
throw IllegalArgumentException if preconditions on the uri parameter do not hold dot  The format of the URI is provider specific.
throw UnsupportedOperationException if getFileSystem() == FileSystems dot getDefault().
throw UnsupportedOperationException if this Path is not associated with the default provider.
throw IllegalArgumentException if tags == null.
throw IllegalArgumentException if tags is null, or contains objects that are not instances of the TIFFTag class.
throw IllegalArgumentException if !(o instanceof TIFFTag).
throw IllegalArgumentException if tags is null, or contains objects that are not instances of the TIFFTag class.
throw IllegalArgumentException if tagName == null.
throw IllegalArgumentException if tagName is null.
throw IllegalArgumentException if baseName == null || baseName dot isEmpty().
throw IllegalArgumentException if the given bundle doesn't have a base name, or if this logger already has a resource bundle set but the given bundle has a different base name.
throw IllegalArgumentException if !canReplaceResourceBundle.
throw IllegalArgumentException if the given bundle doesn't have a base name, or if this logger already has a resource bundle set but the given bundle has a different base name.
throw IndexOutOfBoundsException if fromIndex < 0.
throw IndexOutOfBoundsException if the specified index is negative.
throw IndexOutOfBoundsException if fromIndex < 0.
throw IndexOutOfBoundsException if the specified index is less than -1.
throw IndexOutOfBoundsException if bitIndex < 0.
throw IndexOutOfBoundsException if fromIndex is negative, or toIndex is negative, or fromIndex is larger than toIndex.
throw IndexOutOfBoundsException if bitIndex < 0.
throw IndexOutOfBoundsException if fromIndex is negative, or toIndex is negative, or fromIndex is larger than toIndex.
throw NegativeArraySizeException if nbits < 0.
throw NegativeArraySizeException if the specified initial size is negative.
throw IndexOutOfBoundsException if bitIndex < 0.
throw IndexOutOfBoundsException if fromIndex is negative, or toIndex is negative, or fromIndex is larger than toIndex.
throw IndexOutOfBoundsException if fromIndex < 0.
throw IndexOutOfBoundsException if the specified index is less than -1.
throw IndexOutOfBoundsException if fromIndex < 0.
throw IndexOutOfBoundsException if the specified index is negative.
throw IndexOutOfBoundsException if bitIndex < 0.
throw IndexOutOfBoundsException if fromIndex is negative, or toIndex is negative, or fromIndex is larger than toIndex.
throw IllegalArgumentException if v dot isArray().
throw IllegalArgumentException if the input is not valid dot  For example, input might not be valid if the field type or name is not valid in the Java language or an annotation element references a type that can't be found.
throw IllegalArgumentException if !Type dot isValidJavaFieldType(v dot getTypeName()).
throw IllegalArgumentException if the input is not valid dot  For example, input might not be valid if the field type or name is not valid in the Java language or an annotation element references a type that can't be found.
throw IllegalArgumentException if !Type dot isValidJavaIdentifier(v dot getName()).
throw IllegalArgumentException if the input is not valid dot  For example, input might not be valid if the field type or name is not valid in the Java language or an annotation element references a type that can't be found.
throw IllegalArgumentException if nameSet dot contains(name).
throw IllegalArgumentException if the input is not valid dot  For example, input might not be valid if the field type or name is not valid in the Java language or an annotation element references a type that can't be found.
throw IllegalArgumentException if transferObject == null.
throw IllegalArgumentException if the representation class is not one of the seven listed above.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if the representation class is not one of the seven listed above.
throw IllegalArgumentException if transferObject == null.
throw IllegalArgumentException if the Transferable has null data.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if the Transferable has null data.
throw IOException if mimeType != null.
throw IOException if I/O errors occur.
throw NullPointerException if mimeType == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if primaryType == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if subType == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if representationClass == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if representationClass == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if mimeType == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if mimeType == null.
throw NullPointerException if mimeType is null.
throw NullPointerException if mimeType == null.
throw NullPointerException if mimeType is null.
throw IllegalArgumentException if (type == Type dot DIRECT) || !(sa instanceof InetSocketAddress).
throw IllegalArgumentException if when the type and the address are incompatible.
throw NullPointerException if context == null.
throw NullPointerException if text or context is null.
throw NullPointerException if defaultContext == null.
throw NullPointerException if ranges or defaultContext is null.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than zero.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than zero.
throw IllegalArgumentException if xmlEventWriter == null.
throw IllegalArgumentException if If xmlStreamWriter == null.
throw IllegalArgumentException if xmlStreamWriter == null.
throw IllegalArgumentException if If xmlStreamWriter == null.
throw LoginException if subject dot isReadOnly().
throw LoginException if the logout fails.
throw LoginException if succeeded == false.
throw LoginException if the commit fails.
throw IllegalArgumentException if aColumn == null.
throw IllegalArgumentException if aColumn is null.
throw IllegalArgumentException if (columnIndex < 0) || (columnIndex >= getColumnCount()) || (newIndex < 0)|| (newIndex >= getColumnCount()).
throw IllegalArgumentException if column or newIndex are not in the valid range.
throw IllegalArgumentException if newModel == null.
throw IllegalArgumentException if newModel is null.
throw IllegalArgumentException if identifier == null.
throw IllegalArgumentException if identifier is null, or if no TableColumn has this identifier.
throw NullPointerException if prefixList == null.
throw NullPointerException if prefixList is null.
throw IllegalArgumentException if flavor == null || printData == null.
throw IllegalArgumentException if flavor or printData is null, or the printData does not correspond to the specified doc flavor--for example, the data is not of the type specified as the representation in the DocFlavor.
throw IllegalArgumentException if !repClass dot isInstance(printData).
throw IllegalArgumentException if flavor or printData is null, or the printData does not correspond to the specified doc flavor--for example, the data is not of the type specified as the representation in the DocFlavor.
throw IllegalArgumentException if u == null || p == null.
throw IllegalArgumentException if either u or p is null, or p has the wrong type.
throw SecurityException if this != u dot handler.
throw SecurityException if the protocol handler of the URL is different from this one.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalArgumentException if GraphicsEnvironment dot isHeadless().
throw IllegalArgumentException if services is null or empty, or attributes is null, or the initial PrintService is not in the list of browsable services.
throw IllegalArgumentException if GraphicsEnvironment dot isHeadless().
throw IllegalArgumentException if services is null or empty, or attributes is null, or the initial PrintService is not in the list of browsable services.
throw IllegalArgumentException if defaultService != null.
throw IllegalArgumentException if services is null or empty, or attributes is null, or the initial PrintService is not in the list of browsable services.
throw RuntimeOperationsException if initNumFields <= 0.
throw RuntimeOperationsException if for illegal value for field Names or field Values dot  The field must contain an "=" dot  "=fieldValue", "fieldName", and "fieldValue" are illegal dot  FieldName cannot be null dot  "fieldName=" will cause the value to be null dot  If the descriptor construction fails for any reason, this exception will be thrown.
throw RuntimeOperationsException if inStr == null.
throw RuntimeOperationsException if for illegal value for field Names or field Values dot  The field must contain an "=" dot  "=fieldValue", "fieldName", and "fieldValue" are illegal dot  FieldName cannot be null dot  "fieldName=" will cause the value to be null dot  If the descriptor construction fails for any reason, this exception will be thrown.
throw RuntimeOperationsException if (fieldNames == null) || (fieldValues == null) || (fieldNames dot length != fieldValues dot length).
throw RuntimeOperationsException if for illegal value for field Names or field Values dot  The field must contain an "=" dot  "=fieldValue", "fieldName", and "fieldValue" are illegal dot  FieldName cannot be null dot  "fieldName=" will cause the value to be null dot  If the descriptor construction fails for any reason, this exception will be thrown.
throw RuntimeOperationsException if eq_separator < 0.
throw RuntimeOperationsException if for illegal value for field Names or field Values dot  The field must contain an "=" dot  "=fieldValue", "fieldName", and "fieldValue" are illegal dot  FieldName cannot be null dot  "fieldName=" will cause the value to be null dot  If the descriptor construction fails for any reason, this exception will be thrown.
throw RuntimeOperationsException if fieldName dot isEmpty().
throw RuntimeOperationsException if for illegal value for field Names or field Values dot  The field must contain an "=" dot  "=fieldValue", "fieldName", and "fieldValue" are illegal dot  FieldName cannot be null dot  "fieldName=" will cause the value to be null dot  If the descriptor construction fails for any reason, this exception will be thrown.
throw IllegalStateException if destroyed.
throw IllegalStateException if the object is destroyed.
throw IllegalStateException if destroyed.
throw IllegalStateException if the object is destroyed.
throw IllegalStateException if destroyed.
throw IllegalStateException if the object is destroyed.
throw NullPointerException if font == null.
throw NullPointerException if font is null.
throw IndexOutOfBoundsException if index < -1 || (certPath != null && index >= certPath dot getCertificates() dot size()).
throw IndexOutOfBoundsException if the index is out of range (index < -1 || (certPath != null && index >= certPath dot getCertificates() dot size()).
throw IllegalArgumentException if certPath == null && index != -1.
throw IllegalArgumentException if certPath is null and index is not -1.
throw NullPointerException if reason == null.
throw NullPointerException if reason is null.
throw NullPointerException if signingKey == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if parent == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if signingKey == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if parent == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if nextSibling == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if ks == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if parent == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if ks == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if parent == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if nextSibling == null.
throw NullPointerException if ks, parent or nextSibling is null.
throw NullPointerException if parent == null.
throw NullPointerException if parent is null.
throw NullPointerException if context == null.
throw NullPointerException if context is null.
throw IllegalArgumentException if names == null.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if names dot length == 0.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if pluginClassName == null.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if names == null.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if names dot length == 0.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if pluginClassName == null.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if names == null.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if names dot length == 0.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if pluginClassName == null.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if names == null.
throw IllegalArgumentException if pluginClassName is null.
throw IllegalArgumentException if names dot length == 0.
throw IllegalArgumentException if pluginClassName is null.
throw IllegalArgumentException if pluginClassName == null.
throw IllegalArgumentException if pluginClassName is null.
throw IllegalCallerException if this dot isNamed().
throw IllegalCallerException if If this is a named module and the caller's module is not this module.
throw IllegalCallerException if isNamed() && !descriptor dot isAutomatic().
throw IllegalCallerException if If this is a named module and the caller's module is not this module.
throw IllegalArgumentException if pn == null.
throw IllegalArgumentException if If pn is null, or this is a named module and the package pn is not a package in this module.
throw IllegalCallerException if isNamed().
throw IllegalCallerException if If this is a named module and the caller's module is not this module.
throw IllegalArgumentException if pn == null.
throw IllegalArgumentException if If pn is null, or this is a named module and the package pn is not a package in this module.
throw IllegalCallerException if isNamed().
throw IllegalCallerException if If this is a named module and this module has not opened the package to at least the caller's module.
throw NullPointerException if hit == null || point == null.
throw NullPointerException if hit or point is null.
throw Error if justifyRatio == ALREADY_JUSTIFIED.
throw Error if this layout has already been justified, an Error is thrown.
throw IllegalArgumentException if aContainer == null || aComponent == null.
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if aContainer == null.
throw IllegalArgumentException if aContainer is null.
throw IllegalArgumentException if aContainer == null.
throw IllegalArgumentException if aContainer is null.
throw IllegalArgumentException if aContainer == null || aComponent == null.
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if !aContainer dot isFocusTraversalPolicyProvider() && !aContainer dot isFocusCycleRoot().
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if srcs == null.
throw IllegalArgumentException if either srcs or dst is null, or if any element in the srcs subsequence specified is null.
throw IllegalArgumentException if dsts == null.
throw IllegalArgumentException if either src or dsts is null, or if any element in the dsts subsequence specified is null.
throw PropertyVetoException if !rejectedSetBCOnce.
throw PropertyVetoException if the change is rejected.
throw Error if listeners[i] == MenuListener dot class.
throw Error if there is a null listener.
throw IllegalArgumentException if pos < 0.
throw IllegalArgumentException if the value of pos < 0.
throw IllegalArgumentException if pos < 0.
throw IllegalArgumentException if the value of pos < 0.
throw IllegalArgumentException if pos < 0.
throw IllegalArgumentException if the value of pos < 0.
throw IllegalArgumentException if pos < 0.
throw IllegalArgumentException if the value of pos < 0.
throw Error if listeners[i] == MenuListener dot class.
throw Error if there is a null listener.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if the value of index < 0.
throw IllegalArgumentException if d < 0.
throw IllegalArgumentException if d is less than 0.
throw Error if listeners[i] == MenuListener dot class.
throw Error if there is a null listener.
throw IllegalArgumentException if pos < 0.
throw IllegalArgumentException if the value of pos < 0, or if pos is greater than the number of menu items.
throw IllegalArgumentException if pos > getItemCount().
throw IllegalArgumentException if the value of pos < 0, or if pos is greater than the number of menu items.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if the unresolved role is null.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if the unresolved role is null.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if the unresolved role is null.
throw IllegalArgumentException if roleList == null.
throw IllegalArgumentException if the role is null.
throw IllegalArgumentException if list == null.
throw IllegalArgumentException if the list parameter is null or if the list parameter contains any non-RoleUnresolved objects.
throw BadAttributeValueExpException if result instanceof Number.
throw BadAttributeValueExpException if when an invalid MBean attribute is passed to a query constructing method.
throw NullPointerException if o == null.
throw NullPointerException if the parameter o is null.
throw NullPointerException if message == null.
throw NullPointerException if cause is null.
throw NullPointerException if cause == null.
throw NullPointerException if cause is null.
throw BadLocationException if (pos < 0) || ((pos + len) > doc dot getLength()).
throw BadLocationException if pos is not within 0 and the length of the document.
throw IllegalArgumentException if contents == null.
throw IllegalArgumentException if contents is null.
throw IllegalArgumentException if factory == null.
throw IllegalArgumentException if factory is null.
throw NullPointerException if name == null.
throw NullPointerException if the name is null.
throw IllegalArgumentException if emitter == null.
throw IllegalArgumentException if the mbeanInterface does not follow JMX design patterns for Management Interfaces, or if this does not implement the specified interface, or if emitter is null.
throw IllegalArgumentException if emitter == null.
throw IllegalArgumentException if the mbeanInterface does not follow JMX design patterns for Management Interfaces, or if this does not implement the specified interface, or if emitter is null.
throw ClassCastException if emitter instanceof NotificationBroadcasterSupport.
throw ClassCastException if the emitter parameter to the constructor was not a NotificationBroadcasterSupport.
throw IllegalArgumentException if cert == null || key == null.
throw IllegalArgumentException if either cert, key or alias is null.
throw IllegalArgumentException if cert == null || key == null || alias == null.
throw IllegalArgumentException if either cert, key or alias is null.
throw RasterFormatException if parentX < this dot minX.
throw RasterFormatException if the subregion is outside of the raster bounds.
throw RasterFormatException if parentY < this dot minY.
throw RasterFormatException if the subregion is outside of the raster bounds.
throw RasterFormatException if (parentX + w < parentX) || (parentX + w > this dot width + this dot minX).
throw RasterFormatException if the subregion is outside of the raster bounds.
throw RasterFormatException if (parentY + h < parentY) || (parentY + h > this dot height + this dot minY).
throw RasterFormatException if the subregion is outside of the raster bounds.
throw RasterFormatException if parentX < this dot minX.
throw RasterFormatException if w or h is less than or equal to zero, or computing any of parentX + w, parentY + h, childMinX + w, or childMinY + h results in integer overflow.
throw RasterFormatException if parentY < this dot minY.
throw RasterFormatException if w or h is less than or equal to zero, or computing any of parentX + w, parentY + h, childMinX + w, or childMinY + h results in integer overflow.
throw RasterFormatException if (parentX + w < parentX) || (parentX + w > this dot width + this dot minX).
throw RasterFormatException if w or h is less than or equal to zero, or computing any of parentX + w, parentY + h, childMinX + w, or childMinY + h results in integer overflow.
throw RasterFormatException if (parentY + h < parentY) || (parentY + h > this dot height + this dot minY).
throw RasterFormatException if w or h is less than or equal to zero, or computing any of parentX + w, parentY + h, childMinX + w, or childMinY + h results in integer overflow.
throw ArrayIndexOutOfBoundsException if (dstOffX < this dot minX) || (dstOffY < this dot minY) || (dstOffX + width > this dot minX + this dot width)|| (dstOffY + height > this dot minY + this dot height).
throw ArrayIndexOutOfBoundsException if the coordinates are not in bounds, or if inData is too small to hold the input.
throw IllegalArgumentException if rangeError.
throw IllegalArgumentException if any of the values in the components array or alpha is outside of the range 0 dot 0 to 1 dot 0.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw IllegalArgumentException if newLength < 0.
throw IllegalArgumentException if from > to.
throw AsynchronousCloseException if !completed && closed.
throw AsynchronousCloseException if If the channel was asynchronously closed.
throw ClosedByInterruptException if interrupted != null && interrupted == Thread dot currentThread().
throw ClosedByInterruptException if If the thread blocked in the I/O operation was interrupted.
throw IllegalArgumentException if component != null && indexOfComponent(component) != -1.
throw IllegalArgumentException if component has already been added to this JTabbedPane.
throw IllegalArgumentException if index != -1.
throw IllegalArgumentException if component not found in tabbed pane.
throw SecurityException if isReadOnly().
throw SecurityException if this Permissions object is marked as readonly.
throw IllegalArgumentException if init < -1.
throw IllegalArgumentException if the value of init or max is negative but not -1; or the value of used or committed is negative; or used is greater than the value of committed; or committed is greater than the value of max max if defined.
throw IllegalArgumentException if max < -1.
throw IllegalArgumentException if the value of init or max is negative but not -1; or the value of used or committed is negative; or used is greater than the value of committed; or committed is greater than the value of max max if defined.
throw IllegalArgumentException if used < 0.
throw IllegalArgumentException if the value of init or max is negative but not -1; or the value of used or committed is negative; or used is greater than the value of committed; or committed is greater than the value of max max if defined.
throw IllegalArgumentException if committed < 0.
throw IllegalArgumentException if the value of init or max is negative but not -1; or the value of used or committed is negative; or used is greater than the value of committed; or committed is greater than the value of max max if defined.
throw IllegalArgumentException if used > committed.
throw IllegalArgumentException if the value of init or max is negative but not -1; or the value of used or committed is negative; or used is greater than the value of committed; or committed is greater than the value of max max if defined.
throw IllegalArgumentException if max >= 0 && committed > max.
throw IllegalArgumentException if the value of init or max is negative but not -1; or the value of used or committed is negative; or used is greater than the value of committed; or committed is greater than the value of max max if defined.
throw IllegalArgumentException if s dot equals(VIEWPORT).
throw IllegalArgumentException if s is an invalid key.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw IllegalArgumentException if baseOperation instanceof NamedOperation.
throw IllegalArgumentException if less than one namespace is specified, or the base operation is itself a NamespaceOperation or a NamedOperation.
throw IllegalArgumentException if baseOperation instanceof NamedOperation.
throw IllegalArgumentException if less than one namespace is specified, or the base operation is itself a NamespaceOperation or a NamedOperation.
throw IllegalArgumentException if namespaces dot length < 1.
throw IllegalArgumentException if less than one namespace is specified, or the base operation is itself a NamespaceOperation or a NamedOperation.
throw IllegalArgumentException if 0 <= orientation && orientation <= REVERSE_LANDSCAPE.
throw IllegalArgumentException if an unknown orientation was requested.
throw IllegalArgumentException if (value == null) || !(value instanceof Date).
throw IllegalArgumentException if value is null or not a Date.
throw IllegalArgumentException if value == null.
throw IllegalArgumentException if value or calendarField are null, if calendarField isn't valid, or if the following expression is false: (start <= value <= end).
throw IllegalArgumentException if !calendarFieldOK(calendarField).
throw IllegalArgumentException if value or calendarField are null, if calendarField isn't valid, or if the following expression is false: (start <= value <= end).
throw IllegalArgumentException if !(((start == null) || (start dot compareTo(value) <= 0)) && ((end == null) || (end dot compareTo(value) >= 0))).
throw IllegalArgumentException if value or calendarField are null, if calendarField isn't valid, or if the following expression is false: (start <= value <= end).
throw MissingResourceException if obj == null.
throw MissingResourceException if no object for the given key can be found.
throw NullPointerException if key == null.
throw NullPointerException if key is null.
throw NullPointerException if loader == null.
throw NullPointerException if baseName, targetLocale, loader, or control is null.
throw NullPointerException if loader == null || control == null.
throw NullPointerException if baseName, targetLocale, loader, or control is null.
throw IllegalArgumentException if lowerBound > value || value > upperBound.
throw IllegalArgumentException if value is less than lowerBound or greater than upperBound.
throw NullPointerException if clz == null.
throw NullPointerException if If the Class object is null.
throw IllegalArgumentException if !name dot equals("control") && !name dot equals("monitor").
throw IllegalArgumentException if name is empty or if arguments are invalid.
throw IllegalArgumentException if !name dot equals("control") && !name dot equals("monitor").
throw IllegalArgumentException if name is empty or if arguments are invalid.
throw IllegalArgumentException if actions != null && actions dot length() > 0.
throw IllegalArgumentException if name is empty or if arguments are invalid.
throw ArithmeticException if fractionOnly().
throw ArithmeticException if this has a nonzero fractional part, or will not fit in a long.
throw ArithmeticException if result dot scale() < 0.
throw ArithmeticException if divisor==0.
throw ArithmeticException if result dot scale() < 0.
throw ArithmeticException if mc dot precision > 0 and the result requires a precision of more than mc dot precision digits.
throw ArithmeticException if n < 0 || n > 999999999.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY, or n is out of range.
throw ArithmeticException if n < -999999999 || n > 999999999.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY, or n is out of range.
throw ArithmeticException if mc dot precision > 0.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY, or n is out of range.
throw ArithmeticException if divisor dot signum() == 0.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY or mc dot precision == 0 and the quotient has a non-terminating decimal expansion.
throw ArithmeticException if divisor dot signum() == 0.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY or mc dot precision == 0 and the quotient has a non-terminating decimal expansion.
throw ArithmeticException if this dot signum() == 0.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY or mc dot precision == 0 and the quotient has a non-terminating decimal expansion.
throw ArithmeticException if divisor dot signum() == 0.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY or mc dot precision == 0 and the quotient has a non-terminating decimal expansion.
throw ArithmeticException if divisor dot signum() == 0.
throw ArithmeticException if the result is inexact but the rounding mode is UNNECESSARY or mc dot precision == 0 and the quotient has a non-terminating decimal expansion.
throw NullPointerException if b == null.
throw NullPointerException if If b is null.
throw IndexOutOfBoundsException if b == null.
throw IndexOutOfBoundsException if If off is negative, len is negative, or len is greater than b dot length - off.
throw IllegalArgumentException if in == null || inf == null.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if n < 0.
throw IllegalArgumentException if n < 0.
throw IllegalArgumentException if dataType < MIN_DATATYPE || dataType > MAX_DATATYPE.
throw IllegalArgumentException if datatype is less than MIN_DATATYPE or greater than MAX_DATATYPE.
throw IllegalArgumentException if dataType < MIN_DATATYPE || dataType > MAX_DATATYPE.
throw IllegalArgumentException if datatype is less than MIN_DATATYPE or greater than MAX_DATATYPE.
throw NullPointerException if name == null.
throw NullPointerException if name is null.
throw NullPointerException if tagSet == null.
throw NullPointerException if name is null.
throw IllegalArgumentException if name == null.
throw IllegalArgumentException if number is negative or dataTypes is negative or specifies an out of range type.
throw IllegalArgumentException if name == null.
throw IllegalArgumentException if number is negative or dataTypes is negative or specifies an out of range type.
throw IllegalArgumentException if keyChar == null.
throw IllegalArgumentException if s is null, or is formatted incorrectly.
throw IllegalArgumentException if s == null.
throw IllegalArgumentException if s is null, or is formatted incorrectly.
throw IllegalArgumentException if typed.
throw IllegalArgumentException if s is null, or is formatted incorrectly.
throw IllegalArgumentException if pressed || released || i == count.
throw IllegalArgumentException if s is null, or is formatted incorrectly.
throw IllegalArgumentException if tokenMask != null.
throw IllegalArgumentException if s is null, or is formatted incorrectly.
throw IllegalArgumentException if actions != null.
throw IllegalArgumentException if name is empty or actions is not null.
throw BadLocationException if line == null.
throw BadLocationException if the offset is out of range.
throw BadLocationException if line == null.
throw BadLocationException if the offset is out of range.
throw ServiceNotFoundException if url == null.
throw ServiceNotFoundException if One of the following errors has occurred: The m-let text file does not contain an MLET tag, the m-let text file is not found, a mandatory attribute of the MLET tag is not specified, the url is malformed.
throw ServiceNotFoundException if url == null.
throw ServiceNotFoundException if One of the following errors has occurred: The m-let text file does not contain an MLET tag, the m-let text file is not found, a mandatory attribute of the MLET tag is not specified, the url is malformed.
throw ServiceNotFoundException if mletList dot size() == 0.
throw ServiceNotFoundException if One of the following errors has occurred: The m-let text file does not contain an MLET tag, the m-let text file is not found, a mandatory attribute of the MLET tag is not specified, the url is malformed.
throw IllegalStateException if server == null.
throw IllegalStateException if MLet MBean is not registered with an MBeanServer.
throw ClassNotFoundException if c == null.
throw ClassNotFoundException if The specified class could not be found.
throw IllegalArgumentException if count < 0.
throw IllegalArgumentException if count is negative.
throw IllegalArgumentException if list == null.
throw IllegalArgumentException if the list parameter is null or if the list parameter contains any non-Attribute objects.
throw IllegalArgumentException if this dot nonce dot length != NONCE_LENGTH.
throw IllegalArgumentException if nonce is not 12 bytes in length.
throw NullPointerException if enc == null.
throw NullPointerException if s or charset is null.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if the role is null.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if the role is null.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if the role is null.
throw IllegalArgumentException if roleList == null.
throw IllegalArgumentException if the role is null.
throw IllegalArgumentException if list == null.
throw IllegalArgumentException if the list parameter is null or if the list parameter contains any non-Role objects.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw InvalidDnDOperationException if dsc == null.
throw InvalidDnDOperationException if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw NullPointerException if serviceURL == null.
throw NullPointerException if serviceURL is null.
throw IllegalArgumentException if x < 0 dot 0f.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1.
throw IllegalArgumentException if y < 0 dot 0f.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1.
throw IllegalArgumentException if units < 1.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1.
throw IllegalArgumentException if x < 0.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1.
throw IllegalArgumentException if y < 0.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1.
throw IllegalArgumentException if units < 1.
throw IllegalArgumentException if x < 0 or y < 0 or units < 1.
throw UnsupportedOperationException if charContent == null.
throw UnsupportedOperationException if this kind of file object does not support character access.
throw NullPointerException if serverName == null.
throw NullPointerException if serverName is null.
throw IllegalArgumentException if type != VarHandle dot class.
throw IllegalArgumentException if the type is not VarHandle.
throw IllegalArgumentException if type != Class dot class.
throw IllegalArgumentException if the name is not a descriptor for a primitive type or the type is not Class dot class.
throw IllegalArgumentException if name dot length() != 1.
throw IllegalArgumentException if the name is not a descriptor for a primitive type or the type is not Class dot class.
throw IncompatibleClassChangeError if !member dot isFinal().
throw IncompatibleClassChangeError if the specified field is not final.
throw IllegalArgumentException if requireNonNull(type) dot isPrimitive().
throw IllegalArgumentException if type is not a reference type.
throw IllegalArgumentException if type != VarHandle dot class.
throw IllegalArgumentException if the type is not VarHandle.
throw IllegalArgumentException if type != VarHandle dot class.
throw IllegalArgumentException if the type is not VarHandle.
throw NoSuchElementException if e == null.
throw NoSuchElementException if this deque is empty.
throw NoSuchElementException if e == null.
throw NoSuchElementException if this deque is empty.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw NoSuchElementException if e == null.
throw NoSuchElementException if this deque is empty.
throw NoSuchElementException if e == null.
throw NoSuchElementException if this deque is empty.
throw NullPointerException if e == null.
throw NullPointerException if the specified element is null.
throw EOFException if eof.
throw EOFException if no more events exist in the recording file.
throw IllegalArgumentException if map != null && !(map instanceof ComponentInputMap).
throw IllegalArgumentException if condition is WHEN_IN_FOCUSED_WINDOW and map is not an instance of ComponentInputMap; or if condition is not one of the legal values specified above.
throw NoSuchAlgorithmException if t dot hasNext() == false.
throw NoSuchAlgorithmException if a KeyPairGeneratorSpi implementation for the specified algorithm is not available from the specified Provider object.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalStateException if getCompressionMode() != MODE_EXPLICIT.
throw IllegalStateException if the compression mode is not MODE_EXPLICIT.
throw IllegalArgumentException if (qTables == null) || (DCHuffmanTables == null) || (ACHuffmanTables == null)|| (qTables dot length > 4)|| (DCHuffmanTables dot length > 4)|| (ACHuffmanTables dot length > 4)|| (DCHuffmanTables dot length != ACHuffmanTables dot length).
throw IllegalArgumentException if any of the arguments is null or has more than 4 elements, or if the numbers of DC and AC tables differ.
throw IllegalArgumentException if boundary == DONE.
throw IllegalArgumentException if the specified offset is less than the first text boundary or greater than the last text boundary.
throw NullPointerException if name == null.
throw NullPointerException if the name is null.
throw NoSuchMechanismException if s != null.
throw NoSuchMechanismException if no Provider supports an XMLSignatureFactory implementation for the DOM mechanism.
throw NoSuchMechanismException if s != null.
throw NoSuchMechanismException if no Provider supports an XMLSignatureFactory implementation for the DOM mechanism.
throw NoSuchMechanismException if s != null.
throw NoSuchMechanismException if no Provider supports an XMLSignatureFactory implementation for the DOM mechanism.
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if the value supplied for columns is less than 0.
throw IllegalArgumentException if (pos >= pItems dot size()) || (pos < 0).
throw IllegalArgumentException if the specified position is greater than the number of items or less than zero.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if index is less than 0.
throw InstanceNotFoundException if timerTable dot containsKey(id) == false.
throw InstanceNotFoundException if The specified identifier does not correspond to any timer notification in the list of notifications of this timer MBean.
throw InstanceNotFoundException if v dot isEmpty().
throw InstanceNotFoundException if The specified type does not correspond to any timer notification in the list of notifications of this timer MBean.
throw IllegalArgumentException if (cols == 0) && (this dot rows == 0).
throw IllegalArgumentException if the value of both rows and cols is set to zero.
throw IllegalArgumentException if (rows == 0) && (cols == 0).
throw IllegalArgumentException if the value of both rows and cols is set to zero.
throw IllegalArgumentException if (rows == 0) && (this dot cols == 0).
throw IllegalArgumentException if the value of both rows and cols is set to zero.
throw NullPointerException if prime == null.
throw NullPointerException if any of the parameters, i dot e dot  prime, primeExponent, crtCoefficient, is null.
throw NullPointerException if primeExponent == null.
throw NullPointerException if any of the parameters, i dot e dot  prime, primeExponent, crtCoefficient, is null.
throw NullPointerException if crtCoefficient == null.
throw NullPointerException if any of the parameters, i dot e dot  prime, primeExponent, crtCoefficient, is null.
throw IllegalArgumentException if source == null.
throw IllegalArgumentException if source is null.
throw NullPointerException if c == null.
throw NullPointerException if c is null.
throw IllegalArgumentException if width < 0 || height < 0.
throw IllegalArgumentException if width or height is < 0.
throw ArithmeticException if ((x ^ y) & (x ^ r)) < 0.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if ((x ^ y) & (x ^ r)) < 0.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if ((x ^ r) & (y ^ r)) < 0.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if ((x ^ r) & (y ^ r)) < 0.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if a == Integer dot MIN_VALUE.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if a == Long dot MIN_VALUE.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if a == Integer dot MAX_VALUE.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if a == Long dot MAX_VALUE.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if (int)value != value.
throw ArithmeticException if the argument overflows an int.
throw ArithmeticException if (int)r != r.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if ((ax | ay) >>> 31 != 0).
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if a == Integer dot MIN_VALUE.
throw ArithmeticException if the result overflows a long.
throw ArithmeticException if a == Long dot MIN_VALUE.
throw ArithmeticException if the result overflows a long.
throw SAXNotRecognizedException if parent != null.
throw SAXNotRecognizedException if If the property value can't be assigned or retrieved from the parent.
throw SAXNotRecognizedException if parent != null.
throw SAXNotRecognizedException if If the feature value can't be assigned or retrieved from the parent.
throw SAXNotRecognizedException if parent != null.
throw SAXNotRecognizedException if If the property value can't be assigned or retrieved from the parent.
throw SAXNotRecognizedException if parent != null.
throw SAXNotRecognizedException if If the feature value can't be assigned or retrieved from the parent.
throw IllegalArgumentException if priority < 0 || priority > 1.
throw IllegalArgumentException if priority is less than zero or greater than 1.
throw IllegalArgumentException if path == null || path dot length == 0.
throw IllegalArgumentException if any of the elements from 0 to length - 1 are null.
throw IllegalArgumentException if lastPathComponent == null.
throw IllegalArgumentException if any of the elements from 0 to length - 1 are null.
throw IllegalArgumentException if lastPathComponent == null.
throw IllegalArgumentException if any of the elements from 0 to length - 1 are null.
throw IllegalArgumentException if lastPathComponent == null.
throw IllegalArgumentException if any of the elements from 0 to length - 1 are null.
throw IllegalArgumentException if lastPathComponent == null.
throw IllegalArgumentException if any of the elements from 0 to length - 1 are null.
throw IllegalArgumentException if index < 0 || index >= pathLength.
throw IllegalArgumentException if the index is outside the range of this path.
throw NullPointerException if child == null.
throw NullPointerException if child is null.
throw IllegalArgumentException if !isValueSupported(value).
throw IllegalArgumentException if the value indicated does not fall within the allowable range.
throw SerialException if url == null.
throw SerialException if url parameter is a null.
throw IllegalArgumentException if type < 0.
throw IllegalArgumentException if type is not in the range of 0 to 255, inclusive.
throw IllegalArgumentException if type < 0.
throw IllegalArgumentException if type is not in the range of 0 to 255, inclusive.
throw IOException if c != '\n' && c != '\r'.
throw IOException if an I/O error has occurred.
throw IOException if name == null.
throw IOException if an I/O error has occurred.
throw IllegalArgumentException if printQuality == null.
throw IllegalArgumentException if printQuality is not 3, 4, or 5.
throw IllegalArgumentException if color == null.
throw IllegalArgumentException if color is null.
throw IllegalArgumentException if origin == null.
throw IllegalArgumentException if origin is null.
throw IllegalArgumentException if media == null.
throw IllegalArgumentException if media is null.
throw IllegalArgumentException if orientationRequested == null.
throw IllegalArgumentException if orientationRequested is not 3 or 4.
throw IllegalArgumentException if printerResolution == null || printerResolution dot length != 3 || printerResolution[0] <= 0 || printerResolution[1] <= 0 || (printerResolution[2] != 3 && printerResolution[2] != 4).
throw IllegalArgumentException if printerResolution is less than or equal to 0.
throw IllegalArgumentException if width < 0.
throw IllegalArgumentException if width or height is < 0.
throw IllegalArgumentException if height < 0.
throw IllegalArgumentException if width or height is < 0.
throw SerialException if object != null.
throw SerialException if an error is encountered in the reference resolution.
throw SerialException if reference != null.
throw SerialException if an error is encountered in the reference resolution.
throw SQLException if ref == null.
throw SQLException if a database access occurs; if ref is null; or if the Ref object returns a null value base type name.
throw SQLException if ref dot getBaseTypeName() == null.
throw SQLException if a database access occurs; if ref is null; or if the Ref object returns a null value base type name.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw NullPointerException if task == null.
throw NullPointerException if the task is null.
throw IndexOutOfBoundsException if index > len || index < 0.
throw IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).
throw IndexOutOfBoundsException if fromIndex < 0 || toIndex > len || size < 0.
throw IndexOutOfBoundsException if for an illegal endpoint index value (fromIndex < 0 || toIndex > size || fromIndex > toIndex).
throw IndexOutOfBoundsException if fromIndex < 0 || toIndex > size || fromIndex > toIndex.
throw IndexOutOfBoundsException if for an illegal endpoint index value (fromIndex < 0 || toIndex > size || fromIndex > toIndex).
throw IndexOutOfBoundsException if index > len || index < 0.
throw IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).
throw IndexOutOfBoundsException if index < 0 || index > len.
throw IndexOutOfBoundsException if the index is out of range (index < 0 || index > size()).
throw IllegalArgumentException if columns < 0.
throw IllegalArgumentException if the value supplied for columns is less than 0.
throw IllegalArgumentException if rows < 0.
throw IllegalArgumentException if the value supplied for rows is less than 0.
throw GSSException if derEncoding == null.
throw GSSException if may be thrown when the oid can't be encoded.
throw UTFDataFormatException if utflen > 65535 || utflen < strlen.
throw UTFDataFormatException if the modified UTF-8 encoding of str would exceed 65535 bytes in length.
throw IllegalArgumentException if permits < 0.
throw IllegalArgumentException if permits is negative.
throw IllegalArgumentException if permits < 0.
throw IllegalArgumentException if permits is negative.
throw IllegalArgumentException if permits < 0.
throw IllegalArgumentException if permits is negative.
throw IllegalArgumentException if reduction < 0.
throw IllegalArgumentException if reduction is negative.
throw IllegalArgumentException if permits < 0.
throw IllegalArgumentException if permits is negative.
throw IllegalArgumentException if permits < 0.
throw IllegalArgumentException if permits is negative.
throw IllegalArgumentException if bytesSize <= 0.
throw IllegalArgumentException if bytesSize < 0, alignmentBytes < 0, or if alignmentBytes is not a power of 2.
throw IllegalArgumentException if alignmentBytes < 0 || ((alignmentBytes & (alignmentBytes - 1)) != 0L).
throw IllegalArgumentException if bytesSize < 0, alignmentBytes < 0, or if alignmentBytes is not a power of 2.
throw IllegalArgumentException if !name dot equals(Utils dot ACCESS_FLIGHT_RECORDER) && !name dot equals(Utils dot REGISTER_EVENT).
throw IllegalArgumentException if name is empty or not valid.
throw IllegalArgumentException if v != 0 && v != 1.
throw IllegalArgumentException if v is neither 0 nor 1.
throw IllegalArgumentException if name dot isEmpty() || !isToken(name) || name dot charAt(0) == '$'.
throw IllegalArgumentException if the cookie name contains illegal characters.
throw ClassCastException if initialPolicies != null.
throw ClassCastException if any of the elements in the set are not of type String.
throw NullPointerException if keystore == null.
throw NullPointerException if the keystore is null.
throw ClassCastException if stores == null.
throw ClassCastException if any of the elements in the list are not of type java dot security dot cert dot CertStore.
throw InvalidAlgorithmParameterException if trustAnchors dot isEmpty().
throw InvalidAlgorithmParameterException if the specified Set is empty (trustAnchors dot isEmpty() == true).
throw NullPointerException if trustAnchors == null.
throw NullPointerException if the specified Set is null.
throw ClassCastException if !(i dot next() instanceof TrustAnchor).
throw ClassCastException if any of the elements in the set are not of type java dot security dot cert dot TrustAnchor.
throw NoInitialContextException if defaultInitCtx == null.
throw NoInitialContextException if If cannot find an initial context.
throw CancellationException if (s & THROWN) != 0.
throw CancellationException if the computation was cancelled.
throw CancellationException if s >= 0.
throw CancellationException if the computation was cancelled.
throw ExecutionException if (s & THROWN) != 0.
throw ExecutionException if the computation threw an exception.
throw ExecutionException if s >= 0.
throw ExecutionException if the computation threw an exception.
throw InterruptedException if Thread dot interrupted().
throw InterruptedException if the current thread is not a member of a ForkJoinPool and was interrupted while waiting.
throw TimeoutException if s >= 0.
throw TimeoutException if the wait timed out.
throw LoginException if commitInternal().
throw LoginException if the commit fails.
throw LoginException if token && !nullStream.
throw LoginException if the authentication fails.
throw LoginException if token && privateKeyPasswordURL != null.
throw LoginException if the authentication fails.
throw LoginException if protectedPath && (keyStorePasswordURL != null || privateKeyPasswordURL != null).
throw LoginException if the authentication fails.
throw BadLocationException if where < 0 || end < 0.
throw BadLocationException if the specified position is invalid.
throw BadLocationException if end > length() || where > length().
throw BadLocationException if the specified position is invalid.
throw BadLocationException if where > length() || where < 0.
throw BadLocationException if the specified position is invalid.
throw BadLocationException if where + nitems >= length().
throw BadLocationException if the specified position is invalid.
throw SerialException if fields != null.
throw SerialException if an error is encountered accessing the serialized object.
throw SerialException if hasStaticFields(fields).
throw SerialException if the object is found not to be serializable.
throw NullPointerException if (input == null) || (reason == null).
throw NullPointerException if either the input or reason strings are null.
throw IllegalArgumentException if !arrayClass dot isArray().
throw IllegalArgumentException if arrayClass is not a primitive array.
throw IllegalArgumentException if !componentType dot isPrimitive().
throw IllegalArgumentException if arrayClass is not a primitive array.
throw InvalidKeyException if key == null.
throw InvalidKeyException if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes.
throw InvalidKeyException if key dot length - offset < DES_KEY_LEN.
throw InvalidKeyException if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes.
throw InvalidKeyException if key == null.
throw InvalidKeyException if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes.
throw InvalidKeyException if key dot length - offset < DES_KEY_LEN.
throw InvalidKeyException if the given key material is null, or starting at offset inclusive, is shorter than 8 bytes.
throw InvalidKeyException if key dot length - offset < DES_KEY_LEN.
throw InvalidKeyException if the given key material, starting at offset inclusive, is shorter than 8 bytes.
throw IllegalMonitorStateException if !isHeldExclusively().
throw IllegalMonitorStateException if exclusive synchronization is not held.
throw IllegalArgumentException if !owns(condition).
throw IllegalArgumentException if the given condition is not associated with this synchronizer.
throw IllegalMonitorStateException if !isHeldExclusively().
throw IllegalMonitorStateException if exclusive synchronization is not held.
throw IllegalArgumentException if !owns(condition).
throw IllegalArgumentException if the given condition is not associated with this synchronizer.
throw InterruptedException if Thread dot interrupted() || (!tryAcquire(arg) && acquire(null,arg,false,true,false,0L) < 0).
throw InterruptedException if the current thread is interrupted.
throw NullPointerException if thread == null.
throw NullPointerException if the thread is null.
throw InterruptedException if Thread dot interrupted() || (tryAcquireShared(arg) < 0 && acquire(null,arg,true,true,false,0L) < 0).
throw InterruptedException if the current thread is interrupted.
throw IllegalMonitorStateException if !isHeldExclusively().
throw IllegalMonitorStateException if exclusive synchronization is not held.
throw IllegalArgumentException if !owns(condition).
throw IllegalArgumentException if the given condition is not associated with this synchronizer.
throw NullPointerException if source == null.
throw NullPointerException if source is null.
throw IllegalArgumentException if !(keyCode == KeyEvent dot VK_CAPS_LOCK || keyCode == KeyEvent dot VK_NUM_LOCK || keyCode == KeyEvent dot VK_SCROLL_LOCK || keyCode == KeyEvent dot VK_KANA_LOCK).
throw IllegalArgumentException if keyCode is not one of the valid key codes.
throw IllegalArgumentException if !(keyCode == KeyEvent dot VK_CAPS_LOCK || keyCode == KeyEvent dot VK_NUM_LOCK || keyCode == KeyEvent dot VK_SCROLL_LOCK || keyCode == KeyEvent dot VK_KANA_LOCK).
throw IllegalArgumentException if keyCode is not one of the valid key codes.
throw MalformedURLException if c < 32 || c >= 127.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if !serviceURL dot regionMatches(true,0,requiredPrefix,0,requiredPrefixLength).
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if !serviceURL dot regionMatches(protoEnd,"://",0,3).
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if hostStart < serviceURLLength && serviceURL dot charAt(hostStart) == '['.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if hostStart < serviceURLLength && serviceURL dot charAt(hostStart) == '['.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if hostEnd < serviceURLLength && serviceURL dot charAt(hostEnd) == ':'.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if hostEnd < serviceURLLength && serviceURL dot charAt(hostEnd) == ':'.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if host == null.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if host == null.
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if host dot startsWith("[").
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if host dot startsWith("[").
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw MalformedURLException if host dot startsWith("[").
throw MalformedURLException if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.
throw IllegalArgumentException if ttl < 0.
throw IllegalArgumentException if either timeout or ttl are negative.
throw IllegalArgumentException if timeout < 0.
throw IllegalArgumentException if either timeout or ttl are negative.
throw UnknownHostException if host dot charAt(0) == '['.
throw UnknownHostException if no IP address for the host could be found, or if a scope_id was specified for a global IPv6 address.
throw UnknownHostException if Character dot digit(host dot charAt(0),16) != -1 || (host dot charAt(0) == ':').
throw UnknownHostException if no IP address for the host could be found, or if a scope_id was specified for a global IPv6 address.
throw UnknownHostException if Character dot digit(host dot charAt(0),16) != -1 || (host dot charAt(0) == ':').
throw UnknownHostException if no IP address for the host could be found, or if a scope_id was specified for a global IPv6 address.
throw UnknownHostException if Character dot digit(host dot charAt(0),16) != -1 || (host dot charAt(0) == ':').
throw UnknownHostException if no IP address for the host could be found, or if a scope_id was specified for a global IPv6 address.
throw IllegalArgumentException if caName dot isEmpty().
throw IllegalArgumentException if the specified caName parameter is empty (caName dot length() == 0) or incorrectly formatted or the name constraints cannot be decoded.
throw NullPointerException if trustedCert == null.
throw NullPointerException if the specified caName or pubKey parameter is null.
throw NullPointerException if (caPrincipal == null) || (pubKey == null).
throw NullPointerException if the specified caName or pubKey parameter is null.
throw NullPointerException if pubKey == null.
throw NullPointerException if the specified caName or pubKey parameter is null.
throw NullPointerException if caName == null.
throw NullPointerException if the specified caName or pubKey parameter is null.
throw IllegalArgumentException if crossFeedResolution < 1.
throw IllegalArgumentException if crossFeedResolution < 1 or feedResolution < 1 or units < 1.
throw IllegalArgumentException if feedResolution < 1.
throw IllegalArgumentException if crossFeedResolution < 1 or feedResolution < 1 or units < 1.
throw IllegalArgumentException if units < 1.
throw IllegalArgumentException if crossFeedResolution < 1 or feedResolution < 1 or units < 1.
throw UnsupportedOperationException if allowSecurityManager().
throw UnsupportedOperationException if sm is non-null and a security manager is not allowed to be set dynamically.
throw IllegalCallerException if caller == null.
throw IllegalCallerException if there is no Java caller frame on the stack.
throw IllegalCallerException if caller == null.
throw IllegalCallerException if there is no Java caller frame on the stack.
throw AWTError if axis != X_AXIS && axis != Y_AXIS && axis != LINE_AXIS && axis != PAGE_AXIS.
throw AWTError if the value of axis is invalid.
throw IllegalArgumentException if objects dot size() != type dot getFields() dot size().
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if object == null.
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if AnnotationElement dot class dot isAssignableFrom(annotationType) && annotationType dot isInterface().
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if !isKnownJFRAnnotation(annotationType) && annotationType dot getAnnotation(MetadataDefinition dot class) == null.
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if methods dot length != map dot size().
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if object == null.
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if fieldType == Class dot class.
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if object instanceof Enum.
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if !fieldType dot equals(object dot getClass()).
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if fieldType dot isArray().
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if nameSet dot contains(fieldName).
throw IllegalArgumentException if value/key is null, an unsupported value type is used, or a value/key is used that doesn't match the signatures in the annotationType.
throw IllegalArgumentException if progress < 0 || progress > 100.
throw IllegalArgumentException if is value not from 0 to 100.
throw IllegalArgumentException if srcCM instanceof IndexColorModel.
throw IllegalArgumentException if src and dst do not have the same number of bands, or if the number of scaling factors and offsets in this RescaleOp do not meet the requirements stated in the class comments, or if the source and destination rasters differ in size.
throw IllegalArgumentException if scaleConst != 1 && scaleConst != numSrcColorComp && scaleConst != srcCM dot getNumComponents().
throw IllegalArgumentException if src and dst do not have the same number of bands, or if the number of scaling factors and offsets in this RescaleOp do not meet the requirements stated in the class comments, or if the source and destination rasters differ in size.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if src and dst do not have the same number of bands, or if the number of scaling factors and offsets in this RescaleOp do not meet the requirements stated in the class comments, or if the source and destination rasters differ in size.
throw IllegalArgumentException if dst == null.
throw IllegalArgumentException if src and dst do not have the same number of bands, or if the number of scaling factors and offsets in this RescaleOp do not meet the requirements stated in the class comments, or if the source and destination rasters differ in size.
throw InvalidMidiDataException if type >= 128 || type < 0.
throw InvalidMidiDataException if the parameter values do not specify a valid MIDI meta message.
throw InvalidMidiDataException if (length > 0 && length > data dot length) || length < 0.
throw InvalidMidiDataException if the parameter values do not specify a valid MIDI meta message.
throw IllegalArgumentException if mzl < 1.
throw IllegalArgumentException if mzl is < 1.
throw SAXNotRecognizedException if name dot equals(NAMESPACES).
throw SAXNotRecognizedException if If the feature can't be assigned or retrieved.
throw SAXException if parsing.
throw SAXException if If there is a problem processing the document.
throw SAXNotRecognizedException if name dot equals(NAMESPACES).
throw SAXNotRecognizedException if If the feature value can't be assigned or retrieved.
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if the given provider is null or empty.
throw NullPointerException if key == null.
throw NullPointerException if key is null.
throw NullPointerException if key == null.
throw NullPointerException if key is null.
throw IndexOutOfBoundsException if beginIndex < 0.
throw IndexOutOfBoundsException if beginIndex is less than the start index of ci, or limit is greater than the end index of ci, or beginIndex is greater than limit.
throw IndexOutOfBoundsException if limit > chars dot length.
throw IndexOutOfBoundsException if beginIndex is less than the start index of ci, or limit is greater than the end index of ci, or beginIndex is greater than limit.
throw IndexOutOfBoundsException if beginIndex > limit.
throw IndexOutOfBoundsException if beginIndex is less than the start index of ci, or limit is greater than the end index of ci, or beginIndex is greater than limit.
throw IndexOutOfBoundsException if beginIndex < start.
throw IndexOutOfBoundsException if beginIndex is less than the start index of ci, or limit is greater than the end index of ci, or beginIndex is greater than limit.
throw IndexOutOfBoundsException if limit > end.
throw IndexOutOfBoundsException if beginIndex is less than the start index of ci, or limit is greater than the end index of ci, or beginIndex is greater than limit.
throw IndexOutOfBoundsException if beginIndex > limit.
throw IndexOutOfBoundsException if beginIndex is less than the start index of ci, or limit is greater than the end index of ci, or beginIndex is greater than limit.
throw IllegalArgumentException if !Character dot isValidCodePoint(codePoint).
throw IllegalArgumentException if the code point is not a valid Unicode code point.
throw NullPointerException if chars == null.
throw NullPointerException if chars is null.
throw ArrayIndexOutOfBoundsException if start < 0 || end > chars dot length.
throw ArrayIndexOutOfBoundsException if start is negative or end is greater than the length of the chars array.
throw IOException if !acquired.
throw IOException if the fontFile cannot be read.
throw IOException if !acquired.
throw IOException if the fontFile cannot be read.
throw NullPointerException if (color1 == null) || (color2 == null).
throw NullPointerException if either one of colors or points is null.
throw NullPointerException if (color1 == null) || (color2 == null) || (pt1 == null)|| (pt2 == null).
throw NullPointerException if either one of colors or points is null.
throw IllegalArgumentException if name == null || name dot trim() dot isEmpty().
throw IllegalArgumentException if name or description are null or empty string, or returnOpenType is null, or impact is not one of ACTION, ACTION_INFO, INFO, or UNKNOWN.
throw IllegalArgumentException if description == null || description dot trim() dot isEmpty().
throw IllegalArgumentException if name or description are null or empty string, or returnOpenType is null, or impact is not one of ACTION, ACTION_INFO, INFO, or UNKNOWN.
throw IllegalArgumentException if returnOpenType == null.
throw IllegalArgumentException if name or description are null or empty string, or returnOpenType is null, or impact is not one of ACTION, ACTION_INFO, INFO, or UNKNOWN.
throw IllegalArgumentException if impact != ACTION && impact != ACTION_INFO && impact != INFO && impact != UNKNOWN.
throw IllegalArgumentException if name or description are null or empty string, or returnOpenType is null, or impact is not one of ACTION, ACTION_INFO, INFO, or UNKNOWN.
throw UnsupportedOperationException if options dot length > 0.
throw UnsupportedOperationException if an unsupported option is specified.
throw IllegalArgumentException if len == 0.
throw IllegalArgumentException if options contains an invalid combination of options.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if pos < 0.
throw IllegalArgumentException if the value of pos < 0, or if the value of pos is greater than the number of items.
throw IllegalArgumentException if pos > getComponentCount() - 1.
throw IllegalArgumentException if the value of pos < 0, or if the value of pos is greater than the number of items.
throw NullPointerException if certPath == null.
throw NullPointerException if the certPath, trustAnchor or subjectPublicKey parameters are null.
throw IOException if val dot tag != DerValue dot tag_Sequence.
throw IOException if thrown if the byte array does not represent a valid and parsable policy qualifier.
throw IllegalArgumentException if behavior != COMMIT && behavior != COMMIT_OR_REVERT && behavior != PERSIST && behavior != REVERT.
throw IllegalArgumentException if behavior is not one of the known values.
throw TypeNotPresentException if result instanceof ExceptionProxy.
throw TypeNotPresentException if the annotation is of type Class and no definition can be found for the default class value.
throw SignatureException if sig dot verify(getSignature()) == false.
throw SignatureException if on signature errors.
throw IllegalArgumentException if parties <= 0.
throw IllegalArgumentException if parties is less than 1.
throw InvalidDnDOperationException if peer == null.
throw InvalidDnDOperationException if a drag is not outstanding/extant.
throw IllegalArgumentException if tagSet == null.
throw IllegalArgumentException if tagSet is null.
throw IllegalArgumentException if tagSet == null.
throw IllegalArgumentException if tagSet is null.
throw UnsupportedTemporalTypeException if unitDur dot getSeconds() > SECONDS_PER_DAY.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if (NANOS_PER_DAY % dur) != 0.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw DateTimeException if time == null.
throw DateTimeException if unable to convert to a LocalTime.
throw InvalidMarkException if m < 0.
throw InvalidMarkException if If the mark has not been set.
throw NullPointerException if name == null.
throw NullPointerException if the property name is null.
throw RasterFormatException if (raster instanceof IntegerComponentRaster) && (numBands == 3 || numBands == 4).
throw RasterFormatException if the number and types of bands in the SampleModel of the Raster do not match the number and types required by the ColorModel to represent its color and alpha components.
throw IllegalArgumentException if cm dot hasAlpha() && cm dot isAlphaPremultiplied().
throw IllegalArgumentException if raster is incompatible with cm.
throw IllegalArgumentException if mapSize <= 2.
throw IllegalArgumentException if raster is incompatible with cm.
throw IllegalArgumentException if !cm dot isCompatibleRaster(raster).
throw IllegalArgumentException if raster is incompatible with cm.
throw IllegalArgumentException if !cm dot isCompatibleRaster(raster).
throw IllegalArgumentException if raster is incompatible with cm.
throw IllegalArgumentException if (raster dot minX != 0) || (raster dot minY != 0).
throw IllegalArgumentException if raster is incompatible with cm.
throw IllegalArgumentException if objectName == null || roleName == null.
throw IllegalArgumentException if null parameter.
throw IllegalArgumentException if relationServiceMBeanServer == null.
throw IllegalArgumentException if any of the required parameters (relation id, relation service ObjectName, relation service MBeanServer, or relation type name) is null.
throw IllegalArgumentException if roleName == null.
throw IllegalArgumentException if null role name.
throw IllegalArgumentException if roleName == null.
throw IllegalArgumentException if null role name.
throw IllegalArgumentException if role == null.
throw IllegalArgumentException if null role.
throw IllegalArgumentException if list == null.
throw IllegalArgumentException if null role list.
throw IllegalArgumentException if roleNameArray == null.
throw IllegalArgumentException if null role name.
throw SecurityException if configuration == null.
throw SecurityException if the caller does not have permission to retrieve the Configuration.
throw SecurityException if configuration == null.
throw SecurityException if the caller does not have permission to retrieve the Configuration.
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if the specified Provider is null, or if the specified parameters are not understood by the ConfigurationSpi implementation from the specified Provider.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if the specified Provider is null, or if the specified parameters are not understood by the ConfigurationSpi implementation from the specified Provider.
throw IIOException if imageType == null.
throw IIOException if the ImageTypeSpecifier specified by param does not match any of the legal ones from imageTypes.
throw IllegalArgumentException if imageTypes == null || !imageTypes dot hasNext().
throw IllegalArgumentException if imageTypes is null or empty, or if an object not of type ImageTypeSpecifier is retrieved from it.
throw IllegalArgumentException if (long)width * height > Integer dot MAX_VALUE.
throw IllegalArgumentException if imageTypes is null or empty, or if an object not of type ImageTypeSpecifier is retrieved from it.
throw IllegalArgumentException if imageType == null.
throw IllegalArgumentException if imageTypes is null or empty, or if an object not of type ImageTypeSpecifier is retrieved from it.
throw IllegalArgumentException if imageTypes == null || !imageTypes dot hasNext().
throw IllegalArgumentException if the resulting image would have a width or height less than 1.
throw IllegalArgumentException if (long)width * height > Integer dot MAX_VALUE.
throw IllegalArgumentException if the resulting image would have a width or height less than 1.
throw IllegalArgumentException if imageType == null.
throw IllegalArgumentException if the resulting image would have a width or height less than 1.
throw IllegalArgumentException if imageTypes == null || !imageTypes dot hasNext().
throw IllegalArgumentException if the product of width and height is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if (long)width * height > Integer dot MAX_VALUE.
throw IllegalArgumentException if the product of width and height is greater than Integer dot MAX_VALUE.
throw IllegalArgumentException if imageType == null.
throw IllegalArgumentException if the product of width and height is greater than Integer dot MAX_VALUE.
throw UnsupportedOperationException if !canReadRaster().
throw UnsupportedOperationException if this plug-in does not support reading raw Rasters.
throw IllegalArgumentException if (tileX != 0) || (tileY != 0).
throw IllegalArgumentException if the tile indices are out of bounds.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if baseName is null.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if baseName is null.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if baseName is null.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if keyword is null.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if keyword is null.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if keyword is null.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if no appropriate ResourceBundle may be located.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if no appropriate ResourceBundle may be located.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if no appropriate ResourceBundle may be located.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if the named resource is not found in the located ResourceBundle.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if the named resource is not found in the located ResourceBundle.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if the named resource is not found in the located ResourceBundle.
throw IllegalArgumentException if warning == null.
throw IllegalArgumentException if the object retrieved from the ResourceBundle is not a String.
throw IllegalArgumentException if baseName == null.
throw IllegalArgumentException if the object retrieved from the ResourceBundle is not a String.
throw IllegalArgumentException if keyword == null.
throw IllegalArgumentException if the object retrieved from the ResourceBundle is not a String.
throw IllegalArgumentException if paramSrcBandLength != paramDstBandLength.
throw IllegalArgumentException if param contains an invalid specification of a source and/or destination band subset.
throw IllegalArgumentException if srcBands != null.
throw IllegalArgumentException if param contains an invalid specification of a source and/or destination band subset.
throw IllegalArgumentException if dstBands != null.
throw IllegalArgumentException if param contains an invalid specification of a source and/or destination band subset.
throw IllegalArgumentException if srcRegion == null.
throw IllegalArgumentException if srcRegion is null.
throw IllegalArgumentException if destRegion == null.
throw IllegalArgumentException if srcRegion is null.
throw IllegalArgumentException if image != null.
throw IllegalArgumentException if srcRegion is null.
throw IllegalArgumentException if srcRegion dot isEmpty() || destRegion dot isEmpty().
throw IllegalArgumentException if srcRegion is null.
throw IllegalArgumentException if srcRegion == null.
throw IllegalArgumentException if dstRegion is null.
throw IllegalArgumentException if destRegion == null.
throw IllegalArgumentException if dstRegion is null.
throw IllegalArgumentException if image != null.
throw IllegalArgumentException if dstRegion is null.
throw IllegalArgumentException if srcRegion dot isEmpty() || destRegion dot isEmpty().
throw IllegalArgumentException if dstRegion is null.
throw IllegalArgumentException if srcRegion == null.
throw IllegalArgumentException if the resulting source or destination region is empty.
throw IllegalArgumentException if destRegion == null.
throw IllegalArgumentException if the resulting source or destination region is empty.
throw IllegalArgumentException if image != null.
throw IllegalArgumentException if the resulting source or destination region is empty.
throw IllegalArgumentException if srcRegion dot isEmpty() || destRegion dot isEmpty().
throw IllegalArgumentException if the resulting source or destination region is empty.
throw IllegalArgumentException if locale != null.
throw IllegalArgumentException if locale is non-null but is not one of the values returned by getAvailableLocales.
throw IllegalArgumentException if params != null && params dot hasNext().
throw IllegalArgumentException if any non-null element of params is not an ImageReadParam.
throw IllegalArgumentException if params != null && params dot hasNext().
throw IllegalArgumentException if the set of source and destination bands specified by param dot getSourceBands and param dot getDestinationBands differ in length or include indices that are out of bounds.
throw IllegalArgumentException if params != null && params dot hasNext().
throw IllegalArgumentException if a resulting image would have a width or height less than 1.
throw IllegalArgumentException if (tileX != 0) || (tileY != 0).
throw IllegalArgumentException if the tile indices are out of bounds.
throw IllegalArgumentException if input != null.
throw IllegalArgumentException if input is not an instance of one of the classes returned by the originating service provider's getInputTypes method, or is not an ImageInputStream.
throw IllegalArgumentException if aContainer == null || aComponent == null.
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalArgumentException if aContainer == null.
throw IllegalArgumentException if aContainer is null.
throw IllegalArgumentException if aContainer == null.
throw IllegalArgumentException if aContainer is null.
throw IllegalArgumentException if aContainer == null || aComponent == null.
throw IllegalArgumentException if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null.
throw IllegalMonitorStateException if state != stamp || (stamp & WBIT) == 0L.
throw IllegalMonitorStateException if the stamp does not match the current state of this lock.
throw NullPointerException if center == null.
throw NullPointerException if gradientBounds is null, or fractions array is null, or colors array is null, or cycleMethod is null.
throw NullPointerException if focus == null.
throw NullPointerException if gradientBounds is null, or fractions array is null, or colors array is null, or cycleMethod is null.
throw IllegalArgumentException if radius <= 0.
throw IllegalArgumentException if gradientBounds is empty, or fractions dot length != colors dot length, or colors is less than 2 in size, or a fractions value is less than 0 dot 0 or greater than 1 dot 0, or the fractions are not provided in strictly increasing order.
throw IllegalArgumentException if gradientBounds dot isEmpty().
throw IllegalArgumentException if gradientBounds is empty, or fractions dot length != colors dot length, or colors is less than 2 in size, or a fractions value is less than 0 dot 0 or greater than 1 dot 0, or the fractions are not provided in strictly increasing order.
throw IllegalArgumentException if n < 0.
throw IllegalArgumentException if n < 0.
throw IndexOutOfBoundsException if srcSize > dest dot size().
throw IndexOutOfBoundsException if the destination list is too small to contain the entire source List.
throw ClassNotFoundException if res != null.
throw ClassNotFoundException if the class could not be found, or if the loader is closed.
throw ClassNotFoundException if result == null.
throw ClassNotFoundException if the class could not be found, or if the loader is closed.
throw NullPointerException if collection == null.
throw NullPointerException if collection is null.
throw IllegalArgumentException if operation != DO_NOTHING_ON_CLOSE && operation != HIDE_ON_CLOSE && operation != DISPOSE_ON_CLOSE && operation != EXIT_ON_CLOSE.
throw IllegalArgumentException if defaultCloseOperation value isn't one of the above valid values.
throw NullPointerException if getComponentCount() == 0.
throw NullPointerException if the scrollpane does not contain a child.
throw NullPointerException if getComponentCount() == 0.
throw NullPointerException if p is null.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if the value of index is less than zero.
throw IllegalArgumentException if index < 0.
throw IllegalArgumentException if the value of index is less than 0.
throw NullPointerException if s == null.
throw NullPointerException if s or params is null.
throw NullPointerException if params == null.
throw NullPointerException if s or params is null.
throw ProtocolException if connected.
throw ProtocolException if the method cannot be reset or if the requested method isn't valid for HTTP.
throw IllegalStateException if connected.
throw IllegalStateException if URLConnection is already connected or if a different streaming mode is already enabled.
throw IllegalStateException if fixedContentLength != -1 || fixedContentLengthLong != -1.
throw IllegalStateException if URLConnection is already connected or if a different streaming mode is already enabled.
throw IllegalStateException if connected.
throw IllegalStateException if URLConnection is already connected or if a different streaming mode is already enabled.
throw IllegalStateException if chunkLength != -1.
throw IllegalStateException if URLConnection is already connected or if a different streaming mode is already enabled.
throw IllegalStateException if connected.
throw IllegalStateException if URLConnection is already connected or if a different streaming mode is already enabled.
throw IllegalStateException if chunkLength != -1.
throw IllegalStateException if URLConnection is already connected or if a different streaming mode is already enabled.
throw IllegalArgumentException if contentLength < 0.
throw IllegalArgumentException if a content length less than zero is specified.
throw IllegalArgumentException if contentLength < 0.
throw IllegalArgumentException if a content length less than zero is specified.
throw IllegalArgumentException if prefix == null.
throw IllegalArgumentException if prefix is null or startingRow is out of bounds.
throw IllegalArgumentException if startingRow < 0 || startingRow >= max.
throw IllegalArgumentException if prefix is null or startingRow is out of bounds.
throw NullPointerException if name == null.
throw NullPointerException if the name is null.
throw NullPointerException if pSrcName == null.
throw NullPointerException if pSrcName is null.
throw IndexOutOfBoundsException if pos < flushedPos.
throw IndexOutOfBoundsException if pos is smaller than the flushed position.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if (cacheDir != null) && !(cacheDir dot isDirectory()).
throw IllegalArgumentException if stream is null.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if cacheDir is non-null but is not a directory.
throw IllegalArgumentException if (cacheDir != null) && !(cacheDir dot isDirectory()).
throw IllegalArgumentException if cacheDir is non-null but is not a directory.
throw InvalidMidiDataException if dataLength != 0.
throw InvalidMidiDataException if the status byte or all data bytes belonging to the message, do not specify a valid MIDI message.
throw InvalidMidiDataException if dataLength > 0.
throw InvalidMidiDataException if the status byte or all data bytes belonging to the message, do not specify a valid MIDI message.
throw InvalidMidiDataException if dataLength > 0.
throw InvalidMidiDataException if the status byte or all data bytes belonging to the message, do not specify a valid MIDI message.
throw InvalidMidiDataException if command >= 0xF0 || command < 0x80.
throw InvalidMidiDataException if the status byte or all data bytes belonging to the message, do not specify a valid MIDI message.
throw InvalidMidiDataException if (channel & 0xFFFFFFF0) != 0.
throw InvalidMidiDataException if the status byte or all data bytes belonging to the message, do not specify a valid MIDI message.
throw IllegalArgumentException if rmiServer == null && address == null.
throw IllegalArgumentException if rmiServer is null.
throw IOException if terminated.
throw IOException if the connection could not be made because of a communication problem.
throw NullPointerException if decryptKey == null.
throw NullPointerException if decryptKey or provider is null.
throw NullPointerException if decryptKey == null.
throw NullPointerException if decryptKey or provider is null.
throw NullPointerException if providerName == null.
throw NullPointerException if decryptKey or provider is null.
throw NullPointerException if decryptKey == null.
throw NullPointerException if decryptKey or provider is null.
throw NullPointerException if provider == null.
throw NullPointerException if decryptKey or provider is null.
throw NullPointerException if encoded == null.
throw NullPointerException if algParams or encryptedData is null.
throw NullPointerException if algName == null.
throw NullPointerException if algParams or encryptedData is null.
throw NullPointerException if encryptedData == null.
throw NullPointerException if algParams or encryptedData is null.
throw NullPointerException if algParams == null.
throw NullPointerException if algParams or encryptedData is null.
throw NullPointerException if encryptedData == null.
throw NullPointerException if algParams or encryptedData is null.
throw IllegalArgumentException if encryptedData == null.
throw IllegalArgumentException if encryptedData is empty, i dot e dot  0-length.
throw IllegalArgumentException if encryptedData == null.
throw IllegalArgumentException if encryptedData is empty, i dot e dot  0-length.
throw NullPointerException if context == null.
throw NullPointerException if no SSLContext supplied.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if size <= 0.
throw IllegalArgumentException if resolutionVariants == null || resolutionVariants dot length == 0.
throw IllegalArgumentException if null or zero-length array is passed.
throw IndexOutOfBoundsException if baseImageIndex < 0 || baseImageIndex >= resolutionVariants dot length.
throw IndexOutOfBoundsException if baseImageIndex is negative or greater than or equal to resolutionVariants length.
throw BadLocationException if where + len > count.
throw BadLocationException if the specified position is invalid.
throw BadLocationException if where >= count || where < 0.
throw BadLocationException if the specified position is invalid.
throw BadLocationException if where + len > count.
throw BadLocationException if the specified position is invalid.
throw BadLocationException if where + nitems >= count.
throw BadLocationException if the specified position is invalid.
throw IllegalArgumentException if selectionModel == null.
throw IllegalArgumentException if selectionModel is null.
throw IllegalArgumentException if prefix == null.
throw IllegalArgumentException if prefix is null or startIndex is out of bounds.
throw IllegalArgumentException if startIndex < 0 || startIndex >= max.
throw IllegalArgumentException if prefix is null or startIndex is out of bounds.
throw IllegalArgumentException if model == null.
throw IllegalArgumentException if model is null.
throw IllegalArgumentException if dataModel == null.
throw IllegalArgumentException if the model is null.
throw HeadlessException if b && GraphicsEnvironment dot isHeadless().
throw HeadlessException if b is true and GraphicsEnvironment dot isHeadless() returns true.
throw ConcurrentModificationException if mc != modCount.
throw ConcurrentModificationException if it is detected that the mapping function modified this map.
throw NullPointerException if value == null.
throw NullPointerException if the key or value is null.
throw ConcurrentModificationException if e dot hash == hash && Objects dot equals(e dot key,key).
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw ConcurrentModificationException if mc != modCount.
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw NullPointerException if value == null.
throw NullPointerException if the value is null.
throw ConcurrentModificationException if e dot hash == hash && e dot key dot equals(key).
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw ConcurrentModificationException if e dot hash == hash && e dot key dot equals(key).
throw ConcurrentModificationException if it is detected that the remapping function modified this map.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw TooManyListenersException if dtListener == null.
throw TooManyListenersException if a DropTargetListener is already added to this DropTarget.
throw CloneNotSupportedException if this instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw CloneNotSupportedException if digestSpi instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if the specified provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if the specified provider is null.
throw NullPointerException if localParent == null.
throw NullPointerException if the parent is null.
throw IllegalArgumentException if !(localParent instanceof Component).
throw IllegalArgumentException if this PopupMenu has a non-Component parent.
throw IllegalArgumentException if compParent != origin.
throw IllegalArgumentException if this PopupMenu has a non-Component parent.
throw IllegalArgumentException if compParent != origin.
throw IllegalArgumentException if this PopupMenu has a non-Component parent.
throw IllegalArgumentException if !(localParent instanceof Component).
throw IllegalArgumentException if the origin is not in the parent's hierarchy.
throw IllegalArgumentException if compParent != origin.
throw IllegalArgumentException if the origin is not in the parent's hierarchy.
throw IllegalArgumentException if compParent != origin.
throw IllegalArgumentException if the origin is not in the parent's hierarchy.
throw RuntimeException if compParent dot peer == null || !compParent dot isShowing().
throw RuntimeException if the parent is not showing on screen.
throw RasterFormatException if bands dot length > bankIndices dot length.
throw RasterFormatException if the number of bands is greater than the number of banks in this sample model.
throw IllegalArgumentException if direction != SOUTH && direction != NORTH && direction != EAST && direction != WEST.
throw IllegalArgumentException if direction is not one of NORTH, SOUTH, EAST or WEST.
throw IllegalStateException if object_factory_builder != null.
throw IllegalStateException if If a factory has already been installed.
throw IllegalStateException if initctx_factory_builder != null.
throw IllegalStateException if If a builder was previous installed.
throw NullPointerException if MetalLookAndFeel dot usingOcean().
throw NullPointerException if any of the arguments are null.
throw NullPointerException if MetalLookAndFeel dot usingOcean().
throw NullPointerException if any of the arguments are null.
throw IllegalArgumentException if defaultPolicy == null.
throw IllegalArgumentException if defaultPolicy is null.
throw IllegalArgumentException if id < 0 || id >= TRAVERSAL_KEY_LENGTH.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes is null, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another default focus traversal operation.
throw IllegalArgumentException if keystrokes == null.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes is null, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another default focus traversal operation.
throw IllegalArgumentException if keystroke == null.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes is null, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another default focus traversal operation.
throw IllegalArgumentException if keystroke dot getKeyChar() != KeyEvent dot CHAR_UNDEFINED.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes is null, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another default focus traversal operation.
throw IllegalArgumentException if defaultFocusTraversalKeys[i] dot contains(keystroke).
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes is null, or if keystrokes contains null, or if any keystroke represents a KEY_TYPED event, or if any keystroke already maps to another default focus traversal operation.
throw IllegalArgumentException if id < 0 || id >= TRAVERSAL_KEY_LENGTH.
throw IllegalArgumentException if id is not one of KeyboardFocusManager dot FORWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot BACKWARD_TRAVERSAL_KEYS, KeyboardFocusManager dot UP_CYCLE_TRAVERSAL_KEYS, or KeyboardFocusManager dot DOWN_CYCLE_TRAVERSAL_KEYS.
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if the specified Provider is null, or if the specified parameters are not understood by the PolicySpi implementation from the specified Provider.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if the specified Provider is null, or if the specified parameters are not understood by the PolicySpi implementation from the specified Provider.
throw IllegalArgumentException if (offset < 0) || (offset > buf dot length) || (length < 0)|| ((offset + length) < 0).
throw IllegalArgumentException if If offset is negative or greater than buf dot length, or if length is negative, or if the sum of these two values is negative.
throw IndexOutOfBoundsException if (off < 0) || (off > b dot length) || (len < 0)|| ((off + len) > b dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or len is negative, or len is greater than cbuf dot length - off.
throw ArrayIndexOutOfBoundsException if index < 0 || index > getSize().
throw ArrayIndexOutOfBoundsException if index does not fall within the range of number of elements currently held.
throw IllegalArgumentException if fromIndex > toIndex.
throw IllegalArgumentException if fromIndex &gt; toIndex.
throw IllegalBlockingModeException if isBlocking().
throw IllegalBlockingModeException if If this channel is in blocking mode.
throw IllegalArgumentException if (ops & ~validOps()) != 0.
throw IllegalArgumentException if If a bit in the ops set does not correspond to an operation that is supported by this channel, that is, if set & ~validOps() != 0.
throw ClosedChannelException if !isOpen().
throw ClosedChannelException if If this channel is closed.
throw ClosedChannelException if !isOpen().
throw ClosedChannelException if If this channel is closed.
throw ClosedChannelException if !isOpen().
throw ClosedChannelException if If this channel is closed.
throw NullPointerException if m == null.
throw NullPointerException if m is null.
throw NullPointerException if toMerge == null.
throw NullPointerException if toMerge map is null or if some key in the map is null.
throw UnsupportedEncodingException if encoding != null.
throw UnsupportedEncodingException if the named encoding is not supported.
throw UnsupportedEncodingException if encoding != null.
throw UnsupportedEncodingException if the named encoding is not supported.
throw IllegalArgumentException if xmlEventReader == null.
throw IllegalArgumentException if If xmlStreamReader == null.
throw IllegalArgumentException if xmlStreamReader == null.
throw IllegalArgumentException if If xmlStreamReader == null.
throw IllegalStateException if eventType != XMLStreamConstants dot START_DOCUMENT && eventType != XMLStreamConstants dot START_ELEMENT.
throw IllegalStateException if If xmlStreamReader is not in XMLStreamConstants dot START_DOCUMENT or XMLStreamConstants dot START_ELEMENT state.
throw IllegalStateException if eventType != XMLStreamConstants dot START_DOCUMENT && eventType != XMLStreamConstants dot START_ELEMENT.
throw IllegalStateException if If xmlStreamReader is not in XMLStreamConstants dot START_DOCUMENT or XMLStreamConstants dot START_ELEMENT state.
throw IllegalArgumentException if !(state == RAW_TEXT || state == CONVERTED_TEXT).
throw IllegalArgumentException if a state other than RAW_TEXT or CONVERTED_TEXT is given.
throw NullPointerException if iterators == null.
throw NullPointerException if text is null.
throw NullPointerException if text == null.
throw NullPointerException if text is null.
throw NullPointerException if text == null || attributes == null.
throw NullPointerException if text is null.
throw NullPointerException if text == null.
throw NullPointerException if text is null.
throw IllegalArgumentException if text dot isEmpty().
throw IllegalArgumentException if the subrange given by beginIndex and endIndex is out of the text range.
throw IllegalArgumentException if beginIndex < textBeginIndex || endIndex > textEndIndex || beginIndex > endIndex.
throw IllegalArgumentException if the subrange given by beginIndex and endIndex is out of the text range.
throw NullPointerException if attribute == null.
throw NullPointerException if attribute is null.
throw NullPointerException if attribute == null.
throw NullPointerException if attribute is null.
throw IllegalArgumentException if len == 0.
throw IllegalArgumentException if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string.
throw IllegalArgumentException if beginIndex < 0 || endIndex > length() || beginIndex >= endIndex.
throw IllegalArgumentException if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string.
throw NullPointerException if attributes == null.
throw NullPointerException if attributes is null.
throw IllegalArgumentException if beginIndex < 0 || endIndex > length() || beginIndex > endIndex.
throw IllegalArgumentException if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string and the attributes parameter is not an empty Map.
throw IllegalArgumentException if beginIndex == endIndex.
throw IllegalArgumentException if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string and the attributes parameter is not an empty Map.
throw IllegalArgumentException if position < 0.
throw IllegalArgumentException if position is less than zero.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if attr == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if attrName is null or is not a legal attribute name for this element.
throw IllegalArgumentException if attr == null.
throw IllegalArgumentException if attrName is null or is not a legal attribute name for this element.
throw IllegalArgumentException if enumeratedValues == null.
throw IllegalArgumentException if elementName is not a legal element name for this format.
throw IllegalArgumentException if enumeratedValues dot size() == 0.
throw IllegalArgumentException if elementName is not a legal element name for this format.
throw IllegalArgumentException if o == null.
throw IllegalArgumentException if elementName is not a legal element name for this format.
throw IllegalArgumentException if !classType dot isInstance(o).
throw IllegalArgumentException if elementName is not a legal element name for this format.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if enumeratedValues == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if enumeratedValues dot size() == 0.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if o == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if !(o instanceof String).
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if listMinLength < 0 || listMinLength > listMaxLength.
throw IllegalArgumentException if elementName is null, or is not a legal element name for this format.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if enumeratedValues == null.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if enumeratedValues dot size() == 0.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if o == null.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if !(o instanceof String).
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if listMinLength < 0 || listMinLength > listMaxLength.
throw IllegalArgumentException if attrName is null.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if enumeratedValues == null.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if enumeratedValues dot size() == 0.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if o == null.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if !(o instanceof String).
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if listMinLength < 0 || listMinLength > listMaxLength.
throw IllegalArgumentException if dataType is not one of the predefined constants.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if enumeratedValues == null.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if enumeratedValues dot size() == 0.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if o == null.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if !(o instanceof String).
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if attrName == null.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if dataType < DATATYPE_STRING || dataType > DATATYPE_DOUBLE.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if listMinLength < 0 || listMinLength > listMaxLength.
throw IllegalArgumentException if listMinLength is negative or larger than listMaxLength.
throw IllegalArgumentException if rootName == null.
throw IllegalArgumentException if rootName is null.
throw IllegalArgumentException if childPolicy < CHILD_POLICY_EMPTY || childPolicy > CHILD_POLICY_MAX || childPolicy == CHILD_POLICY_REPEAT.
throw IllegalArgumentException if rootName is null.
throw IllegalArgumentException if rootName == null.
throw IllegalArgumentException if rootName is null.
throw IllegalArgumentException if minChildren < 0.
throw IllegalArgumentException if rootName is null.
throw IllegalArgumentException if minChildren > maxChildren.
throw IllegalArgumentException if rootName is null.
throw IllegalArgumentException if rootName == null.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if childPolicy < CHILD_POLICY_EMPTY || childPolicy > CHILD_POLICY_MAX || childPolicy == CHILD_POLICY_REPEAT.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if rootName == null.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if minChildren < 0.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if minChildren > maxChildren.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if resourceBaseName == null.
throw IllegalArgumentException if resourceBaseName is null.
throw IllegalArgumentException if childPolicy < CHILD_POLICY_EMPTY || childPolicy > CHILD_POLICY_MAX || childPolicy == CHILD_POLICY_REPEAT.
throw IllegalArgumentException if parentName is null, or is not a legal element name for this format.
throw IllegalArgumentException if minChildren < 0.
throw IllegalArgumentException if parentName is null, or is not a legal element name for this format.
throw IllegalArgumentException if minChildren > maxChildren.
throw IllegalArgumentException if parentName is null, or is not a legal element name for this format.
throw IllegalArgumentException if childPolicy < CHILD_POLICY_EMPTY || childPolicy > CHILD_POLICY_MAX || childPolicy == CHILD_POLICY_REPEAT.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if minChildren < 0.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if minChildren > maxChildren.
throw IllegalArgumentException if minChildren is negative or larger than maxChildren.
throw IllegalArgumentException if max < 1.
throw IllegalArgumentException if max < 1.
throw IllegalArgumentException if modelWrapper == null.
throw IllegalArgumentException if modelWrapper is null.
throw IndexOutOfBoundsException if firstRow >= modelRowCount || endRow >= modelRowCount.
throw IndexOutOfBoundsException if either argument is outside the range of the underlying model after the change, firstRow > endRow, or column is outside the range of the underlying model.
throw IllegalArgumentException if sortKeys != null && sortKeys dot size() > 0.
throw IllegalArgumentException if any of the values in sortKeys are null or have a column index outside the range of the model.
throw IndexOutOfBoundsException if firstRow >= modelRowCount || endRow >= modelRowCount.
throw IndexOutOfBoundsException if either argument is outside the range of the model before the change, or firstRow > endRow.
throw IndexOutOfBoundsException if endRow >= newModelRowCount.
throw IndexOutOfBoundsException if either argument is invalid, or firstRow > endRow.
throw UnsupportedTemporalTypeException if field == ERA.
throw UnsupportedTemporalTypeException if the field is not supported.
throw IllegalArgumentException if n == 0.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if myMembers[i][0] < 1.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if member < 1.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than 1.
throw SerialException if offset < 0 || offset > str dot length().
throw SerialException if there is an error accessing the CLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialClob length; or the combined values of the length and offset is greater than the Clob buffer; if the free method had been previously called on this object.
throw SerialException if pos < 1 || pos > this dot length().
throw SerialException if there is an error accessing the CLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialClob length; or the combined values of the length and offset is greater than the Clob buffer; if the free method had been previously called on this object.
throw SerialException if (long)(length) > origLen.
throw SerialException if there is an error accessing the CLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialClob length; or the combined values of the length and offset is greater than the Clob buffer; if the free method had been previously called on this object.
throw SerialException if (length + offset) > str dot length().
throw SerialException if there is an error accessing the CLOB value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the SerialClob length; or the combined values of the length and offset is greater than the Clob buffer; if the free method had been previously called on this object.
throw SerialException if this dot clob != null.
throw SerialException if the SerialClob is not instantiated with a Clob object; if the free method had been previously called on this object.
throw SerialException if this dot clob != null.
throw SerialException if SerialClob is not instantiated with a Clob object; if the free method had been previously called on this object.
throw SerialException if length > len.
throw SerialException if there is an error accessing the CLOB value; if the free method had been previously called on this object.
throw SerialException if pos < 1 || pos > this dot length().
throw SerialException if either of the arguments is out of bounds; if free had previously been called on this object.
throw SerialException if (pos - 1) + length > this dot length().
throw SerialException if either of the arguments is out of bounds; if free had previously been called on this object.
throw SQLException if clob == null.
throw SQLException if a SQL error occurs in capturing the CLOB; if the Clob object is a null; or if either of the Clob dot getCharacterStream() and Clob dot getAsciiStream() methods on the Clob returns a null.
throw SQLException if charStream == null.
throw SQLException if a SQL error occurs in capturing the CLOB; if the Clob object is a null; or if either of the Clob dot getCharacterStream() and Clob dot getAsciiStream() methods on the Clob returns a null.
throw SQLException if asciiStream == null.
throw SQLException if a SQL error occurs in capturing the CLOB; if the Clob object is a null; or if either of the Clob dot getCharacterStream() and Clob dot getAsciiStream() methods on the Clob returns a null.
throw SerialException if pos < 1 || pos > len.
throw SerialException if the free method had been previously called on this object.
throw SerialException if (pos - 1) + length > len.
throw SerialException if the free method had been previously called on this object.
throw SerialException if length <= 0.
throw SerialException if the free method had been previously called on this object.
throw SerialException if this dot clob != null.
throw SerialException if this SerialClob object was not instantiated with a Clob object; if free had previously been called on this object.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than zero.
throw IllegalArgumentException if lowerBound > upperBound.
throw IllegalArgumentException if a null range is specified or if a non-null range is specified with lowerBound less than zero.
throw KeyManagementException if publicKey != null.
throw KeyManagementException if the certificate is not valid, if the public key in the certificate being added conflicts with this identity's public key, or if another exception occurs.
throw IllegalArgumentException if crc < 0 || crc > 0xFFFFFFFFL.
throw IllegalArgumentException if the specified CRC-32 value is less than 0 or greater than 0xFFFFFFFF.
throw IllegalArgumentException if method != STORED && method != DEFLATED.
throw IllegalArgumentException if the specified compression method is invalid.
throw IllegalArgumentException if size < 0.
throw IllegalArgumentException if the specified size is less than 0, is greater than 0xFFFFFFFF when ZIP64 format is not supported, or is less than 0 when ZIP64 is supported.
throw IllegalArgumentException if rank <= 0 || currentDepth + rank > ConstantUtils dot MAX_ARRAY_TYPE_DESC_DIMENSIONS.
throw IllegalArgumentException if the rank is less than or equal to zero or if the rank of the resulting array type is greater than 255.
throw IllegalArgumentException if descriptor dot isEmpty().
throw IllegalArgumentException if the name string is not in the correct format.
throw IllegalArgumentException if depth > ConstantUtils dot MAX_ARRAY_TYPE_DESC_DIMENSIONS.
throw IllegalArgumentException if the name string is not in the correct format.
throw IllegalStateException if !isClassOrInterface().
throw IllegalStateException if this ClassDesc does not describe a class or interface type.
throw IllegalStateException if !isClassOrInterface().
throw IllegalStateException if this ClassDesc does not describe a class or interface type.
throw IllegalArgumentException if w < 0 || h < 0.
throw IllegalArgumentException if width or height is < 0.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw IllegalArgumentException if count < 0L.
throw IllegalArgumentException if the arguments are inconsistent.
throw NullPointerException if connectionId == null.
throw NullPointerException if connectionId is null.
throw NullPointerException if connectionId == null.
throw NullPointerException if connectionId is null.
throw NullPointerException if connectionId == null.
throw NullPointerException if connectionId is null.
throw IllegalStateException if !isActive().
throw IllegalStateException if the JMXConnectorServer is not started (see JMXConnectorServerMBean dot isActive()).
throw NullPointerException if mbs == null || name == null.
throw NullPointerException if mbs or name is null.
throw NullPointerException if start == null || end == null.
throw NullPointerException if one of the points is null, or fractions array is null, or colors array is null, or cycleMethod is null, or colorSpace is null, or gradientTransform is null.
throw IllegalArgumentException if start dot equals(end).
throw IllegalArgumentException if start and end points are the same points, or fractions dot length != colors dot length, or colors is less than 2 in size, or a fractions value is less than 0 dot 0 or greater than 1 dot 0, or the fractions are not provided in strictly increasing order.
throw IllegalArgumentException if resourceBase == null.
throw IllegalArgumentException if synthSet is null.
throw IllegalArgumentException if url == null.
throw IllegalArgumentException if synthSet is null.
throw IllegalArgumentException if dayOfMonthIndicator < -28 || dayOfMonthIndicator > 31 || dayOfMonthIndicator == 0.
throw IllegalArgumentException if the day of month indicator is invalid.
throw IllegalArgumentException if timeEndOfDay && time dot equals(LocalTime dot MIDNIGHT) == false.
throw IllegalArgumentException if the day of month indicator is invalid.
throw IllegalArgumentException if time dot getNano() != 0.
throw IllegalArgumentException if the day of month indicator is invalid.
throw IllegalArgumentException if dayOfMonthIndicator < -28 || dayOfMonthIndicator > 31 || dayOfMonthIndicator == 0.
throw IllegalArgumentException if the end of day flag is true when the time is not midnight.
throw IllegalArgumentException if timeEndOfDay && time dot equals(LocalTime dot MIDNIGHT) == false.
throw IllegalArgumentException if the end of day flag is true when the time is not midnight.
throw IllegalArgumentException if time dot getNano() != 0.
throw IllegalArgumentException if the end of day flag is true when the time is not midnight.
throw IllegalArgumentException if dayOfMonthIndicator < -28 || dayOfMonthIndicator > 31 || dayOfMonthIndicator == 0.
throw IllegalArgumentException if time dot getNano() returns non-zero value.
throw IllegalArgumentException if timeEndOfDay && time dot equals(LocalTime dot MIDNIGHT) == false.
throw IllegalArgumentException if time dot getNano() returns non-zero value.
throw IllegalArgumentException if time dot getNano() != 0.
throw IllegalArgumentException if time dot getNano() returns non-zero value.
throw ArithmeticException if n < 0.
throw ArithmeticException if n is negative.
throw ArithmeticException if m dot signum <= 0.
throw ArithmeticException if m ? 0.
throw ArithmeticException if mag dot length <= 2 && bitLength() <= 63.
throw ArithmeticException if the value of this will not exactly fit in a long.
throw ArithmeticException if n < 0.
throw ArithmeticException if n is negative.
throw ArithmeticException if this dot signum < 0.
throw ArithmeticException if this < 0 or this is too large.
throw ArithmeticException if n < 0.
throw ArithmeticException if n is negative.
throw ArithmeticException if this dot signum < 0.
throw ArithmeticException if this is negative dot  (The square root of a negative integer val is (i * sqrt(-val)) where i is the imaginary unit and is equal to sqrt(-1) dot ).
throw ArithmeticException if bitLength < 2.
throw ArithmeticException if bitLength < 2 or bitLength is too large.
throw ArithmeticException if exponent < 0.
throw ArithmeticException if exponent is negative dot  (This would cause the operation to yield a non-integer value dot ).
throw ArithmeticException if n < 0.
throw ArithmeticException if n is negative.
throw ArithmeticException if bitLength < 2.
throw ArithmeticException if bitLength < 2 or bitLength is too large.
throw ArithmeticException if m dot signum <= 0.
throw ArithmeticException if m ? 0 or the exponent is negative and this BigInteger is not relatively prime to m.
throw ArithmeticException if mag dot length <= 1 && bitLength() <= 31.
throw ArithmeticException if the value of this will not exactly fit in an int.
throw ArithmeticException if m dot signum != 1.
throw ArithmeticException if m ? 0, or this BigInteger has no multiplicative inverse mod m (that is, this BigInteger is not relatively prime to m).
throw IllegalArgumentException if method != DEFLATED && method != STORED.
throw IllegalArgumentException if the specified compression method is invalid.
throw ZipException if e dot size == -1.
throw ZipException if a ZIP format error has occurred.
throw ZipException if e dot size == -1 || e dot crc == -1.
throw ZipException if a ZIP format error has occurred.
throw ZipException if !names dot add(e dot name).
throw ZipException if a ZIP format error has occurred.
throw ZipException if current != null.
throw ZipException if a ZIP format error has occurred.
throw ZipException if current != null.
throw ZipException if a ZIP format error has occurred.
throw ZipException if current != null.
throw ZipException if a ZIP format error has occurred.
throw ZipException if current != null.
throw ZipException if a ZIP format error has occurred.
throw ZipException if current != null.
throw ZipException if a ZIP format error has occurred.
throw ZipException if current != null.
throw ZipException if a ZIP format error has occurred.
throw IllegalArgumentException if comment != null.
throw IllegalArgumentException if the length of the specified ZIP file comment is greater than 0xFFFF bytes.
throw ZipException if current == null.
throw ZipException if a ZIP file error has occurred.
throw ZipException if written - locoff > entry dot size.
throw ZipException if a ZIP file error has occurred.
throw ClassCastException if !Attributes dot class dot isInstance(attr).
throw ClassCastException if attr is not an Attributes.
throw IndexOutOfBoundsException if b == null.
throw IndexOutOfBoundsException if len > b dot length - off.
throw IllegalArgumentException if bufLen < 1.
throw IllegalArgumentException if bufLen <= 0.
throw NullPointerException if in == null.
throw NullPointerException if in or defl is null.
throw NullPointerException if defl == null.
throw NullPointerException if in or defl is null.
throw IllegalArgumentException if subprimeQLen != 160.
throw IllegalArgumentException if primePLenLen, subprimeQLen, or seedLen is illegal per the specification of FIPS 186-3.
throw IllegalArgumentException if subprimeQLen != 224 && subprimeQLen != 256.
throw IllegalArgumentException if primePLenLen, subprimeQLen, or seedLen is illegal per the specification of FIPS 186-3.
throw IllegalArgumentException if subprimeQLen != 256.
throw IllegalArgumentException if primePLenLen, subprimeQLen, or seedLen is illegal per the specification of FIPS 186-3.
throw IllegalArgumentException if seedLen < subprimeQLen.
throw IllegalArgumentException if primePLenLen, subprimeQLen, or seedLen is illegal per the specification of FIPS 186-3.
throw NullPointerException if f == null.
throw NullPointerException if f is null.
throw NullPointerException if tagSet == null.
throw NullPointerException if tagSet is null.
throw NullPointerException if tagSet == null.
throw NullPointerException if tagSet is null.
throw NullPointerException if tiffImageMetadata == null.
throw NullPointerException if tiffImageMetadata is null.
throw IllegalArgumentException if tiffImageMetadata instanceof TIFFImageMetadata.
throw IllegalArgumentException if tiffImageMetadata does not support a compatible image metadata format.
throw NullPointerException if tagSets == null.
throw NullPointerException if tagSets is null.
throw IllegalArgumentException if initialSize < 0.
throw IllegalArgumentException if If initialSize is negative.
throw IndexOutOfBoundsException if (off < 0) || (off > cbuf dot length) || (len < 0)|| ((off + len) > cbuf dot length)|| ((off + len) < 0).
throw IndexOutOfBoundsException if If off is negative, or len is negative, or off + len is negative or greater than the length of the given string.
throw IllegalArgumentException if provider == null || provider dot isEmpty().
throw IllegalArgumentException if the specified provider is null.
throw IllegalArgumentException if provider == null.
throw IllegalArgumentException if the specified provider is null.
throw IllegalArgumentException if type < TYPE_BYTE || type > TYPE_DOUBLE.
throw IllegalArgumentException if type is less than zero or greater than TYPE_DOUBLE.
throw ArrayIndexOutOfBoundsException if numBanks != offsets dot length.
throw ArrayIndexOutOfBoundsException if numBanks does not equal the length of offsets.
throw IllegalArgumentException if newAction == null.
throw IllegalArgumentException if If the precondition on the parameter does not hold.
throw IllegalArgumentException if newAction == null.
throw IllegalArgumentException if If the precondition on the parameter does not hold.
throw IllegalArgumentException if !(averageBytesPerChar > 0 dot 0f).
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if !(maxBytesPerChar > 0 dot 0f).
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if averageBytesPerChar > maxBytesPerChar.
throw IllegalArgumentException if If the preconditions on the parameters do not hold.
throw IllegalArgumentException if newReplacement == null.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if len == 0.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if len > maxBytesPerChar.
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if !isLegalReplacement(newReplacement).
throw IllegalArgumentException if If the preconditions on the parameter do not hold.
throw IllegalArgumentException if estimateDepth <= 0.
throw IllegalArgumentException if estimateDepth <= 0.
throw UnsupportedOperationException if !retainClassRef.
throw UnsupportedOperationException if this StackWalker is not configured with Option dot RETAIN_CLASS_REFERENCE.
throw IllegalArgumentException if !inRange(fromKey,fromInclusive).
throw IllegalArgumentException if fromKey is greater than toKey; or if this map itself has a restricted range, and fromKey or toKey lies outside the bounds of the range.
throw IllegalArgumentException if !inRange(toKey,toInclusive).
throw IllegalArgumentException if fromKey is greater than toKey; or if this map itself has a restricted range, and fromKey or toKey lies outside the bounds of the range.
throw IllegalArgumentException if !inRange(fromKey,fromInclusive).
throw IllegalArgumentException if fromKey is greater than toKey; or if this map itself has a restricted range, and fromKey or toKey lies outside the bounds of the range.
throw IllegalArgumentException if !inRange(toKey,toInclusive).
throw IllegalArgumentException if fromKey is greater than toKey; or if this map itself has a restricted range, and fromKey or toKey lies outside the bounds of the range.
throw NullPointerException if cpr != null.
throw NullPointerException if the specified key is null and this map uses natural ordering, or its comparator does not permit null keys.
throw IllegalArgumentException if !inRange(toKey,inclusive).
throw IllegalArgumentException if this map itself has a restricted range, and toKey lies outside the bounds of the range.
throw IllegalArgumentException if !inRange(toKey,inclusive).
throw IllegalArgumentException if this map itself has a restricted range, and toKey lies outside the bounds of the range.
throw IllegalArgumentException if !inRange(fromKey,inclusive).
throw IllegalArgumentException if this map itself has a restricted range, and fromKey lies outside the bounds of the range.
throw IllegalArgumentException if !inRange(fromKey,inclusive).
throw IllegalArgumentException if this map itself has a restricted range, and fromKey lies outside the bounds of the range.
throw NullPointerException if field == null.
throw NullPointerException if field, a, or b is null.
throw NullPointerException if a == null.
throw NullPointerException if field, a, or b is null.
throw NullPointerException if b == null.
throw NullPointerException if field, a, or b is null.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty().
throw IllegalArgumentException if prompt is null or if prompt has a length of 0.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames has length 0.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames has length 0.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames has length 0.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames has length 0.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames and extraMetadataFormatClassNames are neither both null, nor of the same length.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames and extraMetadataFormatClassNames are neither both null, nor of the same length.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames and extraMetadataFormatClassNames are neither both null, nor of the same length.
throw IllegalArgumentException if extraMetadataFormatNames != null.
throw IllegalArgumentException if extraMetadataFormatNames and extraMetadataFormatClassNames are neither both null, nor of the same length.
throw IllegalStateException if !hasController().
throw IllegalStateException if there is no controller currently installed.
throw IllegalArgumentException if formatName == null.
throw IllegalArgumentException if formatName is null or is not one of the names recognized by the plug-in.
throw IllegalArgumentException if formatClassName == null.
throw IllegalArgumentException if formatName is null or is not one of the names recognized by the plug-in.
throw IOException if page == null.
throw IOException if for a null or invalid URL specification.
throw IOException if url == null.
throw IOException if for a null or invalid URL specification.
throw BadLocationException if pos < -1 || pos > getDocument() dot getLength().
throw BadLocationException if the given position is not a valid position within the document.
throw IllegalArgumentException if n < 0.
throw IllegalArgumentException if If n is negative.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if defaultName is null, or if defaultName has a length of 0.
throw IllegalArgumentException if prompt == null || prompt dot isEmpty() || defaultName == null || defaultName dot isEmpty().
throw IllegalArgumentException if prompt is null, if prompt has a length of 0, if defaultName is null, or if defaultName has a length of 0.
throw IllegalArgumentException if vendorName == null.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if version == null.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if vendorName == null.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if version == null.
throw IllegalArgumentException if version is null.
throw InvalidNameException if suffix instanceof CompoundName.
throw InvalidNameException if If n is not a compound name, or if the addition of the components violates the syntax of this compound name (e dot g dot  exceeding number of components).
throw InvalidNameException if n instanceof CompoundName.
throw InvalidNameException if If n is not a compound name, or if the addition of the components violates the syntax of this compound name (e dot g dot  exceeding number of components).
throw ClassCastException if !(obj instanceof CompoundName).
throw ClassCastException if obj is not a CompoundName.
throw UnsupportedOperationException if fullName == null.
throw UnsupportedOperationException if the notion of full name does not apply to this binding in the naming system.
throw NullPointerException if flavor == null.
throw NullPointerException if flavor is null.
throw NullPointerException if flavor == null.
throw NullPointerException if flavor is null.
throw UnsupportedFlavorException if cntnts == null.
throw UnsupportedFlavorException if the requested DataFlavor is not available.
throw IllegalArgumentException if window == null.
throw IllegalArgumentException if window is null.
throw DateTimeException if !JapaneseChronology dot JCAL dot validate(jdate).
throw DateTimeException if the value of any field is out of range, or if the day-of-month is invalid for the month-year.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw DateTimeException if Chronology dot from(temporal) dot equals(IsoChronology dot INSTANCE) == false.
throw DateTimeException if unable to make the adjustment.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw IllegalArgumentException if outputTypes == null.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if outputTypes dot length == 0.
throw IllegalArgumentException if vendorName is null.
throw IllegalArgumentException if outputTypes == null.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if outputTypes dot length == 0.
throw IllegalArgumentException if version is null.
throw IllegalArgumentException if outputTypes == null.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if outputTypes dot length == 0.
throw IllegalArgumentException if names is null or has length 0.
throw IllegalArgumentException if outputTypes == null.
throw IllegalArgumentException if writerClassName is null.
throw IllegalArgumentException if outputTypes dot length == 0.
throw IllegalArgumentException if writerClassName is null.
throw IllegalArgumentException if outputTypes == null.
throw IllegalArgumentException if outputTypes is null or has length 0.
throw IllegalArgumentException if outputTypes dot length == 0.
throw IllegalArgumentException if outputTypes is null or has length 0.
throw IllegalArgumentException if writer == null.
throw IllegalArgumentException if writer is null.
throw NullPointerException if value == null.
throw NullPointerException if value is null.
throw SecurityException if krb5Principal dot isRealmDeduced() && !Realm dot AUTODEDUCEREALM.
throw SecurityException if a security manager is installed and name does not contain the realm to use, and a proper ServicePermission as described above is not granted.
throw IllegalArgumentException if value == null.
throw IllegalArgumentException if The specified modulus is null or the modulus value is less than zero.
throw IllegalArgumentException if value dot longValue() < 0L.
throw IllegalArgumentException if The specified modulus is null or the modulus value is less than zero.
throw IllegalArgumentException if value == null.
throw IllegalArgumentException if The specified offset is null or the offset value is less than zero.
throw IllegalArgumentException if value dot longValue() < 0L.
throw IllegalArgumentException if The specified offset is null or the offset value is less than zero.
throw IllegalArgumentException if value == null.
throw IllegalArgumentException if The specified threshold is null or the threshold value is less than zero.
throw IllegalArgumentException if value dot longValue() < 0L.
throw IllegalArgumentException if The specified threshold is null or the threshold value is less than zero.
throw NullPointerException if name == null.
throw NullPointerException if the name is null.
throw NullPointerException if subscriber == null.
throw NullPointerException if subscriber is null.
throw NullPointerException if executor == null.
throw NullPointerException if executor is null.
throw IllegalArgumentException if maxBufferCapacity <= 0.
throw IllegalArgumentException if maxBufferCapacity not positive.
throw NullPointerException if subscriber == null.
throw NullPointerException if subscriber is null.
throw NullPointerException if consumer == null.
throw NullPointerException if consumer is null.
throw NullPointerException if error == null.
throw NullPointerException if error is null.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly.
throw ReadOnlyBufferException if If this buffer is backed by an array but is read-only.
throw UnsupportedOperationException if hb == null.
throw UnsupportedOperationException if If this buffer is not backed by an accessible array.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw ReadOnlyBufferException if isReadOnly().
throw ReadOnlyBufferException if If this buffer is read-only.
throw NullPointerException if ks == null.
throw NullPointerException if validatingKey or node is null.
throw NullPointerException if validatingKey == null.
throw NullPointerException if validatingKey or node is null.
throw NullPointerException if node == null.
throw NullPointerException if node is null.
throw NullPointerException if obj instanceof Double || obj instanceof Float.
throw NullPointerException if obj is null.
throw IllegalArgumentException if obj instanceof Double || obj instanceof Float.
throw IllegalArgumentException if when the Format cannot format the given object.
throw IllegalArgumentException if newValue < 0 || newValue > 127.
throw IllegalArgumentException if newValue is negative or larger than 127.
throw IllegalArgumentException if editor == null.
throw IllegalArgumentException if editor is null.
throw IllegalArgumentException if model == null.
throw IllegalArgumentException if model is null.
throw NullPointerException if model == null.
throw NullPointerException if the model is null.
throw NullPointerException if mdName == null.
throw NullPointerException if mdName is null.
throw IOException if count != serializable.
throw IOException if serialization failed.
throw NullPointerException if bcml == null.
throw NullPointerException if the argument is null.
throw NullPointerException if bcml == null.
throw NullPointerException if the argument is null.
throw NullPointerException if name == null.
throw NullPointerException if the argument is null.
throw NullPointerException if bcc == null.
throw NullPointerException if the argument is null.
throw IllegalArgumentException if child instanceof BeanContextChild && child instanceof BeanContextProxy.
throw IllegalArgumentException if child implements both BeanContextChild and BeanContextProxy.
throw PropertyVetoException if "beanContext" dot equals(propertyName) && containsKey(source) && !getBeanContextPeer() dot equals(pce dot getNewValue()).
throw PropertyVetoException if the recipient wishes the property change to be rolled back.
throw IllegalStateException if offer(e).
throw IllegalStateException if the element cannot be added at this time due to capacity restrictions.
throw NullPointerException if c == null.
throw NullPointerException if the specified collection contains a null element and this queue does not permit null elements, or if the specified collection is null.
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if some property of an element of the specified collection prevents it from being added to this queue, or if the specified collection is this queue.
throw NoSuchElementException if x != null.
throw NoSuchElementException if this queue is empty.
throw NoSuchElementException if x != null.
throw NoSuchElementException if this queue is empty.
throw UnsupportedLookAndFeelException if (newLookAndFeel != null) && !newLookAndFeel dot isSupportedLookAndFeel().
throw UnsupportedLookAndFeelException if lnf dot isSupportedLookAndFeel() is false.
throw IllegalArgumentException if id == KEY_TYPED.
throw IllegalArgumentException if id is KEY_TYPED and keyChar is CHAR_UNDEFINED; or if id is KEY_TYPED and keyCode is not VK_UNDEFINED.
throw IllegalArgumentException if id == KEY_TYPED.
throw IllegalArgumentException if id is KEY_TYPED and keyChar is CHAR_UNDEFINED; or if id is KEY_TYPED and keyCode is not VK_UNDEFINED.
throw IllegalArgumentException if id == KEY_TYPED.
throw IllegalArgumentException if id is KEY_TYPED and keyChar is CHAR_UNDEFINED; or if id is KEY_TYPED and keyCode is not VK_UNDEFINED.
throw IllegalArgumentException if (keyLocation < KEY_LOCATION_UNKNOWN) || (keyLocation > KEY_LOCATION_NUMPAD).
throw IllegalArgumentException if id is KEY_TYPED and keyChar is CHAR_UNDEFINED; or if id is KEY_TYPED and keyCode is not VK_UNDEFINED.
throw IllegalArgumentException if id == KEY_TYPED.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if id == KEY_TYPED.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if id == KEY_TYPED.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if (keyLocation < KEY_LOCATION_UNKNOWN) || (keyLocation > KEY_LOCATION_NUMPAD).
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if minPass < 0.
throw IllegalArgumentException if minPass is negative, numPasses is negative or 0, or numPasses is smaller than Integer dot MAX_VALUE but minPass + numPasses - 1 is greater than INTEGER dot MAX_VALUE.
throw IllegalArgumentException if numPasses <= 0.
throw IllegalArgumentException if minPass is negative, numPasses is negative or 0, or numPasses is smaller than Integer dot MAX_VALUE but minPass + numPasses - 1 is greater than INTEGER dot MAX_VALUE.
throw IllegalArgumentException if (numPasses != Integer dot MAX_VALUE) && (((minPass + numPasses - 1) & 0x80000000) != 0).
throw IllegalArgumentException if minPass is negative, numPasses is negative or 0, or numPasses is smaller than Integer dot MAX_VALUE but minPass + numPasses - 1 is greater than INTEGER dot MAX_VALUE.
throw IllegalArgumentException if size == null.
throw IllegalArgumentException if either the width or the height is negative or 0.
throw UnsupportedOperationException if !canSetSourceRenderSize().
throw UnsupportedOperationException if image resizing is not supported by this plug-in.
throw IllegalArgumentException if destinationBands == null.
throw IllegalArgumentException if destinationBands contains a negative or duplicate value.
throw IllegalArgumentException if destinationBands == null.
throw IllegalArgumentException if destinationBands contains a negative or duplicate value.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if initialized == false.
throw IllegalStateException if this Mac has not been initialized.
throw IllegalStateException if serialFilter != null && serialFilter != ObjectInputFilter dot Config dot getSerialFilter().
throw IllegalStateException if the current filter is not null and is not the system-wide filter.
throw IndexOutOfBoundsException if off < 0 || len < 0 || endoff > buf dot length || endoff < 0.
throw IndexOutOfBoundsException if If off is negative, len is negative, or len is greater than buf dot length - off.
throw EOFException if count < 0.
throw EOFException if If end of file is reached.
throw EOFException if n < 0.
throw EOFException if If end of file is reached.
throw EOFException if v < 0.
throw EOFException if If end of file is reached.
throw NullPointerException if buf == null.
throw NullPointerException if buf is null.
throw IndexOutOfBoundsException if off < 0 || len < 0 || endoff > buf dot length || endoff < 0.
throw IndexOutOfBoundsException if off is negative, len is negative, or len is greater than buf dot length - off.
throw NotActiveException if ctx == null.
throw NotActiveException if the stream is not currently reading objects.
throw NotActiveException if depth == 0.
throw NotActiveException if The stream is not currently reading objects so it is invalid to register a callback.
throw NotActiveException if ctx == null.
throw NotActiveException if the stream is not currently reading objects.
throw EOFException if v < 0.
throw EOFException if If end of file is reached.
throw EOFException if v < 0.
throw EOFException if If end of file is reached.
throw StreamCorruptedException if s0 != STREAM_MAGIC || s1 != STREAM_VERSION.
throw StreamCorruptedException if control information in the stream is inconsistent.
throw IllegalArgumentException if millis < 0.
throw IllegalArgumentException if the value of millis is negative, or the value of nanos is not in the range 0-999999.
throw IllegalArgumentException if nanos < 0 || nanos > 999999.
throw IllegalArgumentException if the value of millis is negative, or the value of nanos is not in the range 0-999999.
throw IllegalThreadStateException if isAlive().
throw IllegalThreadStateException if this thread is alive.
throw IllegalThreadStateException if threadStatus != 0.
throw IllegalThreadStateException if the thread was already started.
throw IllegalArgumentException if newPriority > MAX_PRIORITY || newPriority < MIN_PRIORITY.
throw IllegalArgumentException if If the priority is not in the range MIN_PRIORITY to MAX_PRIORITY.
throw IllegalArgumentException if dstSavings <= 0.
throw IllegalArgumentException if the month, day, dayOfWeek, time more, or time parameters are out of range for the start or end rule, or if a time mode value is invalid.
throw IllegalArgumentException if era != GregorianCalendar dot AD && era != GregorianCalendar dot BC.
throw IllegalArgumentException if the era, month, day, dayOfWeek, or millis parameters are out of range.
throw IllegalArgumentException if (cdate dot getNormalizedYear() != y) || (cdate dot getMonth() != m) || (cdate dot getDayOfMonth() != day)|| (dayOfWeek < Calendar dot SUNDAY || dayOfWeek > Calendar dot SATURDAY)|| (millis < 0 || millis >= (24 * 60 * 60* 1000)).
throw IllegalArgumentException if the era, month, day, dayOfWeek, or millis parameters are out of range.
throw SQLException if (property < ResultSetMetaData dot columnNoNulls) || property > ResultSetMetaData dot columnNullableUnknown.
throw SQLException if a database access error occurs, the given column number is out of bounds, or the value supplied for the property parameter is not one of the following constants: ResultSetMetaData dot columnNoNulls, ResultSetMetaData dot columnNullable, or ResultSetMetaData dot columnNullableUnknown.
throw SQLException if size < 0.
throw SQLException if a database access error occurs, the given column number is out of bounds, or size is less than 0.
throw SQLException if precision < 0.
throw SQLException if a database access error occurs, columnIndex is out of bounds, or precision is less than 0.
throw SQLException if scale < 0.
throw SQLException if a database access error occurs, columnIndex is out of bounds, or scale is less than 0.
throw SQLException if columnCount <= 0.
throw SQLException if the given number is equal to or less than zero.
throw SQLException if isWrapperFor(iface).
throw SQLException if If no object found that implements the interface.
throw IllegalArgumentException if alignment == null.
throw IllegalArgumentException if alignment is null.
throw IllegalArgumentException if existingComponent == null || newComponent == null.
throw IllegalArgumentException if either of the components are null or existingComponent is not being managed by this layout manager.
throw IllegalArgumentException if info == null.
throw IllegalArgumentException if either of the components are null or existingComponent is not being managed by this layout manager.
throw IllegalArgumentException if component == null.
throw IllegalArgumentException if component is null.
throw IllegalArgumentException if components == null.
throw IllegalArgumentException if components is null, or contains null; or axis is not SwingConstants dot HORIZONTAL or SwingConstants dot VERTICAL.
throw IllegalArgumentException if components[counter] == null.
throw IllegalArgumentException if components is null, or contains null; or axis is not SwingConstants dot HORIZONTAL or SwingConstants dot VERTICAL.
throw IllegalArgumentException if axis == SwingConstants dot HORIZONTAL.
throw IllegalArgumentException if components is null, or contains null; or axis is not SwingConstants dot HORIZONTAL or SwingConstants dot VERTICAL.
throw IllegalArgumentException if host == null.
throw IllegalArgumentException if host is null.
throw IllegalArgumentException if group == null.
throw IllegalArgumentException if group is null.
throw IllegalArgumentException if group == null.
throw IllegalArgumentException if group is null.
throw IllegalArgumentException if button < NOBUTTON.
throw IllegalArgumentException if button is less than zero.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if button is less than zero.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if button is less than zero.
throw IllegalArgumentException if button < NOBUTTON.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if button < NOBUTTON.
throw IllegalArgumentException if button is greater than BUTTON3 and the support for extended mouse buttons is disabled by Java.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if button is greater than BUTTON3 and the support for extended mouse buttons is disabled by Java.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if button is greater than BUTTON3 and the support for extended mouse buttons is disabled by Java.
throw IllegalArgumentException if button < NOBUTTON.
throw IllegalArgumentException if button is greater than the current number of buttons and the support for extended mouse buttons is enabled by Java.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if button is greater than the current number of buttons and the support for extended mouse buttons is enabled by Java.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if button is greater than the current number of buttons and the support for extended mouse buttons is enabled by Java.
throw IllegalArgumentException if button < NOBUTTON.
throw IllegalArgumentException if an invalid button value is passed in.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if an invalid button value is passed in.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if an invalid button value is passed in.
throw IllegalArgumentException if button < NOBUTTON.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if button > BUTTON3.
throw IllegalArgumentException if source is null.
throw IllegalArgumentException if (x < 0 dot 0) || (y < 0 dot 0) || (w <= 0 dot 0)|| (h <= 0 dot 0)|| (units < 1).
throw IllegalArgumentException if x < 0 or y < 0 or w <= 0 or h <= 0 or units < 1.
throw IllegalArgumentException if (x < 0) || (y < 0) || (w <= 0)|| (h <= 0)|| (units < 1).
throw IllegalArgumentException if x < 0 or y < 0 or w <= 0 or h <= 0 or units < 1.
throw NullPointerException if name == null.
throw NullPointerException if enumType or name is null.
throw DateTimeException if dayOfMonth > 28.
throw DateTimeException if the value of any argument is out of range, or if the day-of-month is invalid for the month-of-year.
throw DateTimeException if dayOfMonth > 28.
throw DateTimeException if the value of any argument is out of range, or if the day-of-month is invalid for the month-of-year.
throw IllegalArgumentException if this dot formats dot length == 0.
throw IllegalArgumentException if the given formats is not "java dot class" or "java dot properties".
throw IllegalArgumentException if !FORMAT_CLASS dot equals(f) && !FORMAT_PROPERTIES dot equals(f).
throw IllegalArgumentException if the given formats is not "java dot class" or "java dot properties".
throw IllegalArgumentException if listener == null.
throw IllegalArgumentException if thrown if the listener is null.
throw IllegalArgumentException if streamNumber < 0 || streamNumber > 65536.
throw IllegalArgumentException if If association is null, or the streamNumber is negative or greater than 65536.
throw IllegalArgumentException if association == null.
throw IllegalArgumentException if If association is null, or the streamNumber is negative or greater than 65536.
throw IllegalArgumentException if streamNumber < 0 || streamNumber > 65536.
throw IllegalArgumentException if If association is null, or the streamNumber is negative or greater than 65536.
throw IllegalArgumentException if iv == null.
throw IllegalArgumentException if iv is null.
throw IllegalArgumentException if iv dot length - offset < blockSize.
throw IllegalArgumentException if iv is null.
throw IllegalArgumentException if (highValue == null) || (lowValue == null).
throw IllegalArgumentException if The specified high/low threshold is null or the low threshold is greater than the high threshold or the high threshold and the low threshold are not of the same type.
throw IllegalArgumentException if highValue dot getClass() != lowValue dot getClass().
throw IllegalArgumentException if The specified high/low threshold is null or the low threshold is greater than the high threshold or the high threshold and the low threshold are not of the same type.
throw IllegalArgumentException if isFirstStrictlyGreaterThanLast(lowValue,highValue,highValue dot getClass() dot getName()).
throw IllegalArgumentException if The specified high/low threshold is null or the low threshold is greater than the high threshold or the high threshold and the low threshold are not of the same type.
throw NullPointerException if name == null.
throw NullPointerException if name is null.
throw IllegalArgumentException if (length + offset) > buf dot length || length < 0 || (length + offset) < 0.
throw IllegalArgumentException if the length is negative of if the length is greater than the packet's data buffer length.
throw NullPointerException if buf == null.
throw NullPointerException if the argument is null.
throw IllegalArgumentException if address == null || !(address instanceof InetSocketAddress).
throw IllegalArgumentException if address is null or is a SocketAddress subclass not supported by this socket.
throw IllegalArgumentException if addr dot isUnresolved().
throw IllegalArgumentException if address is null or is a SocketAddress subclass not supported by this socket.
throw NullPointerException if algorithm == null.
throw NullPointerException if encodedKey or algorithm is null.
throw IllegalArgumentException if algorithm dot isEmpty().
throw IllegalArgumentException if algorithm is the empty string "".
throw UnsupportedTemporalTypeException if unitDur dot getSeconds() > LocalTime dot SECONDS_PER_DAY.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if (LocalTime dot NANOS_PER_DAY % dur) != 0.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw UnsupportedTemporalTypeException if unit instanceof ChronoUnit.
throw UnsupportedTemporalTypeException if the unit is not supported.
throw IllegalArgumentException if noUnnorm.
throw IllegalArgumentException if If this ComponentColorModel does not support the unnormalized form.
throw IllegalArgumentException if noUnnorm.
throw IllegalArgumentException if the length of normComponents minus normOffset is less than numComponents.
throw IllegalArgumentException if numComponents == 1.
throw IllegalArgumentException if pixel values for this ColorModel are not conveniently representable as a single int.
throw IllegalArgumentException if numComponents > 1.
throw IllegalArgumentException if pixel values for this ColorModel are not conveniently representable as a single int.
throw IllegalArgumentException if signed.
throw IllegalArgumentException if pixel values for this ColorModel are not conveniently representable as a single int.
throw IllegalArgumentException if numComponents > 1.
throw IllegalArgumentException if If this ComponentColorModel does not support the unnormalized form.
throw IllegalArgumentException if noUnnorm.
throw IllegalArgumentException if If this ComponentColorModel does not support the unnormalized form.
throw IllegalArgumentException if noUnnorm.
throw IllegalArgumentException if If this ComponentColorModel does not support the unnormalized form.
throw IllegalArgumentException if intpixel dot length < numComponents.
throw IllegalArgumentException if If this ComponentColorModel does not support the unnormalized form.
throw IllegalArgumentException if components == null.
throw IllegalArgumentException if If this ComponentColorModel does not support the unnormalized form.
throw UnsupportedOperationException if pixel instanceof int[].
throw UnsupportedOperationException if in some cases iff the transfer type of this ComponentColorModel is not one of the following transfer types: DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, or DataBuffer dot TYPE_INT.
throw IllegalArgumentException if numComponents > 1.
throw IllegalArgumentException if If the components array is not null and is not large enough to hold all the color and alpha components (starting at offset), or if pixel is not large enough to hold a pixel value for this ColorModel.
throw IllegalArgumentException if noUnnorm.
throw IllegalArgumentException if If the components array is not null and is not large enough to hold all the color and alpha components (starting at offset), or if pixel is not large enough to hold a pixel value for this ColorModel.
throw IllegalArgumentException if noUnnorm.
throw IllegalArgumentException if If the components array is not null and is not large enough to hold all the color and alpha components (starting at offset), or if pixel is not large enough to hold a pixel value for this ColorModel.
throw IllegalArgumentException if intpixel dot length < numComponents.
throw IllegalArgumentException if If the components array is not null and is not large enough to hold all the color and alpha components (starting at offset), or if pixel is not large enough to hold a pixel value for this ColorModel.
throw IllegalArgumentException if components == null.
throw IllegalArgumentException if If the components array is not null and is not large enough to hold all the color and alpha components (starting at offset), or if pixel is not large enough to hold a pixel value for this ColorModel.
throw UnsupportedOperationException if isAlphaPremultiplied.
throw UnsupportedOperationException if the transfer type of this ComponentColorModel is not one of the supported transfer types: DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, DataBuffer dot TYPE_INT, DataBuffer dot TYPE_SHORT, DataBuffer dot TYPE_FLOAT, or DataBuffer dot TYPE_DOUBLE.
throw UnsupportedOperationException if isAlphaPremultiplied.
throw UnsupportedOperationException if the transfer type of this ComponentColorModel is not one of the supported transfer types: DataBuffer dot TYPE_BYTE, DataBuffer dot TYPE_USHORT, DataBuffer dot TYPE_INT, DataBuffer dot TYPE_SHORT, DataBuffer dot TYPE_FLOAT, or DataBuffer dot TYPE_DOUBLE.
throw IllegalArgumentException if iv == null.
throw IllegalArgumentException if iv is null or (iv dot length - offset < len).
throw IllegalArgumentException if iv dot length - offset < len.
throw IllegalArgumentException if iv is null or (iv dot length - offset < len).
throw ArrayIndexOutOfBoundsException if len < 0.
throw ArrayIndexOutOfBoundsException if is thrown if offset or len index bytes outside the iv.
throw IllegalArgumentException if bufLen <= 0.
throw IllegalArgumentException if bufLen <= 0.
throw NullPointerException if out == null.
throw NullPointerException if out or infl is null.
throw NullPointerException if infl == null.
throw NullPointerException if out or infl is null.
throw IndexOutOfBoundsException if b == null.
throw IndexOutOfBoundsException if off < 0, or if len < 0, or if len > b dot length - off.
throw NullPointerException if b == null.
throw NullPointerException if b is null.
throw ZipException if inf dot needsDictionary().
throw ZipException if a compression (ZIP) format error occurs.
throw IllegalArgumentException if defaultFractionDigits == Integer dot MIN_VALUE.
throw IllegalArgumentException if the country of the given locale is not a supported ISO 3166 country code.
throw IllegalArgumentException if defaultFractionDigits == Integer dot MIN_VALUE.
throw IllegalArgumentException if the country of the given locale is not a supported ISO 3166 country code.
throw IllegalArgumentException if country == null || !country dot matches("^[a-zA-Z]{2}$").
throw IllegalArgumentException if the country of the given locale is not a supported ISO 3166 country code.
throw IllegalArgumentException if (tableEntry & COUNTRY_TYPE_MASK) == SIMPLE_CASE_COUNTRY_MASK && tableEntry != INVALID_COUNTRY_ENTRY.
throw IllegalArgumentException if the country of the given locale is not a supported ISO 3166 country code.
throw NullPointerException if stylesheet == null.
throw NullPointerException if stylesheet is null.
throw ChangedCharSetException if elem == dtd dot meta && !ignoreCharSet.
throw ChangedCharSetException if the document charset was changed.
throw ChangedCharSetException if elem == dtd dot meta && !ignoreCharSet.
throw ChangedCharSetException if the document charset was changed.
throw NullPointerException if mdName == null.
throw NullPointerException if mdName, mgfName, or pSrc is null.
throw NullPointerException if mgfName == null.
throw NullPointerException if mdName, mgfName, or pSrc is null.
throw NullPointerException if pSrc == null.
throw NullPointerException if mdName, mgfName, or pSrc is null.
throw NullPointerException if target == null.
throw NullPointerException if target is null.
throw NullPointerException if action == null.
throw NullPointerException if target is null.
throw NullPointerException if target == null.
throw NullPointerException if action is null.
throw NullPointerException if action == null.
throw NullPointerException if action is null.
throw NullPointerException if listenerInterface == null.
throw NullPointerException if listenerInterface is null.
throw NullPointerException if listenerInterface == null.
throw NullPointerException if target is null.
throw NullPointerException if listenerInterface == null.
throw NullPointerException if action is null.
throw NullPointerException if type == null || algorithm == null || format == null || encoded == null.
throw NullPointerException if type is null, if algorithm is null, if format is null, or if encoded is null.
throw IllegalArgumentException if lengths == null || values == null || lengths dot length == 0 || values dot length == 0 || lengths dot length > 16 || values dot length > 256.
throw IllegalArgumentException if lengths or values are null, the length of lengths is greater than 16, the length of values is greater than 256, if any value in lengths or values is less than zero, or if the arrays do not describe a valid Huffman table.
throw IllegalArgumentException if lengths[i] < 0.
throw IllegalArgumentException if lengths or values are null, the length of lengths is greater than 16, the length of values is greater than 256, if any value in lengths or values is less than zero, or if the arrays do not describe a valid Huffman table.
throw IllegalArgumentException if values[i] < 0.
throw IllegalArgumentException if lengths or values are null, the length of lengths is greater than 16, the length of values is greater than 256, if any value in lengths or values is less than zero, or if the arrays do not describe a valid Huffman table.
throw NullPointerException if name == null.
throw NullPointerException if name is null.
throw NullPointerException if property == null.
throw NullPointerException if If property is null.
throw IllegalArgumentException if len < 2 || q dot charAt(0) != '"' || q dot charAt(len - 1) != '"'.
throw IllegalArgumentException if q could not have been returned by the quote(java dot lang dot String) method, for instance if it does not begin and end with a quote (").
throw IllegalArgumentException if c == '\\'.
throw IllegalArgumentException if q could not have been returned by the quote(java dot lang dot String) method, for instance if it does not begin and end with a quote (").
throw IllegalArgumentException if c == '\\'.
throw IllegalArgumentException if q could not have been returned by the quote(java dot lang dot String) method, for instance if it does not begin and end with a quote (").
throw IllegalArgumentException if c == '\\'.
throw IllegalArgumentException if q could not have been returned by the quote(java dot lang dot String) method, for instance if it does not begin and end with a quote (").
throw IllegalArgumentException if c == this.
throw IllegalArgumentException if the collection is this deque.
throw NullPointerException if a == null.
throw NullPointerException if the specified array is null.
throw IllegalArgumentException if actions != null && actions dot length() > 0.
throw IllegalArgumentException if the name is not * or one of the allowed names or a comma-separated list of the allowed names, or if actions is a non-null non-empty string.
throw IllegalArgumentException if actions != null && actions dot length() > 0.
throw IllegalArgumentException if name is empty or if arguments are invalid.
throw IllegalArgumentException if scope == ENGINE_SCOPE.
throw IllegalArgumentException if the value of scope is invalid.
throw NullPointerException if bindings == null.
throw NullPointerException if the value of scope is ENGINE_SCOPE and the specified Bindings is null.
throw CloneNotSupportedException if this instanceof Cloneable.
throw CloneNotSupportedException if this is called on an implementation that does not support Cloneable.
throw SignatureException if len < sig dot length.
throw SignatureException if the engine is not initialized properly, if this signature algorithm is unable to process the input data provided, or if len is less than the actual signature length.
throw SignatureException if outbuf dot length - offset < sig dot length.
throw SignatureException if the engine is not initialized properly, if this signature algorithm is unable to process the input data provided, or if len is less than the actual signature length.
throw HeadlessException if GraphicsEnvironment dot isHeadless().
throw HeadlessException if GraphicsEnvironment dot isHeadless() returns true.
throw NullPointerException if regex == null.
throw NullPointerException if regex is null.
throw IllegalArgumentException if index == -1.
throw IllegalArgumentException if the specified value isn't allowed.
throw IllegalArgumentException if values == null || values dot size() == 0.
throw IllegalArgumentException if values is null or zero length.
throw IllegalArgumentException if values == null || values dot length == 0.
throw IllegalArgumentException if values is null or zero length.
throw IllegalArgumentException if (list == null) || (list dot size() == 0).
throw IllegalArgumentException if list is null or zero length.
throw NullPointerException if name == null.
throw NullPointerException if When the name parameter is null.
throw NullPointerException if name == null.
throw NullPointerException if When the name parameter is null.
throw NullPointerException if name == null.
throw NullPointerException if When the name parameter is null.
throw NullPointerException if name == null.
throw NullPointerException if When the name parameter is null.
throw NullPointerException if evt == null.
throw NullPointerException if evt is null.
throw SecurityException if context instanceof AccessControlContext.
throw SecurityException if the specified security context is not an instance of AccessControlContext (e dot g dot , is null), or is denied access to the resource specified by the given permission.
throw NullPointerException if host == null.
throw NullPointerException if the host argument is null.
throw NullPointerException if host == null.
throw NullPointerException if the host argument is null.
throw NullPointerException if host == null.
throw NullPointerException if the host argument is null.
throw NullPointerException if lib == null.
throw NullPointerException if the lib argument is null.
throw NullPointerException if t == null.
throw NullPointerException if the thread group argument is null.
throw NullPointerException if g == null.
throw NullPointerException if the thread group argument is null.
throw NullPointerException if fd == null.
throw NullPointerException if the file argument is null.
throw NullPointerException if fd == null.
throw NullPointerException if the file argument is null.
throw IllegalArgumentException if stream == null.
throw IllegalArgumentException if stream is null.
throw AttachNotSupportedException if vmd dot provider() != this.
throw AttachNotSupportedException if If the descriptor's provider() method returns a provider that is not this provider, or it does not correspond to a Java virtual machine to which this provider can attach.
throw UnsupportedTemporalTypeException if field instanceof ChronoField.
throw UnsupportedTemporalTypeException if the field is not supported.
throw DateTimeException if chrono == null.
throw DateTimeException if unable to convert to a ChronoLocalDate.
